{"version":3,"file":"index.js","sources":["../src/utils/isCheckBoxInput.js","../src/utils/isDateObject.js","../src/utils/isNullOrUndefined.js","../src/utils/isObject.js","../src/logic/getControllerValue.js","../src/logic/getNodeParentName.js","../src/logic/isNameInFieldArray.js","../src/utils/compact.js","../src/utils/isUndefined.js","../src/utils/get.js","../src/constants.js","../src/utils/omit.js","../src/useFormContext.js","../src/logic/getProxyFormState.js","../src/utils/isEmptyObject.js","../src/logic/shouldRenderFormState.js","../src/utils/convertToArrayPayload.js","../src/useFormState.js","../src/useController.js","../src/controller.js","../src/logic/appendErrors.js","../src/utils/isKey.js","../src/utils/stringToPath.js","../src/utils/set.js","../src/logic/focusFieldBy.js","../src/logic/getFocusFieldName.js","../src/logic/generateId.js","../src/logic/mapId.js","../src/utils/append.js","../src/utils/fillEmptyArray.js","../src/utils/insert.js","../src/utils/move.js","../src/utils/omitKeys.js","../src/utils/prepend.js","../src/utils/remove.js","../src/utils/swap.js","../src/utils/isBoolean.js","../src/utils/unset.js","../src/utils/update.js","../src/useFieldArray.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/utils/debounce.js","../src/utils/isPrimitive.js","../src/utils/deepEqual.js","../src/utils/getValidationModes.js","../src/utils/isFileInput.js","../src/utils/isFunction.js","../src/utils/isHTMLElement.js","../src/utils/isMultipleSelect.js","../src/utils/isRadioInput.js","../src/utils/isRadioOrCheckbox.js","../src/utils/isString.js","../src/utils/isWeb.js","../src/utils/Subject.js","../src/logic/getCheckboxValue.js","../src/logic/getFieldValueAs.js","../src/logic/getMultipleSelectValue.js","../src/logic/getRadioValue.js","../src/logic/getFieldValue.js","../src/logic/getResolverOptions.js","../src/logic/hasValidation.js","../src/utils/deepMerge.js","../src/logic/setFieldArrayDirtyFields.js","../src/logic/skipValidation.js","../src/logic/unsetEmptyArray.js","../src/utils/isMessage.js","../src/utils/isRegex.js","../src/logic/getValidateError.js","../src/logic/getValueAndMessage.js","../src/logic/validateField.js","../src/logic/createFormControlV3.js","../src/utils/live.js","../src/useForm.js","../src/useWatch.js","../src/tools/useHistory.js","../src/utils/jsonata.js","../src/tools/transformer.js","../src/tools/useDynamoHistory.js","../src/middleware/dataTransformer.js","../src/middleware/schemaTransformer.js","../src/utils/flattenObject.js","../src/middleware/schemaProxy.js","../src/middleware/setupProxy.js","../src/middleware/actionsRunner.js","../src/utils/defaultValidationResolver.js","../src/builder/FormBuilderV1.js","../src/builder/FormBuilderV2.js","../src/logic/createFormControlV4.js","../src/useFormV1.js","../src/builder/FormBuilderV5.js"],"sourcesContent":["export default (element) => element.type === 'checkbox';\n","export default (data) => data instanceof Date;","export default (value) => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\nexport const isObjectType = (value) => typeof value === 'object';\nexport default (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\nexport default (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;","export default (name) => name.substring(0, name.search(/.\\d/)) || name;\n","import getNodeParentName from './getNodeParentName';\nexport default (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n","export default (value) => value.filter(Boolean);\n","export default (val) => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nexport default (obj, path, defaultValue) => {\n    if (isObject(obj) && path) {\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\n        return isUndefined(result) || result === obj\n            ? isUndefined(obj[path])\n                ? defaultValue\n                : obj[path]\n            : result;\n    }\n    return undefined;\n};","export const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};","export default (source, key) => {\n  const copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};","import * as React from 'react';\nimport omit from './utils/omit';\nconst FormContext = React.createContext(null);\nFormContext.displayName = 'RHFContext';\nexport const useFormContext = () => React.useContext(FormContext);\nexport const FormProvider = (props) => (React.createElement(FormContext.Provider, { value: omit(props, 'children') }, props.children));\n","import { VALIDATION_MODE } from '../constants';\n\nexport default (\n  formState,\n  _proxyFormState,\n  localProxyFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {};\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key),\n    });\n  }\n\n  return result;\n};\n","import isObject from './isObject';\nexport default (value) => isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\nexport default (formStateData, _proxyFormState, isRoot) => {\n    const formState = omit(formStateData, 'name');\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};","export default (value) => Array.isArray(value) ? value : [value];\n","import * as React from 'react';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport { useFormContext } from './useFormContext';\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, visible, name } = props || {};\n    const nameRef = React.useRef(name);\n    const [formState, updateFormState] = React.useState(control._formState.val);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    nameRef.current = name;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next: (formState) => (!nameRef.current ||\n                !formState.name ||\n                convertToArrayPayload(nameRef.current).includes(formState.name)) &&\n                shouldRenderFormState(formState, _localProxyFormState.current) &&\n                updateFormState(Object.assign(Object.assign({}, control._formState.val), formState)),\n        });\n        disabled && formStateSubscription.unsubscribe();\n        //Yasser ;)\n        // !visible && formStateSubscription.unsubscribe();\n        return () => formStateSubscription.unsubscribe();\n    }, [disabled, control]);\n    return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\nexport { useFormState };\n","import * as React from 'react';\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nexport function useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister, item } = props;\n    console.log(\"dyno ;)\", item, \"useController\");\n    const [value, setInputStateValue] = React.useState(get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)));\n    const formState = useFormState({\n        control: control || methods.control,\n        name,\n    });\n    // WTACHME: disable bug ;)\n    // TODO: move item from ref into item object seperately \n    // to prevent disable reaction about validation and submission\n    const registerProps = control.register(name, Object.assign(Object.assign({}, {...props.rules, item: {...item} }), { value }));\n    // console.log(\"dyno ;)\", registerProps,\"useController\")\n\n    const updateMounted = React.useCallback((name, value) => {\n        const field = get(control._fields, name);\n        if (field) {\n            field._f.mount = value;\n        }\n    }, [control]);\n    React.useEffect(() => {\n        const t = get(control._formValues, name, get(control._defaultValues, name, props.defaultValue))\n        console.log('[register] [useEffect]', name, item?.isArray, item?.defaultValue, t)\n        const controllerSubscription = control._subjects.control.subscribe({\n            next: (data) => {\n                // console.log(data, data.name, '[register] [next]')\n                (!data.name || name === data.name) &&\n                setInputStateValue(get(data.values, name))},\n        });\n        updateMounted(name, true);\n        return () => {\n            controllerSubscription.unsubscribe();\n            const _shouldUnregisterField = control._shouldUnregister || shouldUnregister;\n            if (isNameInFieldArray(control._names.array, name)\n                ? _shouldUnregisterField && !control._isInAction.val\n                : _shouldUnregisterField) {\n                control.unregister(name);\n            }\n            else {\n                updateMounted(name, false);\n            }\n        };\n    }, [name, control, shouldUnregister, updateMounted]);\n    return {\n        field: {\n            onChange: (event) => {\n                const value = getControllerValue(event);\n                setInputStateValue(value);\n                registerProps.onChange({\n                    target: {\n                        value,\n                        name: name,\n                    },\n                    type: EVENTS.CHANGE,\n                });\n            },\n            onBlur: () => {\n                registerProps.onBlur({\n                    target: {\n                        name: name,\n                    },\n                    type: EVENTS.BLUR,\n                });\n            },\n            name,\n            value,\n            ref: (elm) => elm &&\n                registerProps.ref({\n                    //todo item ;)\n                    // ...(props.item && props.item || {}),\n                    focus: () => elm.focus && elm.focus(),\n                    setCustomValidity: (message) => elm.setCustomValidity(message),\n                    reportValidity: () => elm.reportValidity(),\n                }),\n        },\n        formState,\n        fieldState: {\n            invalid: !!get(formState.errors, name),\n            isDirty: !!get(formState.dirtyFields, name),\n            isTouched: !!get(formState.touchedFields, name),\n            error: get(formState.errors, name),\n        },\n    };\n}","import { useController } from './useController';\nconst Controller = (props) => props.render(useController(props));\nexport { Controller };","export default (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n  ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n","export default (value) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input) =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\nexport default function set(object, path, value) {\n  let index = -1;\n  // console.log(\"dyno ;)\", isKey(path),stringToPath(path), \"setset\", object)\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const _f = field._f;\n            const current = omit(field, '_f');\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n                    break;\n                }\n                else if (_f.refs) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(current)) {\n                focusFieldBy(current, callback);\n            }\n        }\n    }\n};\nexport default focusFieldBy;","export default (name, index, options) => options && !options.shouldFocus\n    ? options.focusName || `${name}.${options.focusIndex}.`\n    : `${name}.${index}.`;","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import generateId from './generateId';\nexport default (values = [], keyName) => values.map((value) => (Object.assign({ [keyName]: (value && value[keyName]) || generateId() }, value)));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function append(data, value) {\n    return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}","export default (value) =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}","import isUndefined from './isUndefined';\n\nexport default (\n  data,\n  from,\n  to,\n) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import omit from './omit';\nexport default (fields, keyName) => fields.map((field = {}) => omit(field, keyName));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\n\nexport default (data, index) =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n      data,\n      (convertToArrayPayload(index)).sort((a, b) => a - b),\n    );\n","export default (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default (value) => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nexport default function unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}","export default (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import * as React from 'react';\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKey from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { useFormContext } from './useFormContext';\nexport const useFieldArray = (props) => {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const _focusName = React.useRef('');\n    const [fields, setFields] = React.useState(mapIds(control._getFieldArrayValue(name), keyName));\n    control._names.array.add(name);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(value);\n        const updatedFieldArrayValues = appendAt(control._getFieldArrayValue(name), appendValue);\n        control._bathFieldArrayUpdate(keyName, name, appendAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, updatedFieldArrayValues.length - appendValue.length, options);\n    };\n    const prepend = (value, options) => {\n        const updatedFieldArrayValues = prependAt(control._getFieldArrayValue(name), convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, prependAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, 0, options);\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArrayValue(name), index);\n        control._bathFieldArrayUpdate(keyName, name, removeArrayAt, {\n            argA: index,\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    const insert = (index, value, options) => {\n        const updatedFieldArrayValues = insertAt(control._getFieldArrayValue(name), index, convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, insertAt, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, index, options);\n    };\n    const swap = (indexA, indexB) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        swapArrayAt(fieldValues, indexA, indexB);\n        control._bathFieldArrayUpdate(keyName, name, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const move = (from, to) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        moveArrayAt(fieldValues, from, to);\n        control._bathFieldArrayUpdate(keyName, name, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const update = (index, value) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        const updatedFieldArrayValues = updateAt(fieldValues, index, value);\n        control._bathFieldArrayUpdate(keyName, name, updateAt, {\n            argA: index,\n            argB: value,\n        }, fieldValues, true, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    React.useEffect(() => {\n        control._isInAction.val = false;\n        if (control._names.watchAll) {\n            control._subjects.state.next({});\n        }\n        else {\n            for (const watchField of control._names.watch) {\n                if (name.startsWith(watchField)) {\n                    control._subjects.state.next({});\n                    break;\n                }\n            }\n        }\n        control._subjects.watch.next({\n            name,\n            values: control._formValues,\n        });\n        _focusName.current &&\n            focusFieldBy(control._fields, (key) => key.startsWith(_focusName.current));\n        _focusName.current = '';\n        control._subjects.array.next({\n            name,\n            values: omitKey([...fields], keyName),\n        });\n        control._proxyFormState.isValid && control._updateValid();\n    }, [fields, name, control, keyName]);\n    React.useEffect(() => {\n        const fieldArraySubscription = control._subjects.array.subscribe({\n            next(payload) {\n                if (payload.isReset) {\n                    unset(control._fields, payload.name || name);\n                    unset(control._formValues, payload.name || name);\n                    payload.name\n                        ? set(control._formValues, payload.name, payload.values)\n                        : payload.values && (control._formValues = payload.values);\n                    setFields(mapIds(get(control._formValues, name), keyName));\n                }\n            },\n        });\n        !get(control._formValues, name) && set(control._formValues, name, []);\n        return () => {\n            fieldArraySubscription.unsubscribe();\n            if (control._shouldUnregister || shouldUnregister) {\n                control.unregister(name);\n                unset(control._formValues, name);\n            }\n            else {\n                const fieldArrayValues = get(control._formValues, name);\n                fieldArrayValues && set(control._formValues, name, fieldArrayValues);\n            }\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [name, control, keyName]),\n        move: React.useCallback(move, [name, control, keyName]),\n        prepend: React.useCallback(prepend, [name, control, keyName]),\n        append: React.useCallback(append, [name, control, keyName]),\n        remove: React.useCallback(remove, [name, control, keyName]),\n        insert: React.useCallback(insert, [name, control, keyName]),\n        update: React.useCallback(update, [name, control, keyName]),\n        fields: fields,\n    };\n};","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export default (callback, wait) => {\n  let timer = 0;\n  return (...args) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n  };\n};","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nexport default (value) => isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\nexport default function deepEqual(object1, object2) {\n    if (isPrimitive(object1) ||\n        isPrimitive(object2) ||\n        isDateObject(object1) ||\n        isDateObject(object2)) {\n        return object1 === object2;\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isObject(val1) || Array.isArray(val1)) &&\n                (isObject(val2) || Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","import { VALIDATION_MODE } from '../constants';\nexport default (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});","export default (element) => element.type === 'file';\n","export default (value) => typeof value === 'function';\n","export default (value) => value instanceof HTMLElement;\n","export default (element) => element.type === `select-multiple`;\n","export default (element) => element.type === 'radio';\n","import isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\nexport default (ref) => isRadioInput(ref) || isCheckBoxInput(ref);","export default (value) => typeof value === 'string';\n","export default typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n","export class Subscription {\n  constructor() {\n      this.tearDowns = [];\n  }\n  add(tearDown) {\n      this.tearDowns.push(tearDown);\n  }\n  unsubscribe() {\n      for (const teardown of this.tearDowns) {\n          teardown();\n      }\n      this.tearDowns = [];\n  }\n}\nclass Subscriber {\n  constructor(observer, subscription) {\n      this.observer = observer;\n      this.closed = false;\n      subscription.add(() => (this.closed = true));\n  }\n  next(value) {\n      if (!this.closed) {\n          this.observer.next(value);\n      }\n  }\n}\nexport default class Subject {\n  constructor() {\n      this.observers = [];\n  }\n  next(value) {\n      for (const observer of this.observers) {\n          observer.next(value);\n      }\n  }\n  subscribe(observer) {\n      const subscription = new Subscription();\n      const subscriber = new Subscriber(observer, subscription);\n      this.observers.push(subscriber);\n      return subscription;\n  }\n  unsubscribe() {\n      this.observers = [];\n  }\n}","import isUndefined from '../utils/isUndefined';\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nexport default (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n","import isUndefined from '../utils/isUndefined';\nexport default (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : +value\n        : valueAsDate\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;","export default (options) => [...options]\n    .filter(({ selected }) => selected)\n    .map(({ value }) => value);","const defaultReturn = {\n  isValid: false,\n  value: null,\n};\nexport default (options) => Array.isArray(options)\n  ? options.reduce((previous, option) => option && option.checked && !option.disabled\n      ? {\n          isValid: true,\n          value: option.value,\n      }\n      : previous, defaultReturn)\n  : defaultReturn;","import isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\nexport default function getFieldValue(field) {\n    if (field && field._f) {\n        const ref = field._f.ref;\n        //TODO: findout why it is here ;) thanks to Edward ;)\n        // if (field._f.refs ? field._f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        //     return;\n        // }\n        if (isFileInput(ref)) {\n            return ref.files;\n        }\n        if (isRadioInput(ref)) {\n            return getRadioValue(field._f.refs).value;\n        }\n        if (isMultipleSelect(ref)) {\n            return getMultipleSelectValue(ref.options);\n        }\n        if (isCheckBox(ref)) {\n            return getCheckboxValue(field._f.refs).value;\n        }\n        return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\n    }\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\n\nexport default (\n  fieldsNames,\n  _fieldss,\n  criteriaMode,\n  shouldUseNativeValidation,\n) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fieldss, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (options, mounted) => mounted &&\n    options &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\nexport function deepMerge(target, source) {\n    if (isPrimitive(target) || isPrimitive(source)) {\n        return source;\n    }\n    for (const key in source) {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        try {\n            target[key] =\n                (isObject(targetValue) && isObject(sourceValue)) ||\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\n                    ? deepMerge(targetValue, sourceValue)\n                    : sourceValue;\n        }\n        catch (_a) { }\n    }\n    return target;\n}","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n    let index = -1;\n    while (++index < values.length) {\n        for (const key in values[index]) {\n            if (Array.isArray(values[index][key])) {\n                !dirtyFields[index] && (dirtyFields[index] = {});\n                dirtyFields[index][key] = [];\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n            }\n            else {\n                !isNullOrUndefined(defaultValues) &&\n                    deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n                    ? set(dirtyFields[index] || {}, key)\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\n            }\n        }\n        parentNode &&\n            !dirtyFields.length &&\n            delete parentNode[parentName];\n    }\n    return dirtyFields;\n}\nexport default (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n","export default ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\n  if (isOnAll) {\n      return false;\n  }\n  else if (!isSubmitted && isOnTouch) {\n      return !(isTouched || isBlurEvent);\n  }\n  else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n      return !isBlurEvent;\n  }\n  else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n      return isBlurEvent;\n  }\n  return true;\n};","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default (ref, name) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\nimport isString from './isString';\nexport default (value) => isString(value) || React.isValidElement(value);\n","export default (value) => value instanceof RegExp;\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nexport default function getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\nexport default async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    if (!mount) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidty = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n    };\n    if (required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n            (isBoolean(inputValue) && !inputValue) ||\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\n            (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: inputRef }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            if (isString(maxOutput.value)) {\n                exceedMax = valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value)) {\n                exceedMin = valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        console.log(\"dyno ;)\", isRegex(new RegExp(patternValue)), !inputValue.match(patternValue), patternValue, \"patternValue\")\n        if (isRegex(new RegExp(patternValue)) && !inputValue.match(patternValue)) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n                if (!validateAllFieldCriteria) {\n                    setCustomValidty(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n                if (validateError) {\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n                    setCustomValidty(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = Object.assign({ ref: inputRef }, validationResult);\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidty(true);\n    return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV3(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                    (_proxyFormState.touchedFields &&\n                        isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }) => {\n        // console.log(\"dyno ;)\", \"SUBMITFORM here\", _fields)\n        for (const name in _fields) {\n            const field = _fields[name];\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    console.log(\"dyno ;)\", fieldError,\"fieldError\")\n                    if (shouldCheckValid) {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                            break;\n                        }\n                    }\n                    else {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                        }\n                        fieldError[_f.name]\n                            ? set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name);\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({ isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n            ? _defaultValues\n            : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges,result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                ? [...result[0]]\n                : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues,\"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors, \"end\");\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        console.log(\"dyno ;)\", _formValues, _fields, \"fdfdfdfdfdfd\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                    fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), { refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name } }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), { onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                } });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import isHTMLElement from './isHTMLElement';\nexport default (ref) => !isHTMLElement(ref) || !document.contains(ref);\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV3 as createFormControlV2 } from './logic/createFormControlV3';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV2(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import * as React from 'react';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport isUndefined from './utils/isUndefined';\nimport { useFormContext } from './useFormContext';\nexport function useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\n        ? control._getWatch(name)\n        : defaultValue);\n    React.useEffect(() => {\n        const watchSubscription = control._subjects.watch.subscribe({\n            next: ({ name }) => {\n                console.log(\"dyno ;)\", \"##1 watchSubscription\", name)\n                return(!_name.current ||\n                !name ||\n                convertToArrayPayload(_name.current).some((fieldName) => name &&\n                    fieldName &&\n                    (fieldName.startsWith(name) ||\n                        name.startsWith(fieldName)))) &&\n                updateValue(control._getWatch(_name.current, defaultValue))},\n        });\n        disabled && watchSubscription.unsubscribe();\n        return () => watchSubscription.unsubscribe();\n    }, [disabled, control, defaultValue]);\n    return value;\n}","import { useMemo, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst rebuildHistory = (history = {}, to = 0, from = 0) => {\n    const newHistory = [...history].slice(from, to);\n    console.log(\"dyno ;)\", 'rebuildHistory', newHistory, to)\n    return new Set(newHistory);\n}\n\nexport default function useHistory(init = { name: \"\" }) {\n\n    const [states, setStates] = useState(init);\n\n    //history\n    const [history, updateHistory] = useState(new Set());\n    const [index, setIndex] = useState(0);\n    const [currentPage, updateCurrentPage] = useState(init?.name);\n\n    const state = useMemo(() => states[currentPage], [index, currentPage]);\n    // const state = useMemo(() => states[init?.name], [states, init.name]);\n\n    // {\n    //     \"dashboard\": { }\n    // }\n\n    const setState = (value) => {\n        if (value === undefined || value === null || value === {}) return;\n        // check the existing one with name\n        // { name: \"pageName\" }\n        const pageName = value.name;\n\n        const existing = _.get(states, pageName);\n\n        // check whether equal or it changed ;)\n        if (history.has(pageName)) {\n            // if (_.isEqual(existing, value)) {\n            // const existingPage = _.get(states,pageName);\n            // const newHistory = [...history].slice(0,existing[\"x-index\"]);\n            const newHistory = rebuildHistory(history, existing[\"x-index\"]);\n            updateHistory(newHistory)\n\n            const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": existing[\"x-index\"] }));\n            setStates(copy);\n\n            // updateHistory(new Set(newHistory));\n            setIndex(existing[\"x-index\"])\n            updateCurrentPage(pageName);\n\n            console.log(\"dyno ;)\", \"lolllllllllllllllllll\", history, '99999', existing[\"x-index\"], newHistory);\n            return;\n        }\n        console.log(\"dyno ;)\", \"histlori\", value, _.set(states, pageName, value), state, history.size)\n        const newIndex = index + 1;\n        const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": newIndex }));\n        // setIndex(pageName);\n        setIndex(newIndex);\n        // copy = _.set(copy,value.name, value);\n        updateHistory(history.add(pageName));\n        setStates(copy);\n        updateCurrentPage(pageName);\n        console.log(\"dyno ;)\", 'hissssstory', history)\n        console.log(\"dyno ;)\", value, 'drooooomemppppppphistlori', existing)\n        console.log(\"dyno ;)\", states, '31231232323132', state, currentPage, _.isEqual(existing, value))\n    }\n\n    const setStateOld = (value) => {\n        if (_.isEqual(state, value)) {\n            return;\n        }\n        const copy = _.cloneDeep(states);\n        copy.length = index + 1;\n        copy.push(value);\n        setStates(copy);\n        setIndex(copy.length - 1);\n        console.log(\"dyno ;)\", states, 'drooooomemppppppp', _.isEqual(state, value), copy, index)\n    };\n\n    const resetState = (init = { name: \"\" }) => {\n        setIndex(0);\n        setStates({});\n        updateHistory([])\n        console.log(\"dyno ;)\", \":::::resetState\", history, states, index)\n    };\n\n    const goBack = (steps = 1, reset = false) => {\n        if(Number(steps)){\n            goBackByIndex(steps, reset);\n            return;\n        }\n        console.log(\"dyno ;)\", 'gobackbyname', steps)\n        if(!states[steps]){\n            throw \"gobackbyname is not available ;)\";\n        }\n        goBackByName(steps, reset);\n    }\n\n\n    const goBackByIndex = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goBackByName = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const existingPage = _.get(states, steps);\n\n\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goForward = (steps = 1) => {\n        setIndex(Math.min(states.length - 1, Number(index) + (Number(steps) || 1)));\n    };\n\n    const updatePage = (value) => {\n        const existing = _.get(states, currentPage);\n        existing.defaultValues = { ...value };\n        console.log(\"dyno ;)\", value, 'updatePage youuuuupppp', existing)\n    }\n\n    return {\n        state: state,\n        setState: setState,\n        resetState: resetState,\n        currentPage,\n        index: index,\n        lastIndex: states?.length - 1 || 0,\n        goBack: goBack,\n        goForward: goForward,\n        updatePage: updatePage,\n        history\n    };\n}","const jsonataOriginal = require('jsonata');\n\nconst htmltotext = (value, options) => { \n    return `${value} yasserrrrrrrr`\n}\n\nconst registerWithJSONATA = (expression) => {\n    if (typeof expression === 'undefined' || typeof expression.registerFunction === 'undefined') {\n      throw new TypeError('Invalid JSONata Expression');\n    }\n    expression.registerFunction(\n      'htmltotext',\n      (value, options) => htmltotext(value, options),\n      '<s?o?:s>'\n    );\n}\n\nfunction jsonataExtended(expr, options) {\n    const expression = jsonataOriginal(expr, options);\n    registerWithJSONATA(expression);\n    return expression;\n}\n\nexport default jsonataExtended;","import jsonata from \"../utils/jsonata\";\n\nexport default async function transformer(data, schema)  {\n    const expression = jsonata(schema);\n    const result = await expression.evaluate(data);\n    return result;\n}","import { useState, useEffect } from 'react';\n\nconst useDynamoHistory = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n  if (!Array.isArray(initialArr)) {\n    throw new Error('initialArr must be an array.');\n  }\n\n  const [history, setHistory] = useState(initialArr);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (history.length === 0) {\n      setCurrentIndex(0);\n    } else {\n      const newIndex = history.findIndex(e => e[field] === id);\n      setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    // Assign the type of the first object as primary if not explicitly specified\n    if (history.length > 0 && !history[0].type) {\n      setHistory(prevHistory => {\n        const updatedFirstObj = { ...prevHistory[0], type: 'primary' };\n        return [updatedFirstObj, ...prevHistory.slice(1)];\n      });\n    }\n  }, [history]);\n\n  const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n  const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n  const next = () => {\n    if (history.length === 0) return false;\n    const nextIndex = getNextIndex();\n    return nextIndex !== false ? history[nextIndex] : false;\n  };\n\n  const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n  const previous = () => {\n    if (history.length === 0) return false;\n    const previousIndex = getPreviousIndex();\n    return previousIndex !== false ? history[previousIndex] : false;\n  };\n\n  const goToStart = () => {\n    if (history.length === 0) return;\n    setCurrentIndex(0);\n  };\n\n  const goTo = (newId, removeAfter = false) => {\n    if (history.length === 0) return;\n    const newIndex = history.findIndex(e => e[field] === newId);\n    if (newIndex >= 0) {\n      setCurrentIndex(newIndex);\n      if (removeAfter) {\n        removeAfterIndex(newIndex);\n      }\n    }\n  };\n\n  const goNext = () => {\n    if (history.length === 0) return;\n    const nextIndex = getNextIndex();\n    if (nextIndex !== false) {\n      setCurrentIndex(nextIndex);\n    }\n  };\n\n  const goToIndex = (index, removeAfter = false) => {\n    if (history.length === 0) return;\n    if (index >= 0 && index < history.length) {\n      setCurrentIndex(index);\n      if (removeAfter) {\n        removeAfterIndex(index);\n      }\n    }\n  };\n\n  const goBack = (removeAfter = false) => {\n    if (history.length === 0) return;\n    const previousIndex = getPreviousIndex();\n    if (previousIndex !== false) {\n      setCurrentIndex(previousIndex);\n      if (removeAfter) {\n        removeAfterIndex(previousIndex);\n      }\n    }\n  };\n\n  const goBackToPrimary = (removeAfter = false, skipSecondary = true) => {\n    if (history.length === 0) return;\n  \n    let previousIndex = currentIndex - 1;\n    if (skipSecondary) {\n      while (previousIndex >= 0 && history[previousIndex].type === 'secondary') {\n        previousIndex--;\n      }\n    }\n  \n    if (previousIndex >= 0) {\n      setCurrentIndex(previousIndex);\n      if (removeAfter) {\n        removeAfterIndex(previousIndex);\n      }\n    }\n  };\n\n  const goForwardToType = (removeAfter = false, skipSecondary = true, type = \"primary\") => {\n    if (history.length === 0) return;\n  \n    let nextIndex = currentIndex + 1;\n    if (skipSecondary) {\n      while (nextIndex < history.length && history[nextIndex].type !== type) {\n        nextIndex++;\n      }\n    }\n    \n    if (nextIndex < history.length) {\n      setCurrentIndex(nextIndex);\n      if (removeAfter) {\n        removeAfterIndex(nextIndex);\n      }\n    }\n  };\n\n  const goToEnd = () => {\n    if (history.length === 0) return;\n    setCurrentIndex(history.length - 1);\n  };\n\n  const insertObjectAtIndex = (object, insertIndex) => {\n    if(insertIndex > history.length) return;\n    const newArray = [...history];\n    newArray.splice(insertIndex, 0, object);\n    setHistory(newArray);\n    setCurrentIndex(insertIndex);\n  };\n\n  const insertObject = (object, insertIndex, customIgnoreDuplicates = false, customReplaceDuplicate = undefined) => {\n    if (preventDuplicates && !customIgnoreDuplicates) {\n      const existingIndex = history.findIndex(e => e[field] === object[field]);\n      if (existingIndex !== -1) {\n        if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n          const newArray = [...history];\n          newArray[existingIndex] = object;\n          setHistory(newArray);\n          setCurrentIndex(existingIndex); // Update current index to reflect the new position\n        } else {\n          setCurrentIndex(existingIndex); // Update current index to the existing position\n        }\n        return; // Duplicate object found, do not insert or replace\n      }\n    }\n  \n    const previousObject = previous();\n    const objectType = previousObject && previousObject.type === 'primary' ? 'secondary' : 'primary';\n  \n    const objectWithDefaultType = {\n      ...object,\n      ...(!object.type && {type: objectType}),\n    };\n  \n    if (insertIndex !== undefined) {\n      insertObjectAtIndex(objectWithDefaultType, insertIndex);\n    } else {\n      setHistory([...history, objectWithDefaultType]);\n      setCurrentIndex(history.length);\n    }\n  };\n\n  const updateCurrent = (updatedObject) => {\n    if (history.length === 0) return;\n  \n    // If the current object is the first object and its type is secondary,\n    // replace the type with \"primary\"\n    if (currentIndex === 0 && updatedObject.type === 'secondary') {\n      updatedObject.type = 'primary';\n    }\n  \n    const updatedArray = [...history];\n    updatedArray[currentIndex] = updatedObject;\n    setHistory(updatedArray);\n  };\n\n  const updateObjectById = (updatedObject) => {\n    if (history.length === 0) return;\n\n    // If the current object is the first object and its type is secondary,\n    // replace the type with \"primary\"\n    if (currentIndex === 0 && updatedObject.type === 'secondary') {\n      updatedObject.type = 'primary';\n    }\n\n    const index = history.findIndex(e => e[field] === updatedObject[field]);\n    if (index !== -1) {\n      const updatedArray = [...history];\n      updatedArray[index] = updatedObject;\n      setHistory(updatedArray);\n    }\n  };\n  \n  const removeObjectByIndex = removeIndex => {\n    if (removeIndex >= 0 && removeIndex < history.length) {\n      const newArray = [...history];\n      newArray.splice(removeIndex, 1);\n      setHistory(newArray);\n\n      // Adjust the current index if the removed item is before the current index\n      if (removeIndex < currentIndex) {\n        setCurrentIndex(currentIndex - 1);\n      }\n      // Set the current index to the last item if it was the last item that got removed\n      if (currentIndex >= history.length - 1) {\n        setCurrentIndex(history.length - 2);\n      }\n    }\n  };\n\n  const removeObjectByName = removeName => {\n    const removeIndex = history.findIndex(e => e[field] === removeName);\n    removeObjectByIndex(removeIndex);\n  };\n\n  const removeAtIndex = index => {\n    if (index >= 0 && index < history.length) {\n      const newArr = [...history];\n      newArr.splice(index, 1);\n      setHistory(newArr);\n      if (currentIndex >= history.length) {\n        setCurrentIndex(history.length > 0 ? history.length - 1 : 0);\n      }\n    }\n  };\n\n  const removeByName = name => {\n    const index = history.findIndex(e => e[field] === name);\n    if (index !== -1) {\n      removeAtIndex(index);\n    }\n  };\n\n  const removeFirst = () => {\n    if (history.length > 0) {\n      removeAtIndex(0);\n    }\n  };\n\n  const removeLast = () => {\n    if (history.length > 0) {\n      removeAtIndex(history.length - 1);\n    }\n  };\n\n  const removeAll = () => {\n    setHistory([]);\n    setCurrentIndex(0);\n  };\n\n  const removeAfterIndex = index => {\n    if (index >= 0 && index < history.length - 1) {\n      const newArr = [...history];\n      newArr.splice(index + 1);\n      setHistory(newArr);\n      if (currentIndex >= history.length) {\n        setCurrentIndex(history.length > 0 ? history.length - 1 : 0);\n      }\n    }\n  };\n\n  const getHistory = () => {\n    const historyDict = {};\n    history.forEach((obj, index) => {\n      const objId = obj[field];\n      historyDict[objId] = obj;\n    });\n    return historyDict;\n  };\n\n  return {\n    history,\n    currentIndex,\n    next,\n    current,\n    previous,\n    goToStart,\n    goTo,\n    goNext,\n    goToIndex,\n    goBack,\n    goToEnd,\n    insertObject,\n    insertObjectAtIndex,\n    removeAtIndex,\n    removeByName,\n    removeFirst,\n    removeLast,\n    removeAll,\n    removeAfterIndex,\n    removeObjectByIndex,\n    removeObjectByName,\n    updateCurrent,\n    goBackToPrimary,\n    updateObjectById,\n    goForwardToType,\n    getHistory\n  };\n};\n\nexport default useDynamoHistory;\n\n// import { useState, useEffect } from 'react';\n\n// const useNavigatableObjectsArray = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n//   if (!Array.isArray(initialArr)) {\n//     throw new Error('initialArr must be an array.');\n//   }\n\n//   const [history, setHistory] = useState(initialArr);\n//   const [currentIndex, setCurrentIndex] = useState(0);\n\n//   useEffect(() => {\n//     if (history.length === 0) {\n//       setCurrentIndex(0);\n//       return;\n//     }\n\n//     const newIndex = history.findIndex(e => e[field] === id);\n//     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n//   }, [history, field, id]);\n\n//   const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n//   const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n//   const next = () => {\n//     if (history.length === 0) return false;\n//     const nextIndex = getNextIndex();\n//     return nextIndex !== false ? history[nextIndex] : false;\n//   };\n\n//   const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n//   const previous = () => {\n//     if (history.length === 0) return false;\n//     const previousIndex = getPreviousIndex();\n//     return previousIndex !== false ? history[previousIndex] : false;\n//   };\n\n//   const goToStart = () => {\n//     if (history.length === 0) return;\n//     setCurrentIndex(0);\n//   };\n\n//   const goTo = (newId, removeAfter = false) => {\n//     if (history.length === 0) return;\n//     const newIndex = history.findIndex(e => e[field] === newId);\n//     if (newIndex >= 0) {\n//       setCurrentIndex(newIndex);\n//       if (removeAfter) {\n//         removeAfterIndex(newIndex);\n//       }\n//     }\n//   };\n\n//   const goNext = () => {\n//     if (history.length === 0) return;\n//     const nextIndex = getNextIndex();\n//     if (nextIndex !== false) {\n//       setCurrentIndex(nextIndex);\n//     }\n//   };\n\n//   const goToIndex = (index, removeAfter = false) => {\n//     if (history.length === 0) return;\n//     if (index >= 0 && index < history.length) {\n//       setCurrentIndex(index);\n//       if (removeAfter) {\n//         removeAfterIndex(index);\n//       }\n//     }\n//   };\n\n//   const goToEnd = () => setCurrentIndex(history.length - 1);\n\n//   const goBack = (removeAfter = false) => {\n//     if (history.length === 0) return;\n//     const previousIndex = getPreviousIndex();\n//     if (previousIndex !== false) {\n//       setCurrentIndex(previousIndex);\n//       if (removeAfter) {\n//         removeAfterIndex(previousIndex);\n//       }\n//     }\n//   };\n\n//   const insertObject = (obj, insertIndex = history.length, preventDuplicates = false, replaceDuplicate = false) => {\n//     if (preventDuplicates) {\n//       const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n//       if (duplicateIndex !== -1) {\n//         if (replaceDuplicate) {\n//           const newArr = [...history];\n//           newArr.splice(duplicateIndex, 1, obj);\n//           setHistory(newArr);\n//           setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//         }\n//         return;\n//       }\n//     }\n//     const newArr = [...history];\n//     newArr.splice(insertIndex, 0, obj);\n//     setHistory(newArr);\n//     setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//   };\n\n//   const removeAtIndex = index => {\n//     if (history.length === 0 || index < 0 || index >= history.length) return;\n//     const newArr = [...history];\n//     newArr.splice(index, 1);\n//     setHistory(newArr);\n//     setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//   };\n\n//   const removeByName = name => {\n//     if (history.length === 0) return;\n//     const index = history.findIndex(e => e[field] === name);\n//     if (index !== -1) {\n//       removeAtIndex(index);\n//     }\n//   };\n\n//   const removeFirst = () => {\n//     removeAtIndex(0);\n//   };\n\n//   const removeLast = () => {\n//     removeAtIndex(history.length - 1);\n//   };\n\n//   const removeAll = () => {\n//     setHistory([]);\n//     setCurrentIndex(0);\n//   };\n\n//   const removeAfterIndex = index => {\n//     if (index < 0 || index >= history.length - 1) return;\n//     const newArr = history.slice(0, index + 1);\n//     setHistory(newArr);\n//     setCurrentIndex(index);\n//   };\n\n//   return {\n//     history,\n//     next,\n//     current,\n//     previous,\n//     goToStart,\n//     goTo,\n//     goNext,\n//     goToEnd,\n//     goBack,\n//     goToIndex,\n//     insertObject,\n//     removeAtIndex,\n//     removeByName,\n//     removeFirst,\n//     removeLast,\n//     removeAll,\n//     removeAfterIndex,\n//     currentIndex\n//   };\n// };\n\n// export default useNavigatableObjectsArray;\n\n// // import { useState, useEffect } from 'react';\n\n// // const useNavigatableObjectsArray = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n// //   const [history, setHistory] = useState(initialArr);\n// //   const [currentIndex, setCurrentIndex] = useState(0);\n\n// //   useEffect(() => {\n// //     const newIndex = history.map(e => e[field]).indexOf(id);\n// //     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n// //   }, [history, field, id]);\n\n// //   useEffect(() => {\n// //     const newIndex = history.findIndex(e => e[field] === history[currentIndex][field]);\n// //     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n// //   }, [history, field, currentIndex]);\n\n// //   const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n// //   const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n// //   const next = () => {\n// //     const nextIndex = getNextIndex();\n// //     return nextIndex !== false ? history[nextIndex] : false;\n// //   };\n\n// //   const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n// //   const previous = () => {\n// //     const previousIndex = getPreviousIndex();\n// //     return previousIndex !== false ? history[previousIndex] : false;\n// //   };\n\n// //   const goToStart = () => setCurrentIndex(0);\n\n// //   // const goTo = newId => {\n// //   //   const newIndex = history.map(e => e[field]).indexOf(newId);\n// //   //   if (newIndex >= 0) setCurrentIndex(newIndex);\n// //   // };\n\n// //   const goTo = (newId, removeAfter = false) => {\n// //     const newIndex = history.map(e => e[field]).indexOf(newId);\n// //     if (newIndex >= 0) {\n// //       setCurrentIndex(newIndex);\n// //       if (removeAfter) {\n// //         removeAfterIndex(newIndex);\n// //       }\n// //     }\n// //   };\n\n// //   const goNext = () => {\n// //     const nextIndex = getNextIndex();\n// //     if (nextIndex !== false) setCurrentIndex(nextIndex);\n// //   };\n\n// //   // const goBack = () => {\n// //   //   const previousIndex = getPreviousIndex();\n// //   //   if (previousIndex !== false) setCurrentIndex(previousIndex);\n// //   // };\n\n// //   const goToEnd = () => setCurrentIndex(history.length - 1);\n\n// //   // const goToIndex = index => {\n// //   //   if (index >= 0 && index < history.length) {\n// //   //     setCurrentIndex(index);\n// //   //   }\n// //   // };\n\n// //   const goToIndex = (index, removeAfter = false) => {\n// //     if (index >= 0 && index < history.length) {\n// //       setCurrentIndex(index);\n// //       if (removeAfter) {\n// //         removeAfterIndex(index);\n// //       }\n// //     }\n// //   };\n\n// //   const goBack = (removeAfter = false) => {\n// //     const previousIndex = getPreviousIndex();\n// //     if (previousIndex !== false) {\n// //       setCurrentIndex(previousIndex);\n// //       console.log(removeAfter, 'removeAfter');\n// //       if (removeAfter) {\n// //         removeAfterIndex(previousIndex);\n// //       }\n// //     }\n// //   };\n\n// //   const insertObjectAtIndex = (object, insertIndex) => {\n// //     const newArray = [...history];\n// //     newArray.splice(insertIndex, 0, object);\n// //     setHistory(newArray);\n// //     setCurrentIndex(insertIndex);\n// //   };\n\n// //   const insertObject = (object, insertIndex, ignoreDuplicates = false, customReplaceDuplicate = undefined) => {\n// //     if (preventDuplicates && !ignoreDuplicates) {\n// //       const existingIndex = history.findIndex(e => e[field] === object[field]);\n// //       if (existingIndex !== -1) {\n// //         if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n// //           const newArray = [...history];\n// //           newArray[existingIndex] = object;\n// //           setHistory(newArray);\n// //           setCurrentIndex(existingIndex); // Update current index to reflect the new position\n// //         } else {\n// //           setCurrentIndex(existingIndex); // Update current index to the existing position\n// //         }\n// //         return; // Duplicate object found, do not insert or replace\n// //       }\n// //     }\n\n// //     if (insertIndex !== undefined) {\n// //       insertObjectAtIndex(object, insertIndex);\n// //     } else {\n// //       setHistory([...history, object]);\n// //       setCurrentIndex(history.length);\n// //     }\n// //   };\n\n// //   const removeObjectByIndex = removeIndex => {\n// //     if (removeIndex >= 0 && removeIndex < history.length) {\n// //       const newArray = [...history];\n// //       newArray.splice(removeIndex, 1);\n// //       setHistory(newArray);\n\n// //       // Adjust the current index if the removed item is before the current index\n// //       if (removeIndex < currentIndex) {\n// //         setCurrentIndex(currentIndex - 1);\n// //       }\n// //       // Set the current index to the last item if it was the last item that got removed\n// //       if (currentIndex >= history.length - 1) {\n// //         setCurrentIndex(history.length - 2);\n// //       }\n// //     }\n// //   };\n\n// //   const removeObjectByName = removeName => {\n// //     const removeIndex = history.findIndex(e => e[field] === removeName);\n// //     removeObjectByIndex(removeIndex);\n// //   };\n\n// //   const removeAfterIndex = removeIndex => {\n// //     if (removeIndex >= 0 && removeIndex < history.length - 1) {\n// //       const newArray = history.slice(0, removeIndex + 1);\n// //       setHistory(newArray);\n// //       setCurrentIndex(Math.min(currentIndex, newArray.length - 1));\n// //     }\n// //   };\n\n// //   return {\n// //     history,\n// //     next,\n// //     current,\n// //     previous,\n// //     goToStart,\n// //     goTo,\n// //     goNext,\n// //     goBack,\n// //     goToEnd,\n// //     goToIndex,\n// //     insertObject,\n// //     removeObjectByIndex,\n// //     removeObjectByName,\n// //     removeAfterIndex\n// //   };\n// // };\n\n// // export default useNavigatableObjectsArray;\n// // // Usage example:\n// // // const MyComponent = () => {\n// // //   const initialData = [\n// // //     { id: 1, name: 'Object 1' },\n// // //     { id: 2, name: 'Object 2' },\n// // //     { id: 3, name: 'Object 3' }\n// // //   ];\n\n// // //   const navigatableArray = useNavigatableObjectsArray(initialData, 'id', 2);\n\n// // //   const handleInsertObject = () => {\n// // //     const newObject = { id: 4, name: 'Object 4' };\n// // //     const insertIndex = 2; // Insert at index 2\n// // //     navigatableArray.insertObject(newObject, insertIndex);\n// // //   };\n\n// // //   const handleInsertObjectAtEnd = () => {\n// // //     const newObject = { id: 5, name: 'Object 5' };\n// // //     navigatableArray.insertObject(newObject);\n// // //   };\n\n// // //   return (\n// // //     <div>\n// // //       <button onClick={navigatableArray.goToStart}>Go to Start</button>\n// // //       <button onClick={navigatableArray.goNext}>Go Next</button>\n// // //       <button onClick={navigatableArray.goBack}>Go Back</button>\n// // //       <button onClick={navigatableArray.goToEnd}>Go to End</button>\n// // //       <button onClick={handleInsertObject}>Insert Object at Index</button>\n// // //       <button onClick={handleInsertObjectAtEnd}>Insert Object at End</button>\n// // //       <div>\n// // //         Current Object: {navigatableArray.current()?.name}\n// // //       </div>\n// // //       <ul>\n// // //         {navigatableArray.history.map(obj => (\n// // //           <li key={obj.id}>{obj.name}</li>\n// // //         ))}\n// // //       </ul>\n// // //     </div>\n// // //   );\n// // // };\n\n\n\n\n  // const insertObject = (obj, insertIndex = history.length, preventDuplicates = false, replaceDuplicate = false) => {\n  //   if (preventDuplicates) {\n  //     const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n  //     if (duplicateIndex !== -1) {\n  //       if (replaceDuplicate) {\n  //         const newArr = [...history];\n  //         newArr.splice(duplicateIndex, 1, obj);\n  //         setHistory(newArr);\n  //         setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  //       }\n  //       return;\n  //     }\n  //   }\n  //   const newArr = [...history];\n  //   newArr.splice(insertIndex, 0, obj);\n  //   setHistory(newArr);\n  //   setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  // };\n\n  // const insertObjectAtIndex = (obj, index, preventDuplicates = false, replaceDuplicate = false) => {\n  //   if (preventDuplicates) {\n  //     const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n  //     if (duplicateIndex !== -1) {\n  //       if (replaceDuplicate) {\n  //         const newArr = [...history];\n  //         newArr.splice(duplicateIndex, 1, obj);\n  //         setHistory(newArr);\n  //         setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  //       }\n  //       return;\n  //     }\n  //   }\n  //   const newArr = [...history];\n  //   newArr.splice(index, 0, obj);\n  //   setHistory(newArr);\n  //   setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  // };\n\n    // const updateCurrent = (updatedObject) => {\n  //   if (history.length === 0) return;\n  //   const updatedArray = [...history];\n  //   updatedArray[currentIndex] = updatedObject;\n  //   setHistory(updatedArray);\n  // };\n\n    // const insertObjectOLD = (object, insertIndex, customIgnoreDuplicates = false, customReplaceDuplicate = undefined) => {\n  //   if (preventDuplicates && !customIgnoreDuplicates) {\n  //     const existingIndex = history.findIndex(e => e[field] === object[field]);\n  //     if (existingIndex !== -1) {\n  //       if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n  //         const newArray = [...history];\n  //         newArray[existingIndex] = object;\n  //         setHistory(newArray);\n  //         setCurrentIndex(existingIndex); // Update current index to reflect the new position\n  //       } else {\n  //         setCurrentIndex(existingIndex); // Update current index to the existing position\n  //       }\n  //       return; // Duplicate object found, do not insert or replace\n  //     }\n  //   }\n\n  //   if (insertIndex !== undefined) {\n  //     insertObjectAtIndex(object, insertIndex);\n  //   } else {\n  //     setHistory([...history, object]);\n  //     setCurrentIndex(history.length);\n  //   }\n  // };\n\n    \n\n  // useEffect(() => {\n  //   if (history.length === 0) {\n  //     setCurrentIndex(0);\n  //     return;\n  //   }\n\n  //   const newIndex = history.findIndex(e => e[field] === id);\n  //   setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n  // }, [history, field, id]);\n\n  // useEffect(() => {\n  //   if (history.length === 0) {\n  //     setCurrentIndex(0);\n  //     return;\n  //   }\n\n  //   const newIndex = history.findIndex(e => e[field] === history[currentIndex][field]);\n  //   // setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n  // }, [history, currentIndex]);\n\n  // console.log(newIndex, 'useEffect [history, field, id]')\n  // console.log(newIndex, 'useEffect [history, field, currentIndex]')","import _ from \"lodash\";\n// const console = {\n//     log: () => null\n// }\n\nconst debug = (...args) => {\n    console.log(\"dynamo transformerrrrr ->\", ...args)\n}\nconst dataTransformer = (data, name, obj) => (local) => {\n    // const { getValues, dataStore } = obj.sharedItems || { getValues: undefined };\n    // const values = { ...dataStore, ...(getValues() || {}) };\n    // console.log(\"dyno ;)\", data, values, 'getValues()()()')\n    //\n\n    const { getValues, dataStore,  index = 1 } = local.sharedItems || { getValues: undefined };\n    const values = { ...dataStore, ...(getValues && getValues() || {}), index, displayIndex: index + 1 };\n\n\n    //Need to check later ;)\n    // if (typeof data === 'function') {\n    //     return data()(values)\n    // }\n\n    if (typeof data === \"string\") {\n\n        //Happy birthday ;)\n        // $$\n        // fx\n        // {{ amount && Valid() }}\n        const ExpRE = /^\\s*\\{\\{([\\s\\S]*)\\}\\}\\s*$/\n        const matched = data.match(ExpRE)\n        if (matched) {\n            try {\n                console.log(\"dyno ;)\", name, 'me getValues()()()', matched[1])\n\n                const result = new Function('root', `return root.${matched[1]}`)({\n                    ...values,\n                    ...local,\n                });\n\n                console.log(\"dyno ;)\", result, 'me getValues()()() after', matched[1])\n\n                // const result = new Function('$root', `with($root) { return (${matched[1]}); }`)(\n                //     {\n                //         ...values,\n                //         local\n                //     }\n                // )\n                if (typeof result === 'function') {\n                    return result({\n                        ...values,\n                        ...local,\n                    });\n                }\n                return result;\n            } catch (error) {\n                console.log(error, '{{ error transformer }}');\n                return data;\n            }\n        }\n        //End fo Happy moment of birthday ;)\n\n\n\n        if (data !== undefined && data.includes(\"$$\")) {\n            console.log(\"dyno ;)\", \"blaherebla\", data, dataStore, _.get(values, data.substring(2)))\n            return _.get(values, data.substring(2));\n        }\n        // check fx first \n        if (data !== undefined && data.includes(\"fx\")) {\n            console.log(\"dyno ;)\", data.slice(2), 'sliceeeeeee')\n            try {\n\n                // const result = eval(`local.${data.slice(2)}`);\n                console.log(local, '{{ local }}');\n\n                const result = new Function('root', `return root.${data.slice(2)}`)({\n                    ...values,\n                    ...local\n                });\n\n                if (typeof result === 'function') {\n                    console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt function')\n                    return result({\n                        ...values,\n                        ...local\n                    });\n                }\n                if (result?.then) {\n                    console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt function.then')\n                    return result.then(function (response) {\n                        console.log(\"dyno ;)\", response, 'rrrrrrrsulttttttttt [2] function.then result')\n                        return response\n                    })\n                }\n                console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt [3] function.then lol')\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", name, '----->', error, 'rrrrrrrsulttttttttt errorororrororor')\n            }\n        };\n\n        let patternResult = data;\n\n        // \"hi dxTransform()\"\n        // no {{ 'hi ' && Transform()}}\n        if (data !== undefined && data.includes(\"dx\")) {\n            patternResult = patternResult.replace(/dx.*?\\(.*?\\)/g, (_, name) => {\n\n                try {\n                    console.log(\"dyno ;)\", _, name, 'pattern waaaaaalalala 2nd', patternResult)\n                    const result = eval(`local.${_}`);\n                    if (typeof result === 'function') {\n                        return result(values);\n                    }\n                    return result;\n                } catch (error) {\n                    console.log(\"dyno ;)\", error, 'dxxxxxxxxxxxxdxdxxdxdxx')\n                    return _;\n                }\n            });\n        }\n\n        patternResult = patternResult.replace(/\\$\\{(.*?)\\}/g, (w, name) => {\n\n            const result = _.get(values, name) || ''; //_.get(values, name); values[name]\n            // console.log(\"dyno ;)\", values, 'valuesssssssssssssssssRGEX')\n            // console.log(\"dyno ;)\", name, '------>>>>>>------', result, 'pattern waaaaaalalala only', patternResult)\n\n            return result !== undefined && result//\"\";//field[name];\n        });\n\n        return patternResult;\n\n    };\n\n    return data;\n}\n\nexport { dataTransformer };","import _ from \"lodash\";\n\nconst schemaTransformation = (data, name, obj) => (local) => {\n    const values = { ...obj.sharedItems };\n    if (data === undefined || data === null) return data;\n\n    if (typeof data === \"string\") {\n        // check fx first\n        if (data !== undefined && data.includes(\"fx\")) {\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`extraFunctions.${data.slice(2)}`);\n                if (typeof result === \"function\") {\n                    return result(values);\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, \"rrrrrrrsulttttttttt errorororrororor\");\n            }\n        }\n\n        if (data !== \"\") {\n            const result = _.get(values, data.substring(2)) ?? data; // values[data] || data;\n            // if(result!== undefined) return result;\n            return result;\n        }\n    }\n\n    return data;\n};\n\nexport default schemaTransformation;","const flattenHelper = (currentObject, newObject, previousKeyName) => {\n    for (let key in currentObject) {\n        let value = currentObject[key];\n\n        if (value?.constructor !== Object) {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                newObject[key] = value;\n            } else {\n                if (key == null || key == \"\") {\n                    newObject[previousKeyName] = value;\n                } else {\n                    newObject[previousKeyName + \".\" + key] = value;\n                }\n            }\n        } else {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                flattenHelper(value, newObject, key);\n            } else {\n                flattenHelper(value, newObject, previousKeyName + \".\" + key);\n            }\n        }\n    }\n};\n\nconst flattenObject = (oldObject) => {\n    const newObject = {};\n\n    flattenHelper(oldObject, newObject, \"\");\n\n    return newObject;\n};\n\nexport default flattenObject\n","import flattenObject from \"../utils/flattenObject\";\nimport schemaTransformation from \"./schemaTransformer\";\n\nconst schemaProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    if (item === undefined) return {};\n\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            } else {\n                return schemaTransformation(\n                    target[prop],\n                    prop,\n                    target\n                )({\n                    ...extraFunctions\n                });\n            }\n        }\n    };\n\n    const proxySchema = new Proxy(\n        {\n            ...flattenObject({\n                ...item.action.schema\n            }),\n            sharedItems: { ...extraValues, ...item }\n        },\n        proxyHandler\n    );\n    return proxySchema\n}\n\nexport default schemaProxy;\n\n\n","import _ from \"lodash\";\nimport schemaProxy from \"./schemaProxy\";\n\nconst setupProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    const proxyItems = schemaProxy(item, extraValues, extraFunctions);\n\n    let newSchema = {};\n    const y = Object.keys(proxyItems).map((el) => {\n        if (el === \"sharedItems\") return;\n        newSchema = _.set(newSchema, el, proxyItems[el]);\n        console.log(\"dyno ;)\", el, \"flattttttttten\");\n    });\n\n    return _.cloneDeep(newSchema);\n}\n\nexport default setupProxy;\n","function actionsRunner(action, localFunction, item, dataStore) {\n    let resultPromise = Promise.resolve(item);\n\n    for (const functionName in action) {\n        const config = action[functionName];\n        const asyncFunction = localFunction[functionName];\n        resultPromise = resultPromise.then((result) => {\n            console.log(functionName, asyncFunction, 'dyno actionsRunner', result)\n            return asyncFunction(config)(dataStore)(result);\n        });\n    }\n\n    return resultPromise;\n}\n\nexport default actionsRunner;","const defaultValidationResolver = {\n    noteq: async (item, value) => {\n        return (value !== '' && !item.value.includes(value)) || false;\n    },\n    eq: async (item, value) => {\n        return value?.toString() === item.value;\n    },\n    notEmptyAndEqual: async (item, value) => {\n        return (value !== '' && item.value.includes(value)) || false;\n    },\n};\n\nexport {\n    defaultValidationResolver\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\n// import { Subject, AsyncSubject } from 'rxjs'\n// import pubsub from \"./pubsub\";\nimport _ from 'lodash'\n// import { unitDependencies } from 'mathjs'\n// import { getResetValue } from './utils/methods'\n// import { JsonEditor } from 'jsoneditor-react/es'\n// import { namespace } from 'store/dist/store.legacy'\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// const subject = new Subject()\n\n// export const pubsub = {\n//     publish: (name, message) => subject.next(name, message),\n//     clearMessages: () => subject.next(),\n//     getMessage: () => subject.asObservable(),\n// }\n\nconst useStateWithPromise = (initialState) => {\n    const [state, setState] = useState(initialState)\n    const resolverRef = useRef(null)\n\n    useEffect(() => {\n        if (resolverRef.current) {\n            resolverRef.current(state)\n            resolverRef.current = null\n        }\n        /**\n         * Since a state update could be triggered with the exact same state again,\n         * it's not enough to specify state as the only dependency of this useEffect.\n         * That's why resolverRef.current is also a dependency, because it will guarantee,\n         * that handleSetState was called in previous render\n         */\n    }, [resolverRef.current, state])\n\n    const handleSetState = useCallback(\n        (stateAction) => {\n            setState(stateAction)\n            return new Promise((resolve) => {\n                resolverRef.current = resolve\n            })\n        },\n        [setState],\n    )\n\n    return [state, handleSetState]\n}\n\nexport const ControlledComponentsV2 = (props) => {\n    // console.log(\"dyno ;)\", 'current', props.control.current);\n    // if(props.control.current === undefined) return;\n    const [field, setField] = useState(props.control.current && props.control.current[props.name])\n\n    // console.log(\"dyno ;)\", props.name, \"ControlledComponentsV2 renderrrrrrrrrr <1>\", field, props.errors, props?.errors?.current && props?.errors?.current[props.name], props.name)\n    console.log(\"dyno ;)\", \n        props.name,\n        'ControlledComponentsV2 renderrrrrrrrrr <1>',\n        field,\n        props.errors,\n        props.name,\n    )\n\n    const titlellll = props.control.current['textbox-5'].value\n    const error = props.errors && props.errors.current && props.errors?.current[props.name]\n\n    const [fields, setFields] = useState('')\n\n\n\n    const onChange = (value) => {\n        // messageService.sendMessage(`${props.name}`);\n        // pubsub.publish(\"anEvent\", props.name);\n        console.log(\"dyno ;)\", 'valuelavue', value)\n        // const [newValue, error] = props.updateReference(value.target.value, props.name);\n\n        // update(value);\n\n        props.updateReference(value, props.name)\n        setField({ ...field, value: value })\n        // subscription(props)\n    }\n\n    // const subscription = pubsub.getMessage().subscribe((data) => {\n    //     // console.log(\"dyno ;)\", `${props.name}, ControlledTextInput, message was published with this data: \"${data}\"`);\n\n    //     if (props.name === 'textbox-0') {\n    //         setFields(data)\n    //     }\n    // })\n\n    return props.render({ onChange, value: field.value, field, error, index: props.index })\n}\n\nconst IINNOMEMO = (props) => <ControlledComponentsV2 {...props} />\n\nconst IIN = React.memo(\n    (props) => <ControlledComponentsV2 {...props} />,\n    (prevProps, nextProps) => {\n        // if (prevProps === nextProps) {\n        const oldE = (prevProps.errors?.current && prevProps.errors?.current[prevProps.name]) || {}\n        const newE = nextProps.errors?.current[nextProps.name] || {}\n\n        const errror = _.isEqual(oldE, newE)\n        const errrorlol = nextProps.errors?.current[prevProps.name]\n\n        console.log(\"dyno ;)\", \n            prevProps,\n            nextProps,\n            prevProps.name + ' ControlledComponentsV2 renderrrrrrrrrr <2>',\n            errror,\n            'is===',\n            errrorlol,\n            prevProps.name,\n        )\n        // if(!errror) return false;\n        // return errror;\n        // return errror;\n        if (JSON.stringify(nextProps) === JSON.stringify(prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\n\nconst createValidationObject = (item) => {\n\n\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n                        // child && child;\n                        // const { useFieldArray } = useFormContext()\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\nconst SimpleRender = props => renderForm({ ...props });\nconst MemoRenderForm = props => SimpleRender(props) //React.memo(renderForm, (prev, next)=>{\n// console.log(\"dyno ;)\", prev,next,\"memoRenderForm\");\n// })\n\n\n\nconst RenderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    control,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    if (data === undefined) return null;\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = RenderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    control,\n                    setValue\n                )\n            }\n            // if (!item.visible) return null\n\n\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={name}\n                    name={name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || {}}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n                        // if (item.name === \"textbox-0\") {\n                        //     const { fields, append, remove } = useFieldArray({\n                        //         control,\n                        //         name: \"textbox-0.test\"\n                        //     });\n\n                        //     // const myaCondition = useWatch({\n                        //     //     control,\n                        //     //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     //     defaultValue: undefined // default value before the render\n                        //     // });\n                        //     // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                        //     return (\n                        //         <>\n                        //             {/* <>\n                        //                 {`${item.name}`}\n                        //                 <br />\n                        //                 <input {...field} />\n                        //                 {errors && errors[item.name] && `${item.name} errororrr`}\n                        //                 {child && child}\n                        //                 <br />\n                        //                 <br />\n                        //                 <br />\n                        //             </> */}\n                        //             <ul>\n                        //                 {fields.map((el, index) => (\n                        //                     <li key={el.id}>\n                        //                         <input {...control.register(`textbox-0.test.${index}.firstName`)} />\n                        //                         {<Controller\n                        //                             render={({ field }) => <input {...field} />}\n                        //                             name={`textbox-0.test.${index}.lastName`}\n                        //                             control={control}\n                        //                         />}\n                        //                         <button type=\"button\" onClick={() => remove(index)}>Delete</button>\n                        //                     </li>\n                        //                 ))}\n                        //             </ul>\n                        //             {JSON.stringify(getValue(\"textbox-3\"))}\n                        //             <button type=\"button\" onClick={() => {\n                        //                 control.unregister(\"textbox-10\")\n                        //                 console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                        //             }}> unregister 10 now ;) </button>\n\n                        //             <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button>\n                        //             <button\n                        //                 type=\"button\"\n                        //                 onClick={() => append({ firstName: \"bill\", lastName: \"luo\" })}\n                        //             >\n                        //                 append\n                        //             </button>\n                        //         </>\n                        //     )\n                        // }\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback\n                        })\n                        // console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', field.name)\n                        return Component\n                    }}\n\n                />\n                // <ControlledComponents\n                //     managedCallback={managedCallback}\n                //     updateReference={updateReference}\n                //     // key={item.name}\n                //     name={name}\n                //     control={myControl}\n                //     errors={errors}\n                //     formName={'formName'}\n                //     index={index}\n                //     child={child}\n                //     render={({ onUpdate, value, fields, field, error, index, child, managedCallback }) => {\n                //         const Component = components(item.type, {\n                //             onUpdate,\n                //             value,\n                //             fields,\n                //             field,\n                //             error,\n                //             child,\n                //             errors,\n                //             item,\n                //             index,\n                //             managedCallback\n                //         })\n                //         console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', error, field.name)\n                //         // return Component\n                //         // return (\n                //         //     <Component\n                //         //         {...{ onUpdate, value, fields, field, error, child, errors, item, index }}\n                //         //     />\n                //         // )\n\n                //         return <>\n                //             <br />\n                //             <div style={{ backgroundColor: child.length > 0 && \"blanchedalmond\" || \"whitesmoke\", padding: 11 }}>\n                //                 <Input onChange={(e) => onUpdate(e.target.value)} defaultValue={value} value={value} />------{fields && fields.value}\n                //                 {field.name}\n                //                 {error && error.error && \"Hiiiii i am here\" || \"no way ;)\"}\n                //             </div>\n                //             {child.length > 0 && <div style={{ backgroundColor: \"blanchedalmond\", padding: 11 }}>\n                //                 child ;)\n                //                 {child && child}\n                //             </div>}\n                //         </>\n                //     }}\n                // />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\nconst InRenderform = React.memo(props => RenderForm(props),\n    (prevProps, nextProps) => {\n        if (!deepEqual(nextProps, prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\nInRenderform.displayName = \"RenderForm\"\nInRenderform.whyDidYouRender = true\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].refId, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\n// const convertArrayToObject = (array, key) => {\n//     const initialValue = {};\n//     return array.reduce((obj, item) => {\n//         return {\n//             ...obj,\n//             [item[key]]: item,\n//         };\n//     }, initialValue);\n// };\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderV1 = React.forwardRef(({ items,\n    validationResolver = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground\n    } = useForm({\n        mode: 'onChange',\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData([...b])\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n\n            }\n        });\n\n        setData(items)\n    }, items)\n\n    // const watchingList = watch(\"textbox-2\");\n\n    // const watchingList = useWatch({\n    //     control,\n    //     name: \"textbox-2\", // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n    //     // defaultValue: 'default' // default value before the render\n    //   });\n    // const watchingList = \"\"//watchingComponents.current && watch([...watchingComponents.current.keys()]);\n    // const watchingList = watchingComponents.current && watch([...watchingComponents.current.keys()]);\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, [...data])\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, result)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData([...preResult])\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        let n = [...result]\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                    // myComponents.current[item.name].visible = touched;\n                    n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                    updated = true\n                    console.log(\"dyno ;)\", \n                        'hashas',\n                        await _.get({ a: n }, `a${item.refId}.visible`),\n                        await touched,\n                        hasCondition,\n                        updated,\n                    )\n                }\n\n                // }\n            })\n        }\n        return [updated, [...n]]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderV1.whyDidYouRender = true\nFormBuilderV1.displayName = \"FormBuilderV1\"\n\nexport default FormBuilderV1\n","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\n// import {\n//     useWatch\n// } from \"../useWatch\"\n// import {\n//     useFieldArray\n// } from \"../useFieldArray\"\n// import {\n//     FormProvider,\n//     useFormContext\n// } from \"../useFormContext\"\n// import {\n//     useForm\n// } from \"../useForm\"\n// import {\n//     Controller\n// } from \"../Controller\"\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined\n}\n) => {\n\n    const selectedComponent = {...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name,idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n   \n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={item.rule || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name,item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`,'`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </>\n                }\n\n                const Component = components(item.type, {\n                    field,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    shouldUnregister = true,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        unregister\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        unregister\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n        \n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n        \n        const subscription = watch(async (value, { name, type }) => {\n            // const [a, b] = await checkPreCondition(name, value[name], items);\n            // setData({ ...b });\n            // console.log(\"dyno ;)\", \"watchhhhhhh\", name, value)\n// return;\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    // setData([...b]);\n                    setData({ ...b });\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = {...result}\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"],\"accountNoaccountNo\",'-----',i)\n                if(i !== undefined && i.visible !== touched ){\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV4(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    console.log(\"dyno ;)\", formOptions, 'formOptions')\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                (_proxyFormState.touchedFields &&\n                    isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n        triggerAll: true\n    }, formId = \"ALL\") => {\n        // console.log(\"SUBMITFORM here\", _fields, context)\n        for (const name in _fields) {\n            const field = _fields[name];\n            // console.log(field, 'iamfromherein-validation-lol-edward-log-;)---validateForm')\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    // console.log(_f,'formidddddd')\n                    if (_f.formId === formId || formId === \"ALL\") {\n                        const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // console.log(fieldError, \"fieldError\")\n                        if (shouldCheckValid) {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                                break;\n                            }\n                        }\n                        else {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                            }\n                            fieldError[_f.name]\n                                ? set(_formState.errors, _f.name, fieldError[_f.name])\n                                : unset(_formState.errors, _f.name);\n                            //Added to stop at first error\n                            //TODO: enhance as parameter \n                            //Done\n                            if (context.triggerAll === false && Object.keys(_formState.errors).length == 1) break;\n                        }\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const validateFormBackground = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }, formId = \"ALL\") => {\n        // console.log(\"SUBMITFORM here\", formId)\n        let localErrors = {};\n        for (const name in _fields) {\n            const field = _fields[name];\n            // console.log(field, 'iamfromherein-validation-lol-edward-log-;)---validateForm')\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    // console.log(_f,'formidddddd')\n                    if (_f.formId === formId || formId === \"ALL\") {\n                        const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // console.log(fieldError, \"fieldError\")\n                        if (shouldCheckValid) {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                                break;\n                            }\n                        }\n                        else {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                            }\n                            fieldError[_f.name]\n                                ? set(localErrors, _f.name, fieldError[_f.name])\n                                : unset(localErrors, _f.name);\n                            //Added to stop at first error\n                            //TODO: enhance as parameter \n                            // if (Object.keys(_formState.errors).length == 1) break;\n                        }\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return localErrors;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({\n                    isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange\n                }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = field._f.watch || !isEmptyObject(fieldState) || isWatched;\n            // const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            console.log(\"dyno ;)\", shouldRender, `heyyyyyyyyyyy { ${name} } watch me or not?!`, field._f.watch, \"shouldSkipValidation:\", shouldSkipValidation, \"isBlurEvent:\", isBlurEvent, '------;)---- is watching hahaha:', isWatched)\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                // console.log(field, 'edwardyasser')\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue', _defaultValues)\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                    set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n                ? _defaultValues\n                : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges, result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                    ? [...result[0]]\n                    : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues, \"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerCustom = async (options = { triggerAll: false }, name) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields, false, { triggerAll: options.triggerAll });\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    // console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const triggerBackgroundOptimised = (formId = \"ALL\") => async (list = false) => {\n        // const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"triggerBackgroundtriggerBackground\", _formState.errors);\n        if (formOptions.resolver) {\n            // const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            const schemaResult = await executeResolverValidation(fieldNames);\n            isValid =\n                // name\n                // ? fieldNames.every((name) => !get(schemaResult, name))\n                // :\n                isEmptyObject(schemaResult);\n        }\n        else {\n            // if (name) {\n            //     isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n            //         const field = get(_fields, fieldName);\n            //         console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n            //         return await validateForm(field._f ? { [fieldName]: field } : field);\n            //     }))).every(Boolean);\n            // }\n            // else {\n            if (list) {\n                isValid = await validateFormBackground(_fields, false, {\n                    valid: true,\n                });\n            } else {\n                isValid = await validateForm(_fields, true, {\n                    valid: true,\n                }, formId);\n            }\n\n            // isValid = isEmptyObject(_formState.errors);\n            // }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        // if (options.shouldFocus && !isValid) {\n        //     // focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        // }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        // console.log(_formValues, _fields, \"getValuesgetValues\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), {\n                    refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name }\n                }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options), \"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), {\n                onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                }\n            });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        triggerCustom,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV4 } from './logic/createFormControlV4';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV4(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useFormV1\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\nimport { dataTransformer as defaultDataTransformer } from '../middleware/dataTransformer'\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined,\n    dataTransformer\n}\n) => {\n\n    const selectedComponent = { ...data[name], givenName };\n    // Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n\n    if (selectedComponent === undefined) return null;\n    // if (proxyItem === undefined) return null;\n\n    //proxy here ;)\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            }\n            return dataTransformer(target[prop], prop, target)({\n                ...sharedItems.localFunction,\n                sharedItems: {\n                    ...sharedItems,\n                    index\n                },\n                // ...sharedItems\n            });\n        }\n    };\n\n    const proxyItem = new Proxy({\n        ...selectedComponent,\n        sharedItems: sharedItems\n    }, proxyHandler);\n    // debugger;\n    // if (selectedComponent?.visible === false) return null\n    // name === \"howAreYouThen\" && console.log(proxyItem?.visible, 'Vaaaaala Result proxyItem?.visible', name, proxyItem?.visible === false)\n    if (proxyItem?.visible === false) return null\n\n    return renderComponentForm(\n        proxyItem,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent,\n        dataTransformer\n    )\n}\n\nlet helper = {};\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent,\n    dataTransformer\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name, idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name,\n            dataTransformer\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n    const { validate = {} } = item?.rule || { validate: {} };\n\n    if (item?.rule) {\n        console.log(\"dyno ;)\", validate, 'validate[', sharedItems?.localFunction)\n        Object.keys(validate).forEach(key => {\n            if (typeof validate[key] === \"function\") return;\n            validate[key] = sharedItems?.localFunction[key](validate[key])({ ...sharedItems, getItem: () => item });\n            console.log(\"dyno ;)\", validate, 'validate[ within', validate[key])\n        });\n        console.log(\"dyno ;)\", validate, 'validate[ after')\n    }\n\n\n    // if (item.isArray) {\n    //     console.log(\"dyno ;)\", name, item.items, \"useFieldArray\")\n    //     const { fields, append, remove } = useFieldArray({\n    //         control,\n    //         name: name,\n    //         rules: { ...item.rule } || validation\n    //     });\n\n    //     helper = {\n    //         fields, \n    //         append, \n    //         remove\n    //     }\n    // }\n\n\n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={{ ...item, index }}\n            rules={{ ...item.rule } || validation}\n            // eventBus={sharedItems?.eventBus}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name,\n                        rules: { ...item.rule } || validation\n                    });\n\n                    console.log(\"dyno ;)\", name, item.items, \"useFieldArray\", fields)\n\n\n                    helper = {\n                        fields,\n                        append,\n                        remove\n                    }\n\n                    // const removeMee = (ind) => {\n                    //     const id = ind;\n                    //     remove(parseInt(id));\n                    //     console.log(parseInt(id), ind, 'removelaaaaa',fields)\n\n                    //     // return function removelaaaaa(){\n                    //     //     console.log(parseInt(id), index, x, 'removelaaaaa',remove)\n                    //     //     remove(parseInt(id));\n                    //     // }\n                    // }\n\n                    // const appenddd = () => {\n                    //     console.log('removelaaaaa append',fields)\n                    //     append({});\n                    // }\n\n\n                    child =\n                        <React.Fragment>\n                            {/* <ul> */}\n                            {fields.map((el, index) => (\n                                <div style={sharedItems.style} key={el.id}>\n                                    {item.items.map((element, indx) => (\n                                        <Controller\n                                            key={`${name}.${index}.${data[element].name}`}\n                                            name={`${name}.${index}.${data[element].name}`}\n                                            control={control}\n                                            render={({ field }) => {\n                                                console.log(field, \"field dyno ;)\", el.id, `${name}.${index}.${element}`, '`${name}.${index}.${element}`')\n                                                // const help = {\n                                                //     fields,\n                                                //     append,\n                                                //     remove\n                                                // }\n                                                // const removeMe = (idx) =>{\n                                                //     console.log(idx, 'removeMeeeeee',`${name}.${index}.${element}`)\n                                                //     remove(idx)   \n                                                // }\n\n                                                // const removeMe = () => {\n                                                //     const id = index;\n                                                //     console.log(parseInt(id), index, 'removelaaaaa',remove)\n                                                //     removeMee(parseInt(id));\n\n                                                //     // return function removelaaaaa(){\n                                                //     //     console.log(parseInt(id), index, x, 'removelaaaaa',remove)\n                                                //     //     remove(parseInt(id));\n                                                //     // }\n                                                // }\n                                                // return (<div><button type=\"button\" onClick={() => {\n                                                //     console.log(index, 'insidecomponent ;)')\n                                                //     removeMee(index)\n\n                                                // }}>- from inside {index}</button>{\n                                                //     renderComponentInd(element, {...data, index}, {\n                                                //         updateReference,\n                                                //         myControl,\n                                                //         getValue,\n                                                //         errors,\n                                                //         ControlledComponents,\n                                                //         components,\n                                                //         managedCallback,\n                                                //         parentName: item?.items && name || undefined,\n                                                //         sharedItems: {\n                                                //             ...sharedItems,\n                                                //             localFunction: {\n                                                //                 ...sharedItems.localFunction,\n                                                //                 append: appenddd,\n                                                //                 // append: (config) => a => b => append({}),\n                                                //                 // remove: (index) => removeMe(index),\n                                                //                 remove: () => removeMee(index)\n                                                //             }\n                                                //         },\n                                                //         index: index,\n                                                //         data,\n                                                //         parent: { name: item.name, index, id: item.id },\n                                                //         givenName: `${name}.${index}.${data[element].name}`,\n                                                //         dataTransformer\n                                                //     })\n                                                // }</div>)\n\n                                                return renderComponentInd(element, { ...data, index }, {\n                                                    updateReference,\n                                                    myControl,\n                                                    getValue,\n                                                    errors,\n                                                    ControlledComponents,\n                                                    components,\n                                                    managedCallback,\n                                                    parentName: item?.items && name || undefined,\n                                                    sharedItems: {\n                                                        ...sharedItems,\n                                                        localFunction: {\n                                                            ...sharedItems.localFunction,\n                                                            append,\n                                                            // append: (config) => a => b => append({}),\n                                                            remove: (i) => remove(i),\n                                                            // remove: () => remove(index)\n                                                            // remove: (i) => {\n                                                            //     console.log(`${name}.${index}.${data[element].name}`,'oooooomaaaaa', parseInt(i), index);\n                                                            //     remove(index-1)\n                                                            // }\n                                                        }\n                                                    },\n                                                    index: index,\n                                                    data,\n                                                    parent: { name: item.name, index, id: item.id },\n                                                    givenName: `${name}.${index}.${data[element].name}`,\n                                                    dataTransformer\n                                                })\n\n                                                // const Component = components(element.type, {\n                                                //     field,\n                                                //     item: element,\n                                                //     name: `${name}.${index}.${element.name}`,\n                                                //     indx,\n                                                //     managedCallback,\n                                                //     child,\n                                                //     useFieldArray\n                                                // })\n                                                // return Component\n                                            }}\n                                        />\n                                    ))}\n                                </div>\n                            ))}\n\n                            {/* </ul> */}\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n\n                        </React.Fragment>\n                }\n\n                // //proxy here ;)\n                // const proxyHandler = {\n                //     get(target, prop, receiver) {\n                //         if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                //             console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                //             return new Proxy(target[prop], proxyHandler);\n                //         }\n                //         return dataTransformer(target[prop], prop, target)({\n                //             ...sharedItems.localFunction,\n                //             sharedItems: sharedItems,\n                //             // ...sharedItems\n                //         });\n                //     }\n                // };\n\n                // const proxyItem = new Proxy({\n                //     ...item,\n                //     sharedItems: sharedItems\n                // }, proxyHandler);\n\n\n                //end of proxy\n\n\n                console.log(name, helper, 'hyyyayayyaya')\n                const Component = components(item.type, {\n                    field,\n                    // item: proxyItem,//item,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    // sharedItems: {...sharedItems, \n                    //     // localFunction: { ...sharedItems.localFunction, ...helper}\n                    // },\n                    sharedItems: {\n                        ...sharedItems,\n                        localFunction: {\n                            ...sharedItems.localFunction,\n                            ...helper\n                        },\n                        ...helper\n                    },\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    // eventBus={sharedItems?.eventBus}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <div className=\"divdiv\">\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </div>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].watch) {\n            initialValue.set(items[key].name);//POC only\n        }\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\n\n// function keysWithDoubleDollar(obj) {\n//     // Return an array of keys with values containing $$\n//     return Object.keys(obj).filter(key => obj[key].includes('$$'));\n// }\nfunction keysWithDoubleDollar(obj) {\n    const result = [];\n\n    function checkForKey(obj, path) {\n        if (typeof obj === 'object') {\n            if (Array.isArray(obj)) {\n                obj.forEach((item, index) => {\n                    checkForKey(item, `${path}[${index}]`);\n                });\n            } else {\n                if(obj != undefined && obj != null){\n                    Object.keys(obj).forEach(key => {\n                        const newPath = path ? `${path}.${key}` : key;\n                        checkForKey(obj[key], newPath);\n                    });\n                }\n            }\n        } else if (typeof obj === 'string' && obj.includes('$$')) {\n            result.push(path);\n        }\n    }\n\n    checkForKey(obj, '');\n\n    return result;\n}\n\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    localFunction,\n    shouldUnregister = true,\n    defaultValues = {},\n    devMode = false,\n    dataTransformer = defaultDataTransformer,\n    dataStore,\n    style = {}\n    // eventBus\n}, ref) => {\n\n    if (!devMode) {\n        console.log = (function () {\n            const log = console.log;\n\n            return function () {\n                const args = Array.from(arguments);\n                if (!args.includes(\"dyno ;)\")) {\n                    log.apply(console, args);\n                }\n            }\n        })();\n    }\n\n    const neededKeys = keysWithDoubleDollar(defaultValues);\n    console.log(\"dyno ;)\", neededKeys, \"[neededKeys]\", defaultValues)\n\n\n    //proxy here ;)\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (neededKeys.includes(prop)) {\n                if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                    console.log(\"dyno ;)\", target[prop], \"dddproxyHanlerrrrrrrr me ;)\");\n                    return new Proxy(target[prop], proxyHandler);\n                }\n                return dataTransformer(target[prop], prop, target)({\n                    ...localFunction,\n                    sharedItems: { dataStore },\n                    // ...sharedItems\n                });\n            }\n            return target[prop];\n        }\n    };\n\n    const proxyDefaultValues = new Proxy({\n        ...defaultValues\n    }, proxyHandler);\n\n    // const proxyDefaultValues = {\n    //     ...defaultValues\n    // };\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\", { ...proxyDefaultValues }, dataStore)\n\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors, isDirty, isValid },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        triggerCustom,\n        unregister,\n        clearErrors,\n        setError,\n        reset\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        reValidateMode: 'onChange',\n        // resolver: async (data, context) => {\n        //     const { error, value: values } = validationSchema.validate(data, {\n        //         abortEarly: false,\n        //     });\n\n        //     if (!error) return { values: values, errors: {} };\n\n        //     return {\n        //         values: {},\n        //         errors: error.details.reduce(\n        //             (previous, currentError) => ({\n        //                 ...previous,\n        //                 [currentError.path[0]]: currentError,\n        //             }),\n        //             {},\n        //         ),\n        //     };\n        // },,\n        // criteriaMode: \"firstError\",\n        defaultValues: { ...proxyDefaultValues }\n    })\n\n    React.useEffect(() => {\n        reset({ ...proxyDefaultValues })\n    }, [defaultValues]);\n\n    // Shared Items\n    const sharedItems = {\n        style,\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        unregister,\n        localFunction: {\n            ...localFunction,\n            reset: reset,\n            triggerBackground: () => !_.isEmpty(errors),\n            getValues,\n            triggerBackgroundOptimised: (formId) => {\n                // console.log(triggerBackground(), 'triggerSyncBackground()')\n                const result = triggerBackgroundOptimised(formId)().then(r => r);\n                console.log('yasssss', result)\n                return result;\n            },\n            triggerGroup: async (resources) => {\n                const localErrors = await triggerBackgroundOptimised()(true);\n                // if (!isValid) return true;\n\n                // console.log(resources, errors, 'triggerreggirt',\n                //     isDirty,\n                //     '---=====----',\n                //     isValid,\n                //     localErrors\n                // )\n                let result = true;\n                for (let i = 0; i < resources.length; i++) {\n                    const item = resources[i];\n                    const isItemExist = localErrors[item];\n                    if (isItemExist) {\n                        // console.log(item, '------>', 'triggerreggirt', errors[item], 'found', result)\n                        result = false;\n                        break;\n                    }\n                }\n                // console.log('triggerreggirt ', result)\n                return result;\n            },\n        },\n        dataStore,\n        // eventBus,\n        clearErrors,\n        setError\n    }\n    // console.log(\"dyno ;)\", typeof errors, 'hereeeeeeeeeerroooooors')\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            //  For watch items\n            //  Re-render watch items\n\n\n            // has better than get ;)\n            // if (watchingComponents.current.get(name)) {\n            if (watchingComponents.current.get(name)) {\n                const allValues = Object.assign(value, dataStore);\n                console.log(\"dyno ;)\", \"origincheckPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                // const [a, b] = await checkPreCondition(name, value[name], items);\n                const [a, b] = await checkPreCondition(name, allValues[name], items);\n\n                if (!deepEqual(data, b) && a) {\n                    setData({ ...b });\n                    return;\n                }\n            } else if (watchingComponents.current.has(name)) {\n                console.log(\"dyno ;)\", watchingComponents.current.has(name), \"before checkPreCondition ;) checkPreCondition\", value, name, type, { data }, items)\n                setData({ ...items });\n                return;\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesBackground = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await triggerBackgroundOptimised()(true) //trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (_.isEmpty(result)) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    const getValuesPOC = async (options = { triggerAll: false }) => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await triggerCustom(options);\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors, options)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    const getValuesWithoutValidation = async () => {\n        return await getValues();\n    }\n\n    ref.current = {\n        clearErrors,\n        setError,\n        getValuesByGroup: async (props) => {\n            const valid = await sharedItems.localFunction.triggerGroup(props);\n            if (valid) {\n                const result = await getValues();\n                return result;\n            }\n            return valid;\n\n        },\n        getValues: (options) => getValuesPOC(options),\n        getGroupValuesBackground: async (props) => {\n            console.log(props, 'getValuesBackgroundgetValuesBackgroundgetValuesBackground')\n            if (Array.isArray(props)) {\n                const valid = await sharedItems.localFunction.triggerGroup(props);\n                if (valid) {\n                    const result = await getValues();\n                    return result;\n                }\n                return valid;\n            }\n            return getValuesPOC();\n        },\n        getValuesBackground: async (validation = true) => {\n            if (validation) {\n                if (Object.keys(errors).length > 0) return false;\n                const result = await triggerBackgroundOptimised()(true);\n                console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n                if (_.isEmpty(result)) {\n                    return await getValues();\n                } else {\n                    return false;\n                }\n            }\n            const result = await getValues();\n            return result;\n        },\n        resetValues: resetValues,\n        setValue: setValue,\n        errors: errors,\n        reset,\n        clearErrors,\n        localFunction: { ...sharedItems.localFunction, ...helper }\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\",\n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and don't iterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = { ...result }\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"], \"accountNoaccountNo\", '-----', i)\n                if (i !== undefined && i.visible !== touched) {\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index,\n            dataTransformer\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n"],"names":["element","type","data","Date","value","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","concat","some","current","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","source","copy","Object","assign","FormContext","React","displayName","useFormContext","FormProvider","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","createGetter","prop","defineProperty","get","keys","length","formStateData","isEmptyObject","find","useFormState","methods","_ref","_ref$control","control","disabled","visible","nameRef","_React$useState","_formState","updateFormState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","formStateSubscription","_subjects","state","subscribe","next","convertToArrayPayload","includes","shouldRenderFormState","unsubscribe","getProxyFormState","useController","_props$control","shouldUnregister","item","console","log","_formValues","_defaultValues","setInputStateValue","registerProps","register","_extends","rules","updateMounted","field","_fields","_f","mount","t","controllerSubscription","values","_shouldUnregisterField","_shouldUnregister","isNameInFieldArray","_names","array","_isInAction","unregister","getControllerValue","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","Controller","render","validateAllFieldCriteria","_Object$assign","types","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","_iterator","_createForOfIteratorHelperLoose","_step","done","refs","options","shouldFocus","focusName","focusIndex","d","performance","now","c","r","Math","random","toString","keyName","map","generateId","append","fill","insert","slice","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","sort","a","b","indexA","indexB","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","isBoolean","fieldValues","useFieldArray","_props$keyName","_focusName","mapIds","_getFieldArrayValue","setFields","add","appendValue","updatedFieldArrayValues","appendAt","_bathFieldArrayUpdate","argA","fillEmptyArray","getFocusFieldName","prependAt","remove","removeArrayAt","insertAt","argB","swap","swapArrayAt","move","moveArrayAt","update","updateAt","watchAll","watch","watchField","startsWith","omitKey","_updateValid","fieldArraySubscription","payload","isReset","fieldArrayValues","wait","timer","_len","arguments","args","_key","clearTimeout","window","setTimeout","apply","deepEqual","object1","object2","isPrimitive","keys1","keys2","_i","_keys","val1","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","isRadioInput","document","Subscription","tearDowns","_proto","prototype","tearDown","push","teardown","Subscriber","observer","subscription","_this","closed","_proto2","Subject","observers","_proto3","_iterator2","_step2","subscriber","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","selected","_ref2","defaultReturn","previous","getFieldValue","isFileInput","files","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","getFieldValueAs","_fieldss","criteriaMode","shouldUseNativeValidation","mounted","deepMerge","targetValue","sourceValue","_a","setDirtyFields","defaultValues","parentNode","parentName","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isString","RegExp","getValidateError","isMessage","every","validationData","isRegex","inputValue","_temp4","_result3","_exit","setCustomValidty","_field$_f","Promise","resolve","inputRef","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","_getValueAndMessage","patternValue","match","_temp3","isFunction","then","validateError","_temp2","validationResult","_interrupt","_temp","_forIn","_validate$key","e","reject","defaultOptions","reValidateMode","shouldFocusError","isWindowUndefined","createFormControlV3","formOptions","_delayCallback","submitCount","isSubmitting","isSubmitSuccessful","_isMounted","Set","unMount","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","updateErrorState","shouldRenderBaseOnValid","validateForm","shouldRenderBaseOnError","shouldSkipRender","isValidFromResolver","isWatched","previousError","resolver","delayError","debounce","updatedFormState","setFieldValue","shouldRender","fieldValue","isWeb","isHTMLElement","forEach","selectRef","checkboxRef","radioRef","getValues","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","isCurrentTouched","isChanged","previousIsDirty","_getIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeResolver","_formOptions$resolver2","context","getResolverOptions","executeResolverValidation","shouldCheckValid","valid","_temp6","_temp5","_validateForm","validateField","fieldError","handleChange","_ref2$target","inputType","_temp8","_getValidationModes","shouldSkipValidation","hasValidation","skipValidation","_temp7","_ref3","parentNodeName","valError","_validateField","_updateValidAndInputValue","shouldSkipValueAs","isValueUndefined","defaultChecked","_formOptions$resolver3","_executeResolver","setValues","entries","_ref4","fieldKey","fieldName","isFieldArray","_getWatch","fieldNames","isGlobal","resultChanges","Map","_updateFormValues","method","shouldSet","shouldSetFields","output","unsetEmptyArray","setFieldArrayDirtyFields","setValue","_temp11","_temp10","schemaResult","_temp9","_ref5","_Promise$all","triggerBackground","_temp14","_temp13","_temp12","_ref6","_Promise$all2","_validateForm3","clearErrors","inputName","setError","info","_iterator3","_step3","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","fieldRef","querySelectorAll","isRadioOrCheckboxFunction","contains","handleSubmit","onValid","onInvalid","preventDefault","persist","hasNoPromiseError","_finallyRethrows","_catch","_temp18","_temp16","_temp15","_onInvalid","_temp17","_ref8","err","_wasThrown","_result2","reset","keepStateOptions","updatedValues","keepValues","_iterator4","_step4","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","_updateProps","useForm","_formControl","createFormControlV2","useFieldArraySubscription","unregisterFieldNames","live","useWatch","_name","updateValue","watchSubscription","rebuildHistory","history","newHistory","useHistory","init","_init","_useState","useState","states","setStates","_useState2","updateHistory","_useState3","setIndex","_useState4","currentPage","updateCurrentPage","useMemo","setState","pageName","existing","_","cloneDeep","size","newIndex","isEqual","resetState","goBack","steps","Number","goBackByIndex","goBackByName","previousPageName","existingPage","goForward","updatePage","jsonataOriginal","require","htmltotext","registerWithJSONATA","expression","registerFunction","TypeError","jsonataExtended","expr","transformer","schema","jsonata","evaluate","useDynamoHistory","initialArr","id","preventDuplicates","replaceDuplicate","Error","setHistory","currentIndex","setCurrentIndex","useEffect","findIndex","prevHistory","updatedFirstObj","getNextIndex","getPreviousIndex","nextIndex","previousIndex","goToStart","goTo","newId","removeAfter","removeAfterIndex","goNext","goToIndex","goBackToPrimary","skipSecondary","goForwardToType","goToEnd","insertObjectAtIndex","insertIndex","newArray","insertObject","customIgnoreDuplicates","customReplaceDuplicate","existingIndex","previousObject","objectType","objectWithDefaultType","updateCurrent","updatedObject","updatedArray","updateObjectById","removeObjectByIndex","removeIndex","removeObjectByName","removeName","removeAtIndex","newArr","removeByName","removeFirst","removeLast","removeAll","getHistory","historyDict","objId","dataTransformer","local","sharedItems","dataStore","_ref$index","displayIndex","ExpRE","matched","Function","response","patternResult","eval","w","schemaTransformation","_$get","flattenHelper","currentObject","newObject","previousKeyName","constructor","flattenObject","oldObject","schemaProxy","extraValues","extraFunctions","proxyHandler","receiver","Proxy","proxySchema","action","setupProxy","proxyItems","newSchema","y","el","actionsRunner","localFunction","resultPromise","_loop","functionName","config","asyncFunction","defaultValidationResolver","noteq","eq","notEmptyAndEqual","ControlledComponentsV2","_props$errors","setField","updateReference","IIN","memo","createElement","prevProps","nextProps","_prevProps$errors","_prevProps$errors2","_nextProps$errors","_nextProps$errors2","oldE","newE","errror","errrorlol","JSON","stringify","renderForm","myControl","getValue","ControlledComponents","components","managedCallback","child","items","validation","rule","_useFieldArray","Fragment","indx","Component","onClick","RenderForm","InRenderform","whyDidYouRender","convertIdToRef","parent","_extends2","itemName","refId","resetItems","_extends3","prepareWtchingComponents","initialValue","preCondition","preConditionObj","convertArrayToObject","internalItem","givenArray","_extends5","renderCount","FormBuilderV1","forwardRef","_ref4$validationResol","validationResolver","_ref4$defaultValues","_useForm","myComponents","useRef","watchingComponents","preConditionItems","setData","checkPreCondition","resetValues","getValuesPOC","validationOnce","validatedItem","n","originalErrors","newErrors","errorMsg","_myComponents$current","_getValuesPOC","_ref7","hasValidationChanged","hasPreconditionChanged","preResult","updated","hasCondition","touched","_touched","realValue","_item$type","renderComponentInd","_ref$givenName","givenName","selectedComponent","renderComponentForm","errorss","idx","FormBuilderNext","_data$root","_data$root$items","_ref6$shouldUnregiste","_ref6$defaultValues","_ref9","_ref10","root","createFormControlV4","formId","triggerAll","validateFormBackground","_interrupt2","localErrors","_validateForm2","triggerCustom","_temp21","_temp20","_temp19","_temp24","_temp23","_temp22","_Promise$all3","_validateForm5","triggerBackgroundOptimised","list","_temp27","_temp26","_temp25","_validateFormBackgrou","_validateForm7","_temp31","_temp29","_temp28","_temp30","proxyItem","helper","_ref2$validate","getItem","style","keysWithDoubleDollar","checkForKey","newPath","_ref$current","_ref7$shouldUnregiste","_ref7$defaultValues","_ref7$devMode","devMode","_ref7$dataTransformer","defaultDataTransformer","_ref7$style","neededKeys","proxyDefaultValues","_useForm$formState","triggerGroup","resources","isItemExist","allValues","getValuesByGroup","getGroupValuesBackground","_exit2","_exit3","_result4","getValuesBackground","_result5","_exit4","_await$getValues","_ref11"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uBAAe,UAACA,OAAO;EAAA,OAAKA,OAAO,CAACC,IAAI,KAAK,UAAU;AAAA;;ACAvD,oBAAe,UAACC,IAAI;EAAA,OAAKA,IAAI,YAAYC,IAAI;AAAA;;ACA7C,yBAAe,UAACC,KAAK;EAAA,OAAKA,KAAK,IAAI,IAAI;AAAA;;ACEhC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAID,KAAK;EAAA,OAAK,OAAOA,KAAK,KAAK,QAAQ;AAAA;AAChE,gBAAe,UAACA,KAAK;EAAA,OAAK,CAACE,iBAAiB,CAACF,KAAK,CAAC,IAC/C,CAACG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,IACrBC,YAAY,CAACD,KAAK,CAAC,IACnB,CAACK,YAAY,CAACL,KAAK,CAAC;AAAA;;ACJxB,0BAAe,UAACM,KAAK;EAAA,OAAKC,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,MAAM,GACnDC,eAAe,CAACH,KAAK,CAACE,MAAM,CAAC,GACzBF,KAAK,CAACE,MAAM,CAACE,OAAO,GACpBJ,KAAK,CAACE,MAAM,CAACR,KAAK,GACtBM,KAAK;AAAA;;ACNX,yBAAe,UAACK,IAAI;EAAA,OAAKA,IAAI,CAACC,SAAS,CAAC,CAAC,EAAED,IAAI,CAACE,MAAM,CAAC,KAAK,CAAC,CAAC,IAAIF,IAAI;AAAA;;ACCtE,0BAAe,UAACG,KAAK,EAAEH,IAAI;EAAA,OAAK,GAAAI,MAAA,CAAID,KAAK,EAAEE,IAAI,CAAC,UAACC,OAAO;IAAA,OAAKC,iBAAiB,CAACP,IAAI,CAAC,KAAKM,OAAO;IAAC;AAAA;;ACDjG,eAAe,UAACjB,KAAK;EAAA,OAAKA,KAAK,CAACmB,MAAM,CAACC,OAAO,CAAC;AAAA;;ACA/C,mBAAe,UAACC,GAAG;EAAA,OAAKA,GAAG,KAAKC,SAAS;AAAA;;ACIzC,WAAe,UAACC,GAAG,EAAEC,IAAI,EAAEC,YAAY,EAAK;EACxC,IAAIlB,QAAQ,CAACgB,GAAG,CAAC,IAAIC,IAAI,EAAE;IACvB,IAAME,MAAM,GAAGC,OAAO,CAACH,IAAI,CAACI,KAAK,CAAC,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,UAACH,MAAM,EAAEI,GAAG;MAAA,OAAM5B,iBAAiB,CAACwB,MAAM,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACI,GAAG,CAAC;KAAC,EAAEP,GAAG,CAAC;IAChI,OAAOQ,WAAW,CAACL,MAAM,CAAC,IAAIA,MAAM,KAAKH,GAAG,GACtCQ,WAAW,CAACR,GAAG,CAACC,IAAI,CAAC,CAAC,GAClBC,YAAY,GACZF,GAAG,CAACC,IAAI,CAAC,GACbE,MAAM;;EAEhB,OAAOJ,SAAS;AACpB,CAAC;;ACdM,IAAMU,MAAM,GAAG;EACpBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE;AACV,CAAC;AACD,AAAO,IAAMC,eAAe,GAAG;EAC7BC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,GAAG,EAAE;AACP,CAAC;AACD,AAAO,IAAMC,sBAAsB,GAAG;EACpCC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACZ,CAAC;;ACnBD,YAAe,UAACC,MAAM,EAAEnB,GAAG,EAAK;EAC9B,IAAMoB,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,MAAM,CAAC;EACtC,OAAOC,IAAI,CAACpB,GAAG,CAAC;EAChB,OAAOoB,IAAI;AACb,CAAC;;ACFD,IAAMG,WAAW,GAAGC,mBAAmB,CAAC,IAAI,CAAC;AAC7CD,WAAW,CAACE,WAAW,GAAG,YAAY;AACtC,IAAaC,cAAc,GAAG,SAAjBA,cAAcA;EAAA,OAASF,gBAAgB,CAACD,WAAW,CAAC;AAAA;AACjE,IAAaI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK;EAAA,OAAMJ,mBAAmB,CAACD,WAAW,CAACM,QAAQ,EAAE;IAAE3D,KAAK,EAAE4D,IAAI,CAACF,KAAK,EAAE,UAAU;GAAG,EAAEA,KAAK,CAACG,QAAQ,CAAC;AAAA,CAAC;;ACHtI,yBAAe,UACbC,SAAS,EACTC,eAAe,EACfC,mBAAmB,EACnBC,MAAM,EACH;EAAA,IADHA,MAAM;IAANA,MAAM,GAAG,IAAI;;EAEb,SAASC,YAAYA,CAACC,IAAI,EAAE;IAC1B,OAAO,YAAM;MACX,IAAIA,IAAI,IAAIL,SAAS,EAAE;QACrB,IAAIC,eAAe,CAACI,IAAI,CAAC,KAAKhC,eAAe,CAACK,GAAG,EAAE;UACjDuB,eAAe,CAACI,IAAI,CAAC,GAAG,CAACF,MAAM,IAAI9B,eAAe,CAACK,GAAG;;QAExDwB,mBAAmB,KAAKA,mBAAmB,CAACG,IAAI,CAAC,GAAG,IAAI,CAAC;QACzD,OAAOL,SAAS,CAACK,IAAI,CAAC;;MAExB,OAAO7C,SAAS;KACjB;;EAGH,IAAMI,MAAM,GAAG,EAAE;EACjB,KAAK,IAAMI,GAAG,IAAIgC,SAAS,EAAE;IAC3BX,MAAM,CAACiB,cAAc,CAAC1C,MAAM,EAAEI,GAAG,EAAE;MACjCuC,GAAG,EAAEH,YAAY,CAACpC,GAAG;KACtB,CAAC;;EAGJ,OAAOJ,MAAM;AACf,CAAC;;AC5BD,qBAAe,UAAC1B,KAAK;EAAA,OAAKO,QAAQ,CAACP,KAAK,CAAC,IAAI,CAACmD,MAAM,CAACmB,IAAI,CAACtE,KAAK,CAAC,CAACuE,MAAM;AAAA;;ACEvE,6BAAe,UAACC,aAAa,EAAET,eAAe,EAAEE,MAAM,EAAK;EACvD,IAAMH,SAAS,GAAGF,IAAI,CAACY,aAAa,EAAE,MAAM,CAAC;EAC7C,OAAQC,aAAa,CAACX,SAAS,CAAC,IAC5BX,MAAM,CAACmB,IAAI,CAACR,SAAS,CAAC,CAACS,MAAM,IAAIpB,MAAM,CAACmB,IAAI,CAACP,eAAe,CAAC,CAACQ,MAAM,IACpEpB,MAAM,CAACmB,IAAI,CAACR,SAAS,CAAC,CAACY,IAAI,CAAC,UAAC5C,GAAG;IAAA,OAAKiC,eAAe,CAACjC,GAAG,CAAC,MACpD,CAACmC,MAAM,IAAI9B,eAAe,CAACK,GAAG,CAAC;IAAC;AAC7C,CAAC;;ACTD,6BAAe,UAACxC,KAAK;EAAA,OAAKG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;AAAA;;ACKhE,SAAS2E,YAAYA,CAACjB,KAAK,EAAE;EACzB,IAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,IAAAqB,IAAA,GAA+DnB,KAAK,IAAI,EAAE;IAAAoB,YAAA,GAAAD,IAAA,CAAlEE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAGF,OAAO,CAACG,OAAO,GAAAD,YAAA;IAAEE,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,AAAStE,IAAI,GAAAkE,IAAA,CAAJlE,IAAI;EAC1D,IAAMuE,OAAO,GAAG5B,YAAY,CAAC3C,IAAI,CAAC;EAClC,IAAAwE,eAAA,GAAqC7B,cAAc,CAACyB,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC;IAApEyC,SAAS,GAAAqB,eAAA;IAAEE,eAAe,GAAAF,eAAA;EACjC,IAAMG,oBAAoB,GAAGhC,YAAY,CAAC;IACtCiC,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX,CAAC;EACFV,OAAO,CAACjE,OAAO,GAAGN,IAAI;EACtB2C,eAAe,CAAC,YAAM;IAClB,IAAMuC,qBAAqB,GAAGd,OAAO,CAACe,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAE,SAAAA,KAACnC,SAAS;QAAA,OAAK,CAAC,CAACoB,OAAO,CAACjE,OAAO,IAClC,CAAC6C,SAAS,CAACnD,IAAI,IACfuF,qBAAqB,CAAChB,OAAO,CAACjE,OAAO,CAAC,CAACkF,QAAQ,CAACrC,SAAS,CAACnD,IAAI,CAAC,KAC/DyF,qBAAqB,CAACtC,SAAS,EAAEwB,oBAAoB,CAACrE,OAAO,CAAC,IAC9DoE,eAAe,CAAClC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE2B,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC,EAAEyC,SAAS,CAAC,CAAC;;KAC3F,CAAC;IACFkB,QAAQ,IAAIa,qBAAqB,CAACQ,WAAW,EAAE;IAG/C,OAAO;MAAA,OAAMR,qBAAqB,CAACQ,WAAW,EAAE;;GACnD,EAAE,CAACrB,QAAQ,EAAED,OAAO,CAAC,CAAC;EACvB,OAAOuB,iBAAiB,CAACxC,SAAS,EAAEiB,OAAO,CAAChB,eAAe,EAAEuB,oBAAoB,CAACrE,OAAO,EAAE,KAAK,CAAC;AACrG;;AC1BO,SAASsF,aAAaA,CAAC7C,KAAK,EAAE;EACjC,IAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,IAAQ7C,IAAI,GAAwD+C,KAAK,CAAjE/C,IAAI;IAAA6F,cAAA,GAAwD9C,KAAK,CAA3DqB,OAAO;IAAPA,OAAO,GAAAyB,cAAA,cAAG5B,OAAO,CAACG,OAAO,GAAAyB,cAAA;IAAEC,gBAAgB,GAAW/C,KAAK,CAAhC+C,gBAAgB;IAAEC,IAAI,GAAKhD,KAAK,CAAdgD,IAAI;EAC/DC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,EAAE,eAAe,CAAC;EAC7C,IAAAvB,eAAA,GAAoC7B,cAAc,CAACe,GAAG,CAACU,OAAO,CAAC8B,WAAW,EAAElG,IAAI,EAAE0D,GAAG,CAACU,OAAO,CAAC+B,cAAc,EAAEnG,IAAI,EAAE+C,KAAK,CAACjC,YAAY,CAAC,CAAC,CAAC;IAAlIzB,KAAK,GAAAmF,eAAA;IAAE4B,kBAAkB,GAAA5B,eAAA;EAChC,IAAMrB,SAAS,GAAGa,YAAY,CAAC;IAC3BI,OAAO,EAAEA,OAAO,IAAIH,OAAO,CAACG,OAAO;IACnCpE,IAAI,EAAJA;GACH,CAAC;EAIF,IAAMqG,aAAa,GAAGjC,OAAO,CAACkC,QAAQ,CAACtG,IAAI,EAAEwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAA8D,QAAA,KAAMxD,KAAK,CAACyD,KAAK;IAAET,IAAI,EAAAQ,QAAA,KAAMR,IAAI;IAAG,CAAC,EAAE;IAAE1G,KAAK,EAALA;GAAO,CAAC,CAAC;EAG7H,IAAMoH,aAAa,GAAG9D,iBAAiB,CAAC,UAAC3C,IAAI,EAAEX,KAAK,EAAK;IACrD,IAAMqH,KAAK,GAAGhD,GAAG,CAACU,OAAO,CAACuC,OAAO,EAAE3G,IAAI,CAAC;IACxC,IAAI0G,KAAK,EAAE;MACPA,KAAK,CAACE,EAAE,CAACC,KAAK,GAAGxH,KAAK;;GAE7B,EAAE,CAAC+E,OAAO,CAAC,CAAC;EACbzB,eAAe,CAAC,YAAM;IAClB,IAAMmE,CAAC,GAAGpD,GAAG,CAACU,OAAO,CAAC8B,WAAW,EAAElG,IAAI,EAAE0D,GAAG,CAACU,OAAO,CAAC+B,cAAc,EAAEnG,IAAI,EAAE+C,KAAK,CAACjC,YAAY,CAAC,CAAC;IAC/FkF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEjG,IAAI,EAAE+F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEtG,OAAO,EAAEsG,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEjF,YAAY,EAAEgG,CAAC,CAAC;IACjF,IAAMC,sBAAsB,GAAG3C,OAAO,CAACe,SAAS,CAACf,OAAO,CAACiB,SAAS,CAAC;MAC/DC,IAAI,EAAE,SAAAA,KAACnG,IAAI,EAAK;QAEZ,CAAC,CAACA,IAAI,CAACa,IAAI,IAAIA,IAAI,KAAKb,IAAI,CAACa,IAAI,KACjCoG,kBAAkB,CAAC1C,GAAG,CAACvE,IAAI,CAAC6H,MAAM,EAAEhH,IAAI,CAAC,CAAC;;KACjD,CAAC;IACFyG,aAAa,CAACzG,IAAI,EAAE,IAAI,CAAC;IACzB,OAAO,YAAM;MACT+G,sBAAsB,CAACrB,WAAW,EAAE;MACpC,IAAMuB,sBAAsB,GAAG7C,OAAO,CAAC8C,iBAAiB,IAAIpB,gBAAgB;MAC5E,IAAIqB,kBAAkB,CAAC/C,OAAO,CAACgD,MAAM,CAACC,KAAK,EAAErH,IAAI,CAAC,GAC5CiH,sBAAsB,IAAI,CAAC7C,OAAO,CAACkD,WAAW,CAAC5G,GAAG,GAClDuG,sBAAsB,EAAE;QAC1B7C,OAAO,CAACmD,UAAU,CAACvH,IAAI,CAAC;OAC3B,MACI;QACDyG,aAAa,CAACzG,IAAI,EAAE,KAAK,CAAC;;KAEjC;GACJ,EAAE,CAACA,IAAI,EAAEoE,OAAO,EAAE0B,gBAAgB,EAAEW,aAAa,CAAC,CAAC;EACpD,OAAO;IACHC,KAAK,EAAE;MACHhF,QAAQ,EAAE,SAAAA,SAAC/B,KAAK,EAAK;QACjB,IAAMN,KAAK,GAAGmI,kBAAkB,CAAC7H,KAAK,CAAC;QACvCyG,kBAAkB,CAAC/G,KAAK,CAAC;QACzBgH,aAAa,CAAC3E,QAAQ,CAAC;UACnB7B,MAAM,EAAE;YACJR,KAAK,EAALA,KAAK;YACLW,IAAI,EAAEA;WACT;UACDd,IAAI,EAAEmC,MAAM,CAACE;SAChB,CAAC;OACL;MACDE,MAAM,EAAE,SAAAA,SAAM;QACV4E,aAAa,CAAC5E,MAAM,CAAC;UACjB5B,MAAM,EAAE;YACJG,IAAI,EAAEA;WACT;UACDd,IAAI,EAAEmC,MAAM,CAACC;SAChB,CAAC;OACL;MACDtB,IAAI,EAAJA,IAAI;MACJX,KAAK,EAALA,KAAK;MACLoI,GAAG,EAAE,SAAAA,IAACC,GAAG;QAAA,OAAKA,GAAG,IACbrB,aAAa,CAACoB,GAAG,CAAC;UAGdE,KAAK,EAAE,SAAAA;YAAA,OAAMD,GAAG,CAACC,KAAK,IAAID,GAAG,CAACC,KAAK,EAAE;;UACrCC,iBAAiB,EAAE,SAAAA,kBAACC,OAAO;YAAA,OAAKH,GAAG,CAACE,iBAAiB,CAACC,OAAO,CAAC;;UAC9DC,cAAc,EAAE,SAAAA;YAAA,OAAMJ,GAAG,CAACI,cAAc,EAAE;;SAC7C,CAAC;;KACT;IACD3E,SAAS,EAATA,SAAS;IACT4E,UAAU,EAAE;MACRC,OAAO,EAAE,CAAC,CAACtE,GAAG,CAACP,SAAS,CAAC8B,MAAM,EAAEjF,IAAI,CAAC;MACtC4E,OAAO,EAAE,CAAC,CAAClB,GAAG,CAACP,SAAS,CAAC0B,WAAW,EAAE7E,IAAI,CAAC;MAC3CiI,SAAS,EAAE,CAAC,CAACvE,GAAG,CAACP,SAAS,CAAC2B,aAAa,EAAE9E,IAAI,CAAC;MAC/CkI,KAAK,EAAExE,GAAG,CAACP,SAAS,CAAC8B,MAAM,EAAEjF,IAAI;;GAExC;AACL;;IC1FMmI,UAAU,GAAG,SAAbA,UAAUA,CAAIpF,KAAK;EAAA,OAAKA,KAAK,CAACqF,MAAM,CAACxC,aAAa,CAAC7C,KAAK,CAAC,CAAC;AAAA;;ACDhE,oBAAe,UAAC/C,IAAI,EAAEqI,wBAAwB,EAAEpD,MAAM,EAAE/F,IAAI,EAAE2I,OAAO;EAAA,IAAAS,cAAA;EAAA,OAAKD,wBAAwB,GAC9F7F,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEwC,MAAM,CAACjF,IAAI,CAAC,CAAC,EAAE;IAAEuI,KAAK,EAAE/F,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGwC,MAAM,CAACjF,IAAI,CAAC,IAAIiF,MAAM,CAACjF,IAAI,CAAC,CAACuI,KAAK,GAAGtD,MAAM,CAACjF,IAAI,CAAC,CAACuI,KAAK,GAAG,EAAG,CAAC,GAAAD,cAAA,OAAAA,cAAA,CAAKpJ,IAAI,IAAG2I,OAAO,IAAI,IAAI,EAAAS,cAAA;GAAK,CAAC,GAAG,EAAE;AAAA;;ACDjM,aAAe,UAACjJ,KAAK;EAAA,OAAK,OAAO,CAACmJ,IAAI,CAACnJ,KAAK,CAAC;AAAA;;ACE7C,oBAAe,UAACoJ,KAAK;EAAA,OACnBzH,OAAO,CAACyH,KAAK,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACzH,KAAK,CAAC,OAAO,CAAC,CAAC;AAAA;;ACAzC,SAAS0H,GAAGA,CAACC,MAAM,EAAE/H,IAAI,EAAExB,KAAK,EAAE;EAC/C,IAAIwJ,KAAK,GAAG,CAAC,CAAC;EAEd,IAAMC,QAAQ,GAAGC,KAAK,CAAClI,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGmI,YAAY,CAACnI,IAAI,CAAC;EAC1D,IAAM+C,MAAM,GAAGkF,QAAQ,CAAClF,MAAM;EAC9B,IAAMqF,SAAS,GAAGrF,MAAM,GAAG,CAAC;EAC5B,OAAO,EAAEiF,KAAK,GAAGjF,MAAM,EAAE;IACvB,IAAMzC,GAAG,GAAG2H,QAAQ,CAACD,KAAK,CAAC;IAC3B,IAAIK,QAAQ,GAAG7J,KAAK;IACpB,IAAIwJ,KAAK,KAAKI,SAAS,EAAE;MACvB,IAAME,QAAQ,GAAGP,MAAM,CAACzH,GAAG,CAAC;MAC5B+H,QAAQ,GACNtJ,QAAQ,CAACuJ,QAAQ,CAAC,IAAI3J,KAAK,CAACC,OAAO,CAAC0J,QAAQ,CAAC,GACzCA,QAAQ,GACR,CAACC,KAAK,CAAC,CAACN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,GAC1B,EAAE,GACF,EAAE;;IAEZD,MAAM,CAACzH,GAAG,CAAC,GAAG+H,QAAQ;IACtBN,MAAM,GAAGA,MAAM,CAACzH,GAAG,CAAC;;EAEtB,OAAOyH,MAAM;AACf;;ACrBA,IAAMS,YAAY,GAAG,SAAfA,YAAYA,CAAIC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,EAAK;EACpD,SAAAC,SAAA,GAAAC,+BAAA,CAAkBF,WAAW,IAAIhH,MAAM,CAACmB,IAAI,CAAC2F,MAAM,CAAC,GAAAK,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAA3CzI,GAAG,GAAAwI,KAAA,CAAAtK,KAAA;IACV,IAAMqH,KAAK,GAAGhD,GAAG,CAAC4F,MAAM,EAAEnI,GAAG,CAAC;IAC9B,IAAIuF,KAAK,EAAE;MACP,IAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,IAAMtG,OAAO,GAAG2C,IAAI,CAACyD,KAAK,EAAE,IAAI,CAAC;MACjC,IAAIE,EAAE,IAAI2C,QAAQ,CAAC3C,EAAE,CAAC5G,IAAI,CAAC,EAAE;QACzB,IAAI4G,EAAE,CAACa,GAAG,CAACE,KAAK,IAAIvG,WAAW,CAACwF,EAAE,CAACa,GAAG,CAACE,KAAK,EAAE,CAAC,EAAE;UAC7C;SACH,MACI,IAAIf,EAAE,CAACiD,IAAI,EAAE;UACdjD,EAAE,CAACiD,IAAI,CAAC,CAAC,CAAC,CAAClC,KAAK,EAAE;UAClB;;OAEP,MACI,IAAI/H,QAAQ,CAACU,OAAO,CAAC,EAAE;QACxB+I,YAAY,CAAC/I,OAAO,EAAEiJ,QAAQ,CAAC;;;;AAI/C,CAAC;;ACxBD,yBAAe,UAACvJ,IAAI,EAAE6I,KAAK,EAAEiB,OAAO;EAAA,OAAKA,OAAO,IAAI,CAACA,OAAO,CAACC,WAAW,GAClED,OAAO,CAACE,SAAS,IAAOhK,IAAI,SAAI8J,OAAO,CAACG,UAAU,MAAG,GAClDjK,IAAI,SAAI6I,KAAK,MAAG;AAAA;;ACFzB,kBAAe,YAAM;EACnB,IAAMqB,CAAC,GACL,OAAOC,WAAW,KAAK,WAAW,GAAG/K,IAAI,CAACgL,GAAG,EAAE,GAAGD,WAAW,CAACC,GAAG,EAAE,GAAG,IAAI;EAE5E,OAAO,sCAAsC,CAAC1B,OAAO,CAAC,OAAO,EAAE,UAAC2B,CAAC,EAAK;IACpE,IAAMC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,GAAGN,CAAC,IAAI,EAAE,GAAG,CAAC;IAE3C,OAAO,CAACG,CAAC,IAAI,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,GAAG,EAAEG,QAAQ,CAAC,EAAE,CAAC;GACrD,CAAC;AACJ,CAAC;;ACRD,cAAe,UAACzD,MAAM,EAAO0D,OAAO;EAAA,IAApB1D,MAAM;IAANA,MAAM,GAAG,EAAE;;EAAA,OAAcA,MAAM,CAAC2D,GAAG,CAAC,UAACtL,KAAK;IAAA,IAAAiJ,cAAA;IAAA,OAAM9F,MAAM,CAACC,MAAM,EAAA6F,cAAA,OAAAA,cAAA,CAAIoC,OAAO,IAAIrL,KAAK,IAAIA,KAAK,CAACqL,OAAO,CAAC,IAAKE,UAAU,EAAE,EAAAtC,cAAA,GAAIjJ,KAAK,CAAC;GAAC,CAAC;AAAA;;ACAjI,SAASwL,MAAMA,CAAC1L,IAAI,EAAEE,KAAK,EAAE;EACxC,UAAAe,MAAA,CAAWmF,qBAAqB,CAACpG,IAAI,CAAC,EAAKoG,qBAAqB,CAAClG,KAAK,CAAC;AAC3E;;ACHA,sBAAe,UAACA,KAAK;EAAA,OACnBG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGG,KAAK,CAACH,KAAK,CAACuE,MAAM,CAAC,CAACkH,IAAI,CAACnK,SAAS,CAAC,GAAGA,SAAS;AAAA;;ACAzD,SAASoK,MAAMA,CAAC5L,IAAI,EAAE0J,KAAK,EAAExJ,KAAK,EAAE;EAC/C,UAAAe,MAAA,CACOjB,IAAI,CAAC6L,KAAK,CAAC,CAAC,EAAEnC,KAAK,CAAC,EACpBtD,qBAAqB,CAAClG,KAAK,CAAC,EAC5BF,IAAI,CAAC6L,KAAK,CAACnC,KAAK,CAAC;AAE5B;;ACLA,mBAAe,UACb1J,IAAI,EACJ8L,IAAI,EACJC,EAAE,EACC;EACH,IAAI1L,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;IACvB,IAAIiC,WAAW,CAACjC,IAAI,CAAC+L,EAAE,CAAC,CAAC,EAAE;MACzB/L,IAAI,CAAC+L,EAAE,CAAC,GAAGvK,SAAS;;IAEtBxB,IAAI,CAACgM,MAAM,CAACD,EAAE,EAAE,CAAC,EAAE/L,IAAI,CAACgM,MAAM,CAACF,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,OAAO9L,IAAI;;EAGb,OAAO,EAAE;AACX,CAAC;;ACfD,eAAe,UAACmK,MAAM,EAAEoB,OAAO;EAAA,OAAKpB,MAAM,CAACqB,GAAG,CAAC,UAACjE,KAAK;IAAA,IAALA,KAAK;MAALA,KAAK,GAAG,EAAE;;IAAA,OAAKzD,IAAI,CAACyD,KAAK,EAAEgE,OAAO,CAAC;IAAC;AAAA;;ACArE,SAASU,OAAOA,CAACjM,IAAI,EAAEE,KAAK,EAAE;EACzC,UAAAe,MAAA,CAAWmF,qBAAqB,CAAClG,KAAK,CAAC,EAAKkG,qBAAqB,CAACpG,IAAI,CAAC;AAC3E;;ACCA,SAASkM,eAAeA,CAAClM,IAAI,EAAEmM,OAAO,EAAE;EACtC,IAAIC,CAAC,GAAG,CAAC;EACT,IAAMC,IAAI,MAAApL,MAAA,CAAOjB,IAAI,CAAC;EACtB,SAAAsK,SAAA,GAAAC,+BAAA,CAAoB4B,OAAO,GAAA3B,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAAlBf,KAAK,GAAAc,KAAA,CAAAtK,KAAA;IACdmM,IAAI,CAACL,MAAM,CAACtC,KAAK,GAAG0C,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,EAAE;;EAEL,OAAOvK,OAAO,CAACwK,IAAI,CAAC,CAAC5H,MAAM,GAAG4H,IAAI,GAAG,EAAE;AACzC;AAEA,qBAAe,UAACrM,IAAI,EAAE0J,KAAK;EAAA,OACzBzH,WAAW,CAACyH,KAAK,CAAC,GACd,EAAE,GACFwC,eAAe,CACflM,IAAI,EACHoG,qBAAqB,CAACsD,KAAK,CAAC,CAAE4C,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC;IAAA,OAAKD,CAAC,GAAGC,CAAC;IACrD,CAAC;AAAA;;ACpBL,mBAAe,UAACxM,IAAI,EAAEyM,MAAM,EAAEC,MAAM,EAAK;EACvC1M,IAAI,CAACyM,MAAM,CAAC,GAAG,CAACzM,IAAI,CAAC0M,MAAM,CAAC,EAAG1M,IAAI,CAAC0M,MAAM,CAAC,GAAG1M,IAAI,CAACyM,MAAM,CAAC,CAAE,CAAC,CAAC,CAAC;AACjE,CAAC;;ACFD,iBAAe,UAACvM,KAAK;EAAA,OAAK,OAAOA,KAAK,KAAK,SAAS;AAAA;;ACMpD,SAASyM,OAAOA,CAAClD,MAAM,EAAEmD,UAAU,EAAE;EACnC,IAAMnI,MAAM,GAAGmI,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACpH,MAAM;EAC7C,IAAIiF,KAAK,GAAG,CAAC;EACb,OAAOA,KAAK,GAAGjF,MAAM,EAAE;IACrBgF,MAAM,GAAGxH,WAAW,CAACwH,MAAM,CAAC,GAAGC,KAAK,EAAE,GAAGD,MAAM,CAACmD,UAAU,CAAClD,KAAK,EAAE,CAAC,CAAC;;EAEtE,OAAOD,MAAM;AACf;AACA,AAAe,SAASoD,KAAKA,CAACpD,MAAM,EAAE/H,IAAI,EAAE;EAC1C,IAAMkL,UAAU,GAAGhD,KAAK,CAAClI,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGmI,YAAY,CAACnI,IAAI,CAAC;EAC5D,IAAMoL,WAAW,GAAGF,UAAU,CAACnI,MAAM,IAAI,CAAC,GAAGgF,MAAM,GAAGkD,OAAO,CAAClD,MAAM,EAAEmD,UAAU,CAAC;EACjF,IAAM5K,GAAG,GAAG4K,UAAU,CAACA,UAAU,CAACnI,MAAM,GAAG,CAAC,CAAC;EAC7C,IAAIsI,cAAc;EAClB,IAAID,WAAW,EAAE;IACf,OAAOA,WAAW,CAAC9K,GAAG,CAAC;;EAEzB,KAAK,IAAIgL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACpH,MAAM,EAAEuI,CAAC,EAAE,EAAE;IACvD,IAAItD,KAAK,GAAG,CAAC,CAAC;IACd,IAAIuD,SAAS;IACb,IAAMC,YAAY,GAAGN,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,EAAEmB,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,IAAMG,kBAAkB,GAAGD,YAAY,CAACzI,MAAM,GAAG,CAAC;IAClD,IAAIuI,CAAC,GAAG,CAAC,EAAE;MACTD,cAAc,GAAGtD,MAAM;;IAEzB,OAAO,EAAEC,KAAK,GAAGwD,YAAY,CAACzI,MAAM,EAAE;MACpC,IAAMmC,IAAI,GAAGsG,YAAY,CAACxD,KAAK,CAAC;MAChCuD,SAAS,GAAGA,SAAS,GAAGA,SAAS,CAACrG,IAAI,CAAC,GAAG6C,MAAM,CAAC7C,IAAI,CAAC;MACtD,IAAIuG,kBAAkB,KAAKzD,KAAK,KAC5BjJ,QAAQ,CAACwM,SAAS,CAAC,IAAItI,aAAa,CAACsI,SAAS,CAAC,IAC9C5M,KAAK,CAACC,OAAO,CAAC2M,SAAS,CAAC,IACvB,CAACA,SAAS,CAAC5L,MAAM,CAAC,UAACrB,IAAI;QAAA,OAAMS,QAAQ,CAACT,IAAI,CAAC,IAAI,CAAC2E,aAAa,CAAC3E,IAAI,CAAC,IAAKoN,SAAS,CAACpN,IAAI,CAAC;QAAC,CAACyE,MAAO,CAAC,EAAE;QACvGsI,cAAc,GAAG,OAAOA,cAAc,CAACnG,IAAI,CAAC,GAAG,OAAO6C,MAAM,CAAC7C,IAAI,CAAC;;MAEpEmG,cAAc,GAAGE,SAAS;;;EAG9B,OAAOxD,MAAM;AACf;;AC3CA,gBAAe,UAAC4D,WAAW,EAAE3D,KAAK,EAAExJ,KAAK,EAAK;EAC5CmN,WAAW,CAAC3D,KAAK,CAAC,GAAGxJ,KAAK;EAC1B,OAAOmN,WAAW;AACpB,CAAC;;ICeYC,aAAa,GAAG,SAAhBA,aAAaA,CAAI1J,KAAK,EAAK;EACpC,IAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,IAAAgD,cAAA,GAA+E9C,KAAK,CAA5EqB,OAAO;IAAPA,OAAO,GAAAyB,cAAA,cAAG5B,OAAO,CAACG,OAAO,GAAAyB,cAAA;IAAE7F,IAAI,GAAwC+C,KAAK,CAAjD/C,IAAI;IAAA0M,cAAA,GAAwC3J,KAAK,CAA3C2H,OAAO;IAAPA,OAAO,GAAAgC,cAAA,cAAG,IAAI,GAAAA,cAAA;IAAE5G,gBAAgB,GAAM/C,KAAK,CAA3B+C,gBAAgB;EACzE,IAAM6G,UAAU,GAAGhK,YAAY,CAAC,EAAE,CAAC;EACnC,IAAA6B,eAAA,GAA4B7B,cAAc,CAACiK,MAAM,CAACxI,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC,EAAE0K,OAAO,CAAC,CAAC;IAAvFpB,MAAM,GAAA9E,eAAA;IAAEsI,SAAS,GAAAtI,eAAA;EACxBJ,OAAO,CAACgD,MAAM,CAACC,KAAK,CAAC0F,GAAG,CAAC/M,IAAI,CAAC;EAC9B,IAAM6K,QAAM,GAAG,SAATA,QAAMA,CAAIxL,KAAK,EAAEyK,OAAO,EAAK;IAC/B,IAAMkD,WAAW,GAAGzH,qBAAqB,CAAClG,KAAK,CAAC;IAChD,IAAM4N,uBAAuB,GAAGC,MAAQ,CAAC9I,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC,EAAEgN,WAAW,CAAC;IACxF5I,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAEkN,MAAQ,EAAE;MACnDE,IAAI,EAAEC,cAAc,CAAChO,KAAK;KAC7B,EAAE4N,uBAAuB,EAAE,KAAK,CAAC;IAClCH,SAAS,CAACF,MAAM,CAACK,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;IACnDiC,UAAU,CAACrM,OAAO,GAAGgN,iBAAiB,CAACtN,IAAI,EAAEiN,uBAAuB,CAACrJ,MAAM,GAAGoJ,WAAW,CAACpJ,MAAM,EAAEkG,OAAO,CAAC;GAC7G;EACD,IAAMsB,SAAO,GAAG,SAAVA,SAAOA,CAAI/L,KAAK,EAAEyK,OAAO,EAAK;IAChC,IAAMmD,uBAAuB,GAAGM,OAAS,CAACnJ,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC,EAAEuF,qBAAqB,CAAClG,KAAK,CAAC,CAAC;IAC1G+E,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAEuN,OAAS,EAAE;MACpDH,IAAI,EAAEC,cAAc,CAAChO,KAAK;KAC7B,EAAE4N,uBAAuB,CAAC;IAC3BH,SAAS,CAACF,MAAM,CAACK,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;IACnDiC,UAAU,CAACrM,OAAO,GAAGgN,iBAAiB,CAACtN,IAAI,EAAE,CAAC,EAAE8J,OAAO,CAAC;GAC3D;EACD,IAAM0D,MAAM,GAAG,SAATA,MAAMA,CAAI3E,KAAK,EAAK;IACtB,IAAMoE,uBAAuB,GAAGQ,aAAa,CAACrJ,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC,EAAE6I,KAAK,CAAC;IACvFzE,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAEyN,aAAa,EAAE;MACxDL,IAAI,EAAEvE;KACT,EAAEoE,uBAAuB,CAAC;IAC3BH,SAAS,CAACF,MAAM,CAACK,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;GACtD;EACD,IAAMK,QAAM,GAAG,SAATA,QAAMA,CAAIlC,KAAK,EAAExJ,KAAK,EAAEyK,OAAO,EAAK;IACtC,IAAMmD,uBAAuB,GAAGS,MAAQ,CAACtJ,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC,EAAE6I,KAAK,EAAEtD,qBAAqB,CAAClG,KAAK,CAAC,CAAC;IAChH+E,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAE0N,MAAQ,EAAE;MACnDN,IAAI,EAAEvE,KAAK;MACX8E,IAAI,EAAEN,cAAc,CAAChO,KAAK;KAC7B,EAAE4N,uBAAuB,CAAC;IAC3BH,SAAS,CAACF,MAAM,CAACK,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;IACnDiC,UAAU,CAACrM,OAAO,GAAGgN,iBAAiB,CAACtN,IAAI,EAAE6I,KAAK,EAAEiB,OAAO,CAAC;GAC/D;EACD,IAAM8D,IAAI,GAAG,SAAPA,IAAIA,CAAIhC,MAAM,EAAEC,MAAM,EAAK;IAC7B,IAAMW,WAAW,GAAGpI,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC;IACrD6N,WAAW,CAACrB,WAAW,EAAEZ,MAAM,EAAEC,MAAM,CAAC;IACxCzH,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAE6N,WAAW,EAAE;MACtDT,IAAI,EAAExB,MAAM;MACZ+B,IAAI,EAAE9B;KACT,EAAEW,WAAW,EAAE,KAAK,CAAC;IACtBM,SAAS,CAACF,MAAM,CAACJ,WAAW,EAAE9B,OAAO,CAAC,CAAC;GAC1C;EACD,IAAMoD,IAAI,GAAG,SAAPA,IAAIA,CAAI7C,IAAI,EAAEC,EAAE,EAAK;IACvB,IAAMsB,WAAW,GAAGpI,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC;IACrD+N,WAAW,CAACvB,WAAW,EAAEvB,IAAI,EAAEC,EAAE,CAAC;IAClC9G,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAE+N,WAAW,EAAE;MACtDX,IAAI,EAAEnC,IAAI;MACV0C,IAAI,EAAEzC;KACT,EAAEsB,WAAW,EAAE,KAAK,CAAC;IACtBM,SAAS,CAACF,MAAM,CAACJ,WAAW,EAAE9B,OAAO,CAAC,CAAC;GAC1C;EACD,IAAMsD,MAAM,GAAG,SAATA,MAAMA,CAAInF,KAAK,EAAExJ,KAAK,EAAK;IAC7B,IAAMmN,WAAW,GAAGpI,OAAO,CAACyI,mBAAmB,CAAC7M,IAAI,CAAC;IACrD,IAAMiN,uBAAuB,GAAGgB,QAAQ,CAACzB,WAAW,EAAE3D,KAAK,EAAExJ,KAAK,CAAC;IACnE+E,OAAO,CAAC+I,qBAAqB,CAACzC,OAAO,EAAE1K,IAAI,EAAEiO,QAAQ,EAAE;MACnDb,IAAI,EAAEvE,KAAK;MACX8E,IAAI,EAAEtO;KACT,EAAEmN,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC;IAC5BM,SAAS,CAACF,MAAM,CAACK,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;GACtD;EACD/H,eAAe,CAAC,YAAM;IAClByB,OAAO,CAACkD,WAAW,CAAC5G,GAAG,GAAG,KAAK;IAC/B,IAAI0D,OAAO,CAACgD,MAAM,CAAC8G,QAAQ,EAAE;MACzB9J,OAAO,CAACe,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;KACnC,MACI;MACD,SAAAmE,SAAA,GAAAC,+BAAA,CAAyBtF,OAAO,CAACgD,MAAM,CAAC+G,KAAK,GAAAxE,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;QAAA,IAApCwE,UAAU,GAAAzE,KAAA,CAAAtK,KAAA;QACjB,IAAIW,IAAI,CAACqO,UAAU,CAACD,UAAU,CAAC,EAAE;UAC7BhK,OAAO,CAACe,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;UAChC;;;;IAIZlB,OAAO,CAACe,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;MACzBtF,IAAI,EAAJA,IAAI;MACJgH,MAAM,EAAE5C,OAAO,CAAC8B;KACnB,CAAC;IACFyG,UAAU,CAACrM,OAAO,IACd+I,YAAY,CAACjF,OAAO,CAACuC,OAAO,EAAE,UAACxF,GAAG;MAAA,OAAKA,GAAG,CAACkN,UAAU,CAAC1B,UAAU,CAACrM,OAAO,CAAC;MAAC;IAC9EqM,UAAU,CAACrM,OAAO,GAAG,EAAE;IACvB8D,OAAO,CAACe,SAAS,CAACkC,KAAK,CAAC/B,IAAI,CAAC;MACzBtF,IAAI,EAAJA,IAAI;MACJgH,MAAM,EAAEsH,OAAO,IAAAlO,MAAA,CAAKkJ,MAAM,GAAGoB,OAAO;KACvC,CAAC;IACFtG,OAAO,CAAChB,eAAe,CAAC4B,OAAO,IAAIZ,OAAO,CAACmK,YAAY,EAAE;GAC5D,EAAE,CAACjF,MAAM,EAAEtJ,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;EACpC/H,eAAe,CAAC,YAAM;IAClB,IAAM6L,sBAAsB,GAAGpK,OAAO,CAACe,SAAS,CAACkC,KAAK,CAAChC,SAAS,CAAC;MAC7DC,IAAI,WAAAA,KAACmJ,OAAO,EAAE;QACV,IAAIA,OAAO,CAACC,OAAO,EAAE;UACjB1C,KAAK,CAAC5H,OAAO,CAACuC,OAAO,EAAE8H,OAAO,CAACzO,IAAI,IAAIA,IAAI,CAAC;UAC5CgM,KAAK,CAAC5H,OAAO,CAAC8B,WAAW,EAAEuI,OAAO,CAACzO,IAAI,IAAIA,IAAI,CAAC;UAChDyO,OAAO,CAACzO,IAAI,GACN2I,GAAG,CAACvE,OAAO,CAAC8B,WAAW,EAAEuI,OAAO,CAACzO,IAAI,EAAEyO,OAAO,CAACzH,MAAM,CAAC,GACtDyH,OAAO,CAACzH,MAAM,KAAK5C,OAAO,CAAC8B,WAAW,GAAGuI,OAAO,CAACzH,MAAM,CAAC;UAC9D8F,SAAS,CAACF,MAAM,CAAClJ,GAAG,CAACU,OAAO,CAAC8B,WAAW,EAAElG,IAAI,CAAC,EAAE0K,OAAO,CAAC,CAAC;;;KAGrE,CAAC;IACF,CAAChH,GAAG,CAACU,OAAO,CAAC8B,WAAW,EAAElG,IAAI,CAAC,IAAI2I,GAAG,CAACvE,OAAO,CAAC8B,WAAW,EAAElG,IAAI,EAAE,EAAE,CAAC;IACrE,OAAO,YAAM;MACTwO,sBAAsB,CAAC9I,WAAW,EAAE;MACpC,IAAItB,OAAO,CAAC8C,iBAAiB,IAAIpB,gBAAgB,EAAE;QAC/C1B,OAAO,CAACmD,UAAU,CAACvH,IAAI,CAAC;QACxBgM,KAAK,CAAC5H,OAAO,CAAC8B,WAAW,EAAElG,IAAI,CAAC;OACnC,MACI;QACD,IAAM2O,gBAAgB,GAAGjL,GAAG,CAACU,OAAO,CAAC8B,WAAW,EAAElG,IAAI,CAAC;QACvD2O,gBAAgB,IAAIhG,GAAG,CAACvE,OAAO,CAAC8B,WAAW,EAAElG,IAAI,EAAE2O,gBAAgB,CAAC;;KAE3E;GACJ,EAAE,CAAC3O,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,EAAE5E,gBAAgB,CAAC,CAAC;EAC9C,OAAO;IACH8H,IAAI,EAAEjL,iBAAiB,CAACiL,IAAI,EAAE,CAAC5N,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IACvDoD,IAAI,EAAEnL,iBAAiB,CAACmL,IAAI,EAAE,CAAC9N,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IACvDU,OAAO,EAAEzI,iBAAiB,CAACyI,SAAO,EAAE,CAACpL,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IAC7DG,MAAM,EAAElI,iBAAiB,CAACkI,QAAM,EAAE,CAAC7K,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IAC3D8C,MAAM,EAAE7K,iBAAiB,CAAC6K,MAAM,EAAE,CAACxN,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IAC3DK,MAAM,EAAEpI,iBAAiB,CAACoI,QAAM,EAAE,CAAC/K,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IAC3DsD,MAAM,EAAErL,iBAAiB,CAACqL,MAAM,EAAE,CAAChO,IAAI,EAAEoE,OAAO,EAAEsG,OAAO,CAAC,CAAC;IAC3DpB,MAAM,EAAEA;GACX;AACL,CAAC;;AClJD;AACA,AAAO,MAAM,KAAK,gBAAgB,CAAC,WAAW;AAC9C,CAAC,SAAS,KAAK,GAAG,EAAE;AACpB,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,WAAW,EAAE,UAAU,EAAE;AAC1D,EAAE,MAAM,MAAM,GAAG,IAAI,KAAK,EAAE,CAAC;AAC7B,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACvB,EAAE,IAAI,KAAK,EAAE;AACb,GAAG,MAAM,QAAQ,GAAG,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAC;AACzD,GAAG,IAAI,QAAQ,EAAE;AACjB,IAAI,IAAI;AACR,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB,IAAI,MAAM;AACV,IAAI,OAAO,IAAI,CAAC;AAChB,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,GAAG,SAAS,KAAK,EAAE;AAC3B,GAAG,IAAI;AACP,IAAI,MAAM,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AAC1B,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE;AACrB,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAClE,KAAK,MAAM,IAAI,UAAU,EAAE;AAC3B,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3C,KAAK,MAAM;AACX,KAAK,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAC/B,KAAK;AACL,IAAI,CAAC,OAAO,CAAC,EAAE;AACf,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,IAAI;AACJ,GAAG,CAAC;AACJ,EAAE,OAAO,MAAM,CAAC;AAChB,GAAE;AACF,CAAC,OAAO,KAAK,CAAC;AACd,CAAC,GAAG,CAAC;AACL;AACA;AACA,AAAO,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;AAC5C,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AACd,EAAE,IAAI,KAAK,YAAY,KAAK,EAAE;AAC9B,GAAG,IAAI,KAAK,CAAC,CAAC,EAAE;AAChB,IAAI,IAAI,KAAK,GAAG,CAAC,EAAE;AACnB,KAAK,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AACpB,IAAI,MAAM;AACV,IAAI,KAAK,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC9C,IAAI,OAAO;AACX,IAAI;AACJ,GAAG;AACH,EAAE,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AAC3B,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5E,GAAG,OAAO;AACV,GAAG;AACH,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACjB,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;AACjB,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,EAAE,IAAI,QAAQ,EAAE;AAChB,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClB,GAAG;AACH,EAAE;AACF,CAAC;AACD;AACA,AAAO,SAAS,cAAc,CAAC,QAAQ,EAAE;AACzC,CAAC,OAAO,QAAQ,YAAY,KAAK,IAAI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACpD,CAAC;AACD,AA4CA;AACA;AACA,AAAO,SAAS,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;AAC3C,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC;AAC1B,CAAC,SAAS,MAAM,CAAC,MAAM,EAAE;AACzB,EAAE,IAAI;AACN,GAAG,OAAO,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE;AACtD,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACrB,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC/B,KAAK,IAAI,cAAc,CAAC,MAAM,CAAC,EAAE;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;AACxB,MAAM,MAAM;AACZ,MAAM,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,KAAK,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,MAAM,OAAO;AACb,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG,IAAI,IAAI,EAAE;AACb,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AAC7B,IAAI,MAAM;AACV,IAAI,IAAI,GAAG,MAAM,CAAC;AAClB,IAAI;AACJ,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,GAAG,OAAO,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/C,GAAG;AACH,EAAE;AACF,CAAC,MAAM,EAAE,CAAC;AACV,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACA;AACA;AACA,AAAO,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5C,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;AACf,CAAC,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AACzB,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACjB,EAAE;AACF,CAAC,OAAO,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACnE,CAAC;AACD,AAYA;AACA,AAAO,MAAM,eAAe,iBAAiB,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,IAAI,YAAY,CAAC;AAC/J,AA2DA;AACA,AAAO,MAAM,oBAAoB,iBAAiB,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,IAAI,iBAAiB,CAAC;AACxL,AA8UA;AACA;AACA,AAAO,SAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE;AACtC,CAAC,IAAI;AACL,EAAE,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;AACtB,EAAE,CAAC,MAAM,CAAC,EAAE;AACZ,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AACpB,EAAE;AACF,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC5B,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AACtC,EAAE;AACF,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACA;AACA,AAAO,SAAS,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE;AAClD,CAAC,IAAI;AACL,EAAE,IAAI,MAAM,GAAG,IAAI,EAAE,CAAC;AACtB,EAAE,CAAC,OAAO,CAAC,EAAE;AACb,EAAE,OAAO,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC5B,EAAE;AACF,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;AAC5B,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9E,EAAE;AACF,CAAC,OAAO,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AACjC,CAAC;;ACzkBD,gBAAe,UAACC,QAAQ,EAAEqF,IAAI,EAAK;EACjC,IAAIC,KAAK,GAAG,CAAC;EACb,OAAO,YAAa;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAnL,MAAA,EAAToL,IAAI,OAAAxP,KAAA,CAAAsP,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;MAAJD,IAAI,CAAAC,IAAA,IAAAF,SAAA,CAAAE,IAAA;;IACXC,YAAY,CAACL,KAAK,CAAC;IACnBA,KAAK,GAAGM,MAAM,CAACC,UAAU,CAAC;MAAA,OAAM7F,QAAQ,CAAA8F,KAAA,SAAIL,IAAI,CAAC;OAAEJ,IAAI,CAAC;GAC3D;AACH,CAAC;;ACJD,mBAAe,UAACvP,KAAK;EAAA,OAAKE,iBAAiB,CAACF,KAAK,CAAC,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;AAAA;;ACC3D,SAASiQ,SAASA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAChD,IAAIC,WAAW,CAACF,OAAO,CAAC,IACpBE,WAAW,CAACD,OAAO,CAAC,IACpB9P,YAAY,CAAC6P,OAAO,CAAC,IACrB7P,YAAY,CAAC8P,OAAO,CAAC,EAAE;IACvB,OAAOD,OAAO,KAAKC,OAAO;;EAE9B,IAAME,KAAK,GAAGlN,MAAM,CAACmB,IAAI,CAAC4L,OAAO,CAAC;EAClC,IAAMI,KAAK,GAAGnN,MAAM,CAACmB,IAAI,CAAC6L,OAAO,CAAC;EAClC,IAAIE,KAAK,CAAC9L,MAAM,KAAK+L,KAAK,CAAC/L,MAAM,EAAE;IAC/B,OAAO,KAAK;;EAEhB,SAAAgM,EAAA,MAAAC,KAAA,GAAkBH,KAAK,EAAAE,EAAA,GAAAC,KAAA,CAAAjM,MAAA,EAAAgM,EAAA,IAAE;IAApB,IAAMzO,GAAG,GAAA0O,KAAA,CAAAD,EAAA;IACV,IAAME,IAAI,GAAGP,OAAO,CAACpO,GAAG,CAAC;IACzB,IAAI,CAACwO,KAAK,CAACnK,QAAQ,CAACrE,GAAG,CAAC,EAAE;MACtB,OAAO,KAAK;;IAEhB,IAAIA,GAAG,KAAK,KAAK,EAAE;MACf,IAAM4O,IAAI,GAAGP,OAAO,CAACrO,GAAG,CAAC;MACzB,IAAI,CAACvB,QAAQ,CAACkQ,IAAI,CAAC,IAAItQ,KAAK,CAACC,OAAO,CAACqQ,IAAI,CAAC,MACrClQ,QAAQ,CAACmQ,IAAI,CAAC,IAAIvQ,KAAK,CAACC,OAAO,CAACsQ,IAAI,CAAC,CAAC,GACrC,CAACT,SAAS,CAACQ,IAAI,EAAEC,IAAI,CAAC,GACtBD,IAAI,KAAKC,IAAI,EAAE;QACjB,OAAO,KAAK;;;;EAIxB,OAAO,IAAI;AACf;;AC9BA,0BAAe,UAACC,IAAI;EAAA,OAAM;IACtBC,UAAU,EAAE,CAACD,IAAI,IAAIA,IAAI,KAAKxO,eAAe,CAACG,QAAQ;IACtDuO,QAAQ,EAAEF,IAAI,KAAKxO,eAAe,CAACC,MAAM;IACzC0O,UAAU,EAAEH,IAAI,KAAKxO,eAAe,CAACE,QAAQ;IAC7C0O,OAAO,EAAEJ,IAAI,KAAKxO,eAAe,CAACK,GAAG;IACrCwO,SAAS,EAAEL,IAAI,KAAKxO,eAAe,CAACI;GACvC;AAAA,CAAC;;ACPF,mBAAe,UAAC3C,OAAO;EAAA,OAAKA,OAAO,CAACC,IAAI,KAAK,MAAM;AAAA;;ACAnD,kBAAe,UAACG,KAAK;EAAA,OAAK,OAAOA,KAAK,KAAK,UAAU;AAAA;;ACArD,qBAAe,UAACA,KAAK;EAAA,OAAKA,KAAK,YAAYiR,WAAW;AAAA;;ACAtD,wBAAe,UAACrR,OAAO;EAAA,OAAKA,OAAO,CAACC,IAAI,sBAAsB;AAAA;;ACA9D,oBAAe,UAACD,OAAO;EAAA,OAAKA,OAAO,CAACC,IAAI,KAAK,OAAO;AAAA;;ACEpD,iCAAe,UAACuI,GAAG;EAAA,OAAK8I,YAAY,CAAC9I,GAAG,CAAC,IAAI3H,eAAe,CAAC2H,GAAG,CAAC;AAAA;;ACFjE,gBAAe,UAACpI,KAAK;EAAA,OAAK,OAAOA,KAAK,KAAK,QAAQ;AAAA;;ACAnD,YAAe,OAAO8P,MAAM,KAAK,WAAW,IACxC,OAAOA,MAAM,CAACmB,WAAW,KAAK,WAAW,IACzC,OAAOE,QAAQ,KAAK,WAAW;;ICFtBC,YAAY;EACvB,SAAAA,eAAc;IACV,IAAI,CAACC,SAAS,GAAG,EAAE;;EACtB,IAAAC,MAAA,GAAAF,YAAA,CAAAG,SAAA;EAAAD,MAAA,CACD5D,GAAG,GAAH,SAAAA,IAAI8D,QAAQ,EAAE;IACV,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,QAAQ,CAAC;GAChC;EAAAF,MAAA,CACDjL,WAAW,GAAX,SAAAA,cAAc;IACV,SAAA+D,SAAA,GAAAC,+BAAA,CAAuB,IAAI,CAACgH,SAAS,GAAA/G,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;MAAA,IAA5BmH,QAAQ,GAAApH,KAAA,CAAAtK,KAAA;MACf0R,QAAQ,EAAE;;IAEd,IAAI,CAACL,SAAS,GAAG,EAAE;GACtB;EAAA,OAAAD,YAAA;AAAA;AACF,IACKO,UAAU;EACd,SAAAA,WAAYC,QAAQ,EAAEC,YAAY,EAAE;IAAA,IAAAC,KAAA;IAChC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACG,MAAM,GAAG,KAAK;IACnBF,YAAY,CAACnE,GAAG,CAAC;MAAA,OAAOoE,KAAI,CAACC,MAAM,GAAG,IAAI;KAAC,CAAC;;EAC/C,IAAAC,OAAA,GAAAL,UAAA,CAAAJ,SAAA;EAAAS,OAAA,CACD/L,IAAI,GAAJ,SAAAA,KAAKjG,KAAK,EAAE;IACR,IAAI,CAAC,IAAI,CAAC+R,MAAM,EAAE;MACd,IAAI,CAACH,QAAQ,CAAC3L,IAAI,CAACjG,KAAK,CAAC;;GAEhC;EAAA,OAAA2R,UAAA;AAAA;AAAA,IAEkBM,OAAO;EAC1B,SAAAA,UAAc;IACV,IAAI,CAACC,SAAS,GAAG,EAAE;;EACtB,IAAAC,OAAA,GAAAF,OAAA,CAAAV,SAAA;EAAAY,OAAA,CACDlM,IAAI,GAAJ,SAAAA,KAAKjG,KAAK,EAAE;IACR,SAAAoS,UAAA,GAAA/H,+BAAA,CAAuB,IAAI,CAAC6H,SAAS,GAAAG,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAA7H,IAAA,GAAE;MAAA,IAA5BqH,QAAQ,GAAAS,MAAA,CAAArS,KAAA;MACf4R,QAAQ,CAAC3L,IAAI,CAACjG,KAAK,CAAC;;GAE3B;EAAAmS,OAAA,CACDnM,SAAS,GAAT,SAAAA,UAAU4L,QAAQ,EAAE;IAChB,IAAMC,YAAY,GAAG,IAAIT,YAAY,EAAE;IACvC,IAAMkB,UAAU,GAAG,IAAIX,UAAU,CAACC,QAAQ,EAAEC,YAAY,CAAC;IACzD,IAAI,CAACK,SAAS,CAACT,IAAI,CAACa,UAAU,CAAC;IAC/B,OAAOT,YAAY;GACtB;EAAAM,OAAA,CACD9L,WAAW,GAAX,SAAAA,cAAc;IACV,IAAI,CAAC6L,SAAS,GAAG,EAAE;GACtB;EAAA,OAAAD,OAAA;AAAA;;AC1CH,IAAMM,aAAa,GAAG;EAClBvS,KAAK,EAAE,KAAK;EACZ2F,OAAO,EAAE;AACb,CAAC;AACD,IAAM6M,WAAW,GAAG;EAAExS,KAAK,EAAE,IAAI;EAAE2F,OAAO,EAAE;AAAK,CAAC;AAClD,wBAAe,UAAC8E,OAAO,EAAK;EACxB,IAAItK,KAAK,CAACC,OAAO,CAACqK,OAAO,CAAC,EAAE;IACxB,IAAIA,OAAO,CAAClG,MAAM,GAAG,CAAC,EAAE;MACpB,IAAMoD,MAAM,GAAG8C,OAAO,CACjBtJ,MAAM,CAAC,UAACsR,MAAM;QAAA,OAAKA,MAAM,IAAIA,MAAM,CAAC/R,OAAO,IAAI,CAAC+R,MAAM,CAACzN,QAAQ;QAAC,CAChEsG,GAAG,CAAC,UAACmH,MAAM;QAAA,OAAKA,MAAM,CAACzS,KAAK;QAAC;MAClC,OAAO;QAAEA,KAAK,EAAE2H,MAAM;QAAEhC,OAAO,EAAE,CAAC,CAACgC,MAAM,CAACpD;OAAQ;;IAEtD,OAAOkG,OAAO,CAAC,CAAC,CAAC,CAAC/J,OAAO,IAAI,CAAC+J,OAAO,CAAC,CAAC,CAAC,CAACzF,QAAQ,GAEzCyF,OAAO,CAAC,CAAC,CAAC,CAACiI,UAAU,IAAI,CAAC3Q,WAAW,CAAC0I,OAAO,CAAC,CAAC,CAAC,CAACiI,UAAU,CAAC1S,KAAK,CAAC,GAC5D+B,WAAW,CAAC0I,OAAO,CAAC,CAAC,CAAC,CAACzK,KAAK,CAAC,IAAIyK,OAAO,CAAC,CAAC,CAAC,CAACzK,KAAK,KAAK,EAAE,GACpDwS,WAAW,GACX;MAAExS,KAAK,EAAEyK,OAAO,CAAC,CAAC,CAAC,CAACzK,KAAK;MAAE2F,OAAO,EAAE;KAAM,GAC9C6M,WAAW,GACnBD,aAAa;;EAEvB,OAAOA,aAAa;AACxB,CAAC;;ACvBD,uBAAe,UAACvS,KAAK,EAAA6E,IAAA;EAAA,IAAI8N,aAAa,GAAA9N,IAAA,CAAb8N,aAAa;IAAEC,WAAW,GAAA/N,IAAA,CAAX+N,WAAW;IAAEC,UAAU,GAAAhO,IAAA,CAAVgO,UAAU;EAAA,OAAO9Q,WAAW,CAAC/B,KAAK,CAAC,GAClFA,KAAK,GACL2S,aAAa,GACT3S,KAAK,KAAK,EAAE,GACR8S,GAAG,GACH,CAAC9S,KAAK,GACV4S,WAAW,GACP,IAAI7S,IAAI,CAACC,KAAK,CAAC,GACf6S,UAAU,GACNA,UAAU,CAAC7S,KAAK,CAAC,GACjBA,KAAK;AAAA;;ACXvB,8BAAe,UAACyK,OAAO;EAAA,OAAK,GAAA1J,MAAA,CAAI0J,OAAO,EAClCtJ,MAAM,CAAC,UAAA0D,IAAA;IAAA,IAAGkO,QAAQ,GAAAlO,IAAA,CAARkO,QAAQ;IAAA,OAAOA,QAAQ;IAAC,CAClCzH,GAAG,CAAC,UAAA0H,KAAA;IAAA,IAAGhT,KAAK,GAAAgT,KAAA,CAALhT,KAAK;IAAA,OAAOA,KAAK;IAAC;AAAA;;ACF9B,IAAMiT,aAAa,GAAG;EACpBtN,OAAO,EAAE,KAAK;EACd3F,KAAK,EAAE;AACT,CAAC;AACD,qBAAe,UAACyK,OAAO;EAAA,OAAKtK,KAAK,CAACC,OAAO,CAACqK,OAAO,CAAC,GAC9CA,OAAO,CAAC5I,MAAM,CAAC,UAACqR,QAAQ,EAAET,MAAM;IAAA,OAAKA,MAAM,IAAIA,MAAM,CAAC/R,OAAO,IAAI,CAAC+R,MAAM,CAACzN,QAAQ,GAC7E;MACEW,OAAO,EAAE,IAAI;MACb3F,KAAK,EAAEyS,MAAM,CAACzS;KACjB,GACCkT,QAAQ;KAAED,aAAa,CAAC,GAC5BA,aAAa;AAAA;;ACFF,SAASE,aAAaA,CAAC9L,KAAK,EAAE;EACzC,IAAIA,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;IACnB,IAAMa,GAAG,GAAGf,KAAK,CAACE,EAAE,CAACa,GAAG;IAKxB,IAAIgL,WAAW,CAAChL,GAAG,CAAC,EAAE;MAClB,OAAOA,GAAG,CAACiL,KAAK;;IAEpB,IAAInC,YAAY,CAAC9I,GAAG,CAAC,EAAE;MACnB,OAAOkL,aAAa,CAACjM,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,CAACxK,KAAK;;IAE7C,IAAIuT,gBAAgB,CAACnL,GAAG,CAAC,EAAE;MACvB,OAAOoL,sBAAsB,CAACpL,GAAG,CAACqC,OAAO,CAAC;;IAE9C,IAAIgJ,eAAU,CAACrL,GAAG,CAAC,EAAE;MACjB,OAAOsL,gBAAgB,CAACrM,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,CAACxK,KAAK;;IAEhD,OAAO2T,eAAe,CAAC5R,WAAW,CAACqG,GAAG,CAACpI,KAAK,CAAC,GAAGqH,KAAK,CAACE,EAAE,CAACa,GAAG,CAACpI,KAAK,GAAGoI,GAAG,CAACpI,KAAK,EAAEqH,KAAK,CAACE,EAAE,CAAC;;AAEjG;;AC3BA,0BAAe,UACb4C,WAAW,EACXyJ,QAAQ,EACRC,YAAY,EACZC,yBAAyB,EACtB;EACH,IAAM7J,MAAM,GAAG,EAAE;EAEjB,SAAAG,SAAA,GAAAC,+BAAA,CAAmBF,WAAW,GAAAG,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAArB5J,IAAI,GAAA2J,KAAA,CAAAtK,KAAA;IACb,IAAMqH,KAAK,GAAGhD,GAAG,CAACuP,QAAQ,EAAEjT,IAAI,CAAC;IAEjC0G,KAAK,IAAIiC,GAAG,CAACW,MAAM,EAAEtJ,IAAI,EAAE0G,KAAK,CAACE,EAAE,CAAC;;EAGtC,OAAO;IACLsM,YAAY,EAAZA,YAAY;IACZ/S,KAAK,KAAAC,MAAA,CAAMoJ,WAAW,CAAC;IACvBF,MAAM,EAANA,MAAM;IACN6J,yBAAyB,EAAzBA;GACD;AACH,CAAC;;ACvBD,qBAAe,UAACrJ,OAAO,EAAEsJ,OAAO;EAAA,OAAKA,OAAO,IACxCtJ,OAAO,KACNA,OAAO,CAAC1H,QAAQ,IACb0H,OAAO,CAAC9H,GAAG,IACX8H,OAAO,CAAC/H,GAAG,IACX+H,OAAO,CAAC7H,SAAS,IACjB6H,OAAO,CAAC5H,SAAS,IACjB4H,OAAO,CAAC3H,OAAO,IACf2H,OAAO,CAACzH,QAAQ,CAAC;AAAA;;ACNlB,SAASgR,SAASA,CAACxT,MAAM,EAAEyC,MAAM,EAAE;EACtC,IAAImN,WAAW,CAAC5P,MAAM,CAAC,IAAI4P,WAAW,CAACnN,MAAM,CAAC,EAAE;IAC5C,OAAOA,MAAM;;EAEjB,KAAK,IAAMnB,GAAG,IAAImB,MAAM,EAAE;IACtB,IAAMgR,WAAW,GAAGzT,MAAM,CAACsB,GAAG,CAAC;IAC/B,IAAMoS,WAAW,GAAGjR,MAAM,CAACnB,GAAG,CAAC;IAC/B,IAAI;MACAtB,MAAM,CAACsB,GAAG,CAAC,GACNvB,QAAQ,CAAC0T,WAAW,CAAC,IAAI1T,QAAQ,CAAC2T,WAAW,CAAC,IAC1C/T,KAAK,CAACC,OAAO,CAAC6T,WAAW,CAAC,IAAI9T,KAAK,CAACC,OAAO,CAAC8T,WAAW,CAAE,GACxDF,SAAS,CAACC,WAAW,EAAEC,WAAW,CAAC,GACnCA,WAAW;KACxB,CACD,OAAOC,EAAE,EAAE;;EAEf,OAAO3T,MAAM;AACjB;;ACdA,SAAS4T,cAAcA,CAACzM,MAAM,EAAE0M,aAAa,EAAE7O,WAAW,EAAE8O,UAAU,EAAEC,UAAU,EAAE;EAChF,IAAI/K,KAAK,GAAG,CAAC,CAAC;EACd,OAAO,EAAEA,KAAK,GAAG7B,MAAM,CAACpD,MAAM,EAAE;IAC5B,KAAK,IAAMzC,GAAG,IAAI6F,MAAM,CAAC6B,KAAK,CAAC,EAAE;MAC7B,IAAIrJ,KAAK,CAACC,OAAO,CAACuH,MAAM,CAAC6B,KAAK,CAAC,CAAC1H,GAAG,CAAC,CAAC,EAAE;QACnC,CAAC0D,WAAW,CAACgE,KAAK,CAAC,KAAKhE,WAAW,CAACgE,KAAK,CAAC,GAAG,EAAE,CAAC;QAChDhE,WAAW,CAACgE,KAAK,CAAC,CAAC1H,GAAG,CAAC,GAAG,EAAE;QAC5BsS,cAAc,CAACzM,MAAM,CAAC6B,KAAK,CAAC,CAAC1H,GAAG,CAAC,EAAEuC,GAAG,CAACgQ,aAAa,CAAC7K,KAAK,CAAC,IAAI,EAAE,EAAE1H,GAAG,EAAE,EAAE,CAAC,EAAE0D,WAAW,CAACgE,KAAK,CAAC,CAAC1H,GAAG,CAAC,EAAE0D,WAAW,CAACgE,KAAK,CAAC,EAAE1H,GAAG,CAAC;OACjI,MACI;QAAA,IAAAmH,cAAA;QACD,CAAC/I,iBAAiB,CAACmU,aAAa,CAAC,IAC7BpE,SAAS,CAAC5L,GAAG,CAACgQ,aAAa,CAAC7K,KAAK,CAAC,IAAI,EAAE,EAAE1H,GAAG,CAAC,EAAE6F,MAAM,CAAC6B,KAAK,CAAC,CAAC1H,GAAG,CAAC,CAAC,GACjEwH,GAAG,CAAC9D,WAAW,CAACgE,KAAK,CAAC,IAAI,EAAE,EAAE1H,GAAG,CAAC,GACjC0D,WAAW,CAACgE,KAAK,CAAC,GAAGrG,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEoC,WAAW,CAACgE,KAAK,CAAC,CAAC,GAAAP,cAAA,OAAAA,cAAA,CAAKnH,GAAG,IAAG,IAAI,EAAAmH,cAAA,EAAI;;;IAG1GqL,UAAU,IACN,CAAC9O,WAAW,CAACjB,MAAM,IACnB,OAAO+P,UAAU,CAACC,UAAU,CAAC;;EAErC,OAAO/O,WAAW;AACtB;AACA,gCAAe,UAACmC,MAAM,EAAE0M,aAAa,EAAE7O,WAAW;EAAA,OAAKwO,SAAS,CAACI,cAAc,CAACzM,MAAM,EAAE0M,aAAa,EAAE7O,WAAW,CAACmG,KAAK,CAAC,CAAC,EAAEhE,MAAM,CAACpD,MAAM,CAAC,CAAC,EAAE6P,cAAc,CAACC,aAAa,EAAE1M,MAAM,EAAEnC,WAAW,CAACmG,KAAK,CAAC,CAAC,EAAEhE,MAAM,CAACpD,MAAM,CAAC,CAAC,CAAC;AAAA;;AC3BxN,sBAAe,UAAAM,IAAA,EAAkI;EAAA,IAA/HgM,QAAQ,GAAAhM,IAAA,CAARgM,QAAQ;IAAEC,UAAU,GAAAjM,IAAA,CAAViM,UAAU;IAAEE,SAAS,GAAAnM,IAAA,CAATmM,SAAS;IAAEpI,SAAS,GAAA/D,IAAA,CAAT+D,SAAS;IAAE4L,kBAAkB,GAAA3P,IAAA,CAAlB2P,kBAAkB;IAAEC,oBAAoB,GAAA5P,IAAA,CAApB4P,oBAAoB;IAAEC,WAAW,GAAA7P,IAAA,CAAX6P,WAAW;IAAEC,WAAW,GAAA9P,IAAA,CAAX8P,WAAW;IAAE5D,OAAO,GAAAlM,IAAA,CAAPkM,OAAO;EACvI,IAAIA,OAAO,EAAE;IACT,OAAO,KAAK;GACf,MACI,IAAI,CAAC4D,WAAW,IAAI3D,SAAS,EAAE;IAChC,OAAO,EAAEpI,SAAS,IAAI8L,WAAW,CAAC;GACrC,MACI,IAAIC,WAAW,GAAGH,kBAAkB,GAAG3D,QAAQ,EAAE;IAClD,OAAO,CAAC6D,WAAW;GACtB,MACI,IAAIC,WAAW,GAAGF,oBAAoB,GAAG3D,UAAU,EAAE;IACtD,OAAO4D,WAAW;;EAEtB,OAAO,IAAI;AACb,CAAC;;ACVD,uBAAe,UAACtM,GAAG,EAAEzH,IAAI;EAAA,OACvB,CAACgB,OAAO,CAAC0C,GAAG,CAAC+D,GAAG,EAAEzH,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC4D,MAAM,IAAIoI,KAAK,CAACvE,GAAG,EAAEzH,IAAI,CAAC;AAAA;;ACHzD,iBAAe,UAACX,KAAK;EAAA,OAAK4U,QAAQ,CAAC5U,KAAK,CAAC,IAAIsD,oBAAoB,CAACtD,KAAK,CAAC;AAAA;;ACFxE,eAAe,UAACA,KAAK;EAAA,OAAKA,KAAK,YAAY6U,MAAM;AAAA;;ACElC,SAASC,gBAAgBA,CAACpT,MAAM,EAAE0G,GAAG,EAAEvI,IAAI,EAAe;EAAA,IAAnBA,IAAI;IAAJA,IAAI,GAAG,UAAU;;EACnE,IAAIkV,SAAS,CAACrT,MAAM,CAAC,IAChBvB,KAAK,CAACC,OAAO,CAACsB,MAAM,CAAC,IAAIA,MAAM,CAACsT,KAAK,CAACD,SAAS,CAAE,IACjD7H,SAAS,CAACxL,MAAM,CAAC,IAAI,CAACA,MAAO,EAAE;IAChC,OAAO;MACH7B,IAAI,EAAJA,IAAI;MACJ2I,OAAO,EAAEuM,SAAS,CAACrT,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE;MACxC0G,GAAG,EAAHA;KACH;;AAET;;ACTA,0BAAe,UAAC6M,cAAc;EAAA,OAC5B1U,QAAQ,CAAC0U,cAAc,CAAC,IAAI,CAACC,OAAO,CAACD,cAAc,CAAC,GAChDA,cAAc,GACd;IACEjV,KAAK,EAAEiV,cAAc;IACrBzM,OAAO,EAAE;GACV;AAAA;;ACQP,+BAAsBnB,KAAK,EAAE8N,UAAU,EAAEnM,wBAAwB,EAAE8K,yBAAyB;EAAA,IAAK;IAAA,IAAAsB,MAAA,YAAAA,OAAAC,QAAA;MAAA,IAAAC,KAAA,SAAAD,QAAA;MAsI7FE,gBAAgB,CAAC,IAAI,CAAC;MACtB,OAAO1M,KAAK;;IAAC,IAAAyM,KAAA;IAtIb,IAAAE,SAAA,GAAgHnO,KAAK,CAACE,EAAE;MAAhHa,GAAG,GAAAoN,SAAA,CAAHpN,GAAG;MAAEoC,IAAI,GAAAgL,SAAA,CAAJhL,IAAI;MAAEzH,QAAQ,GAAAyS,SAAA,CAARzS,QAAQ;MAAEH,SAAS,GAAA4S,SAAA,CAAT5S,SAAS;MAAEC,SAAS,GAAA2S,SAAA,CAAT3S,SAAS;MAAEF,GAAG,GAAA6S,SAAA,CAAH7S,GAAG;MAAED,GAAG,GAAA8S,SAAA,CAAH9S,GAAG;MAAEI,OAAO,GAAA0S,SAAA,CAAP1S,OAAO;MAAEE,QAAQ,GAAAwS,SAAA,CAARxS,QAAQ;MAAErC,IAAI,GAAA6U,SAAA,CAAJ7U,IAAI;MAAEgS,aAAa,GAAA6C,SAAA,CAAb7C,aAAa;MAAEnL,KAAK,GAAAgO,SAAA,CAALhO,KAAK;IAC1G,IAAI,CAACA,KAAK,EAAE;MACR,OAAAiO,OAAA,CAAAC,OAAA,CAAO,EAAE;;IAEb,IAAMC,QAAQ,GAAGnL,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAGpC,GAAG;IACrC,IAAMmN,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAI/M,OAAO,EAAK;MAClC,IAAIsL,yBAAyB,IAAI6B,QAAQ,CAAClN,cAAc,EAAE;QACtDkN,QAAQ,CAACpN,iBAAiB,CAAC2E,SAAS,CAAC1E,OAAO,CAAC,GAAG,EAAE,GAAGA,OAAO,IAAI,GAAG,CAAC;QACpEmN,QAAQ,CAAClN,cAAc,EAAE;;KAEhC;IACD,IAAMI,KAAK,GAAG,EAAE;IAChB,IAAM+M,OAAO,GAAG1E,YAAY,CAAC9I,GAAG,CAAC;IACjC,IAAMqL,UAAU,GAAGhT,eAAe,CAAC2H,GAAG,CAAC;IACvC,IAAMyN,iBAAiB,GAAGD,OAAO,IAAInC,UAAU;IAC/C,IAAMqC,OAAO,GAAI,CAACnD,aAAa,IAAIS,WAAW,CAAChL,GAAG,CAAC,KAAK,CAACA,GAAG,CAACpI,KAAK,IAC9DmV,UAAU,KAAK,EAAE,IAChBhV,KAAK,CAACC,OAAO,CAAC+U,UAAU,CAAC,IAAI,CAACA,UAAU,CAAC5Q,MAAO;IACrD,IAAMwR,iBAAiB,GAAGC,YAAY,CAACC,IAAI,CAAC,IAAI,EAAEtV,IAAI,EAAEqI,wBAAwB,EAAEH,KAAK,CAAC;IACxF,IAAMqN,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,SAAS,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,OAAO,EAAqCC,OAAO,EAAwC;MAAA,IAA3FD,OAAO;QAAPA,OAAO,GAAG7T,sBAAsB,CAACG,SAAS;;MAAA,IAAE2T,OAAO;QAAPA,OAAO,GAAG9T,sBAAsB,CAACI,SAAS;;MAC3J,IAAM2F,OAAO,GAAG2N,SAAS,GAAGC,gBAAgB,GAAGC,gBAAgB;MAC/DxN,KAAK,CAAClI,IAAI,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAAC;QAAEvD,IAAI,EAAEsW,SAAS,GAAGG,OAAO,GAAGC,OAAO;QAAE/N,OAAO,EAAPA,OAAO;QACtEJ,GAAG,EAAHA;OAAK,EAAE2N,iBAAiB,CAACI,SAAS,GAAGG,OAAO,GAAGC,OAAO,EAAE/N,OAAO,CAAC,CAAC;KACxE;IACD,IAAIzF,QAAQ,KACN,CAAC8S,iBAAiB,KAAKC,OAAO,IAAI5V,iBAAiB,CAACiV,UAAU,CAAC,CAAC,IAC7DjI,SAAS,CAACiI,UAAU,CAAC,IAAI,CAACA,UAAW,IACrC1B,UAAU,IAAI,CAACC,gBAAgB,CAAClJ,IAAI,CAAC,CAAC7E,OAAQ,IAC9CiQ,OAAO,IAAI,CAACtC,aAAa,CAAC9I,IAAI,CAAC,CAAC7E,OAAQ,CAAC,EAAE;MAChD,IAAAd,IAAA,GAA2BkQ,SAAS,CAAChS,QAAQ,CAAC,GACxC;UAAE/C,KAAK,EAAE,CAAC,CAAC+C,QAAQ;UAAEyF,OAAO,EAAEzF;SAAU,GACxCyT,kBAAkB,CAACzT,QAAQ,CAAC;QAF1B/C,KAAK,GAAA6E,IAAA,CAAL7E,KAAK;QAAEwI,OAAO,GAAA3D,IAAA,CAAP2D,OAAO;MAGtB,IAAIxI,KAAK,EAAE;QACP6I,KAAK,CAAClI,IAAI,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAAC;UAAEvD,IAAI,EAAE4C,sBAAsB,CAACM,QAAQ;UAAEyF,OAAO,EAAPA,OAAO;UAAEJ,GAAG,EAAEuN;SAAU,EAAEI,iBAAiB,CAACtT,sBAAsB,CAACM,QAAQ,EAAEyF,OAAO,CAAC,CAAC;QAC3J,IAAI,CAACQ,wBAAwB,EAAE;UAC3BuM,gBAAgB,CAAC/M,OAAO,CAAC;UACzB,OAAAiN,OAAA,CAAAC,OAAA,CAAO7M,KAAK;;;;IAIxB,IAAI,CAACiN,OAAO,KAAK,CAAC5V,iBAAiB,CAACyC,GAAG,CAAC,IAAI,CAACzC,iBAAiB,CAACwC,GAAG,CAAC,CAAC,EAAE;MAClE,IAAIyT,SAAS;MACb,IAAIM,SAAS;MACb,IAAMC,SAAS,GAAGF,kBAAkB,CAAC9T,GAAG,CAAC;MACzC,IAAMiU,SAAS,GAAGH,kBAAkB,CAAC7T,GAAG,CAAC;MACzC,IAAI,CAACoH,KAAK,CAACoL,UAAU,CAAC,EAAE;QACpB,IAAMyB,WAAW,GAAGxO,GAAG,CAACuK,aAAa,IAAIkE,UAAU,CAAC1B,UAAU,CAAC;QAC/D,IAAI,CAACjV,iBAAiB,CAACwW,SAAS,CAAC1W,KAAK,CAAC,EAAE;UACrCmW,SAAS,GAAGS,WAAW,GAAGF,SAAS,CAAC1W,KAAK;;QAE7C,IAAI,CAACE,iBAAiB,CAACyW,SAAS,CAAC3W,KAAK,CAAC,EAAE;UACrCyW,SAAS,GAAGG,WAAW,GAAGD,SAAS,CAAC3W,KAAK;;OAEhD,MACI;QACD,IAAM8W,SAAS,GAAG1O,GAAG,CAACwK,WAAW,IAAI,IAAI7S,IAAI,CAACoV,UAAU,CAAC;QACzD,IAAIP,QAAQ,CAAC8B,SAAS,CAAC1W,KAAK,CAAC,EAAE;UAC3BmW,SAAS,GAAGW,SAAS,GAAG,IAAI/W,IAAI,CAAC2W,SAAS,CAAC1W,KAAK,CAAC;;QAErD,IAAI4U,QAAQ,CAAC+B,SAAS,CAAC3W,KAAK,CAAC,EAAE;UAC3ByW,SAAS,GAAGK,SAAS,GAAG,IAAI/W,IAAI,CAAC4W,SAAS,CAAC3W,KAAK,CAAC;;;MAGzD,IAAImW,SAAS,IAAIM,SAAS,EAAE;QACxBP,gBAAgB,CAAC,CAAC,CAACC,SAAS,EAAEO,SAAS,CAAClO,OAAO,EAAEmO,SAAS,CAACnO,OAAO,EAAE/F,sBAAsB,CAACC,GAAG,EAAED,sBAAsB,CAACE,GAAG,CAAC;QAC3H,IAAI,CAACqG,wBAAwB,EAAE;UAC3BuM,gBAAgB,CAAC1M,KAAK,CAAClI,IAAI,CAAC,CAAC6H,OAAO,CAAC;UACrC,OAAAiN,OAAA,CAAAC,OAAA,CAAO7M,KAAK;;;;IAIxB,IAAI,CAACjG,SAAS,IAAIC,SAAS,KAAK,CAACiT,OAAO,IAAIlB,QAAQ,CAACO,UAAU,CAAC,EAAE;MAC9D,IAAM4B,eAAe,GAAGP,kBAAkB,CAAC5T,SAAS,CAAC;MACrD,IAAMoU,eAAe,GAAGR,kBAAkB,CAAC3T,SAAS,CAAC;MACrD,IAAMsT,UAAS,GAAG,CAACjW,iBAAiB,CAAC6W,eAAe,CAAC/W,KAAK,CAAC,IACvDmV,UAAU,CAAC5Q,MAAM,GAAGwS,eAAe,CAAC/W,KAAK;MAC7C,IAAMyW,UAAS,GAAG,CAACvW,iBAAiB,CAAC8W,eAAe,CAAChX,KAAK,CAAC,IACvDmV,UAAU,CAAC5Q,MAAM,GAAGyS,eAAe,CAAChX,KAAK;MAC7C,IAAImW,UAAS,IAAIM,UAAS,EAAE;QACxBP,gBAAgB,CAACC,UAAS,EAAEY,eAAe,CAACvO,OAAO,EAAEwO,eAAe,CAACxO,OAAO,CAAC;QAC7E,IAAI,CAACQ,wBAAwB,EAAE;UAC3BuM,gBAAgB,CAAC1M,KAAK,CAAClI,IAAI,CAAC,CAAC6H,OAAO,CAAC;UACrC,OAAAiN,OAAA,CAAAC,OAAA,CAAO7M,KAAK;;;;IAIxB,IAAI/F,OAAO,IAAI,CAACgT,OAAO,IAAIlB,QAAQ,CAACO,UAAU,CAAC,EAAE;MAC7C,IAAA8B,mBAAA,GAAyCT,kBAAkB,CAAC1T,OAAO,CAAC;QAArDoU,YAAY,GAAAD,mBAAA,CAAnBjX,KAAK;QAAgBwI,QAAO,GAAAyO,mBAAA,CAAPzO,OAAO;MACpC7B,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEsO,OAAO,CAAC,IAAIL,MAAM,CAACqC,YAAY,CAAC,CAAC,EAAE,CAAC/B,UAAU,CAACgC,KAAK,CAACD,YAAY,CAAC,EAAEA,YAAY,EAAE,cAAc,CAAC;MACxH,IAAIhC,OAAO,CAAC,IAAIL,MAAM,CAACqC,YAAY,CAAC,CAAC,IAAI,CAAC/B,UAAU,CAACgC,KAAK,CAACD,YAAY,CAAC,EAAE;QACtErO,KAAK,CAAClI,IAAI,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAAC;UAAEvD,IAAI,EAAE4C,sBAAsB,CAACK,OAAO;UAAE0F,OAAO,EAAPA,QAAO;UACvEJ,GAAG,EAAHA;SAAK,EAAE2N,iBAAiB,CAACtT,sBAAsB,CAACK,OAAO,EAAE0F,QAAO,CAAC,CAAC;QACtE,IAAI,CAACQ,wBAAwB,EAAE;UAC3BuM,gBAAgB,CAAC/M,QAAO,CAAC;UACzB,OAAAiN,OAAA,CAAAC,OAAA,CAAO7M,KAAK;;;;IAGvB,IAAAuO,MAAA;MAAA,IACGpU,QAAQ;QAAA;UAAA,IACJqU,UAAU,CAACrU,QAAQ,CAAC;YAAA,OAAAyS,OAAA,CAAAC,OAAA,CACC1S,QAAQ,CAACmS,UAAU,CAAC,EAAAmC,IAAA,WAAnC5V,MAAM;cACZ,IAAM6V,aAAa,GAAGzC,gBAAgB,CAACpT,MAAM,EAAEiU,QAAQ,CAAC;cAAC,IACrD4B,aAAa;gBACb1O,KAAK,CAAClI,IAAI,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmU,aAAa,CAAC,EAAExB,iBAAiB,CAACtT,sBAAsB,CAACO,QAAQ,EAAEuU,aAAa,CAAC/O,OAAO,CAAC,CAAC;gBAAC,IACrI,CAACQ,wBAAwB;kBACzBuM,gBAAgB,CAACgC,aAAa,CAAC/O,OAAO,CAAC;kBAAC8M,KAAA;kBAAA,OACjCzM,KAAK;;;;;YAAA,IAIftI,QAAQ,CAACyC,QAAQ,CAAC;cAAA,IAAAwU,MAAA,YAAAA;gBAAA,IAenB,CAAC/S,aAAa,CAACgT,iBAAgB,CAAC;kBAChC5O,KAAK,CAAClI,IAAI,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAAC;oBAAEgF,GAAG,EAAEuN;mBAAU,EAAE8B,iBAAgB,CAAC;kBAAC,IAC7D,CAACzO,wBAAwB;oBAAAsM,KAAA;oBAAA,OAClBzM,KAAK;;;;cAAA,IAAA6O,UAAA;cAjBpB,IAAID,iBAAgB,GAAG,EAAE;cAAC,IAAAE,KAAA,GAAAC,MAAA,CACR5U,QAAQ,YAAflB,GAAG,EAAc;gBACxB,IAAI,CAAC2C,aAAa,CAACgT,iBAAgB,CAAC,IAAI,CAACzO,wBAAwB,EAAE;kBAAA0O,UAAA;kBAAA;;gBAElE,OAAAjC,OAAA,CAAAC,OAAA,CAC4C1S,QAAQ,CAAClB,GAAG,CAAC,CAACqT,UAAU,CAAC,EAAAmC,IAAA,WAAAO,aAAA;kBAAtE,IAAMN,aAAa,GAAGzC,gBAAgB,CAAA+C,aAAA,EAAkClC,QAAQ,EAAE7T,GAAG,CAAC;kBAAC,IACnFyV,aAAa;oBACbE,iBAAgB,GAAGtU,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmU,aAAa,CAAC,EAAExB,iBAAiB,CAACjU,GAAG,EAAEyV,aAAa,CAAC/O,OAAO,CAAC,CAAC;oBACjH+M,gBAAgB,CAACgC,aAAa,CAAC/O,OAAO,CAAC;oBAAC,IACpCQ,wBAAwB;sBACxBH,KAAK,CAAClI,IAAI,CAAC,GAAG8W,iBAAgB;;;;eAGzC;gBAAA,OAAAC,UAAA;;cAAA,OAAAC,KAAA,IAAAA,KAAA,CAAAL,IAAA,GAAAK,KAAA,CAAAL,IAAA,CAAAE,MAAA,IAAAA,MAAA,CAAAG,KAAA;;;;;;IAAA,OAAAlC,OAAA,CAAAC,OAAA,CAAA0B,MAAA,IAAAA,MAAA,CAAAE,IAAA,GAAAF,MAAA,CAAAE,IAAA,CAAAlC,MAAA,IAAAA,MAAA,CAAAgC,MAAA;GAWZ,QAAAU,CAAA;IAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;AAAA;;ACpHD,IAAME,cAAc,GAAG;EACnBrH,IAAI,EAAExO,eAAe,CAACG,QAAQ;EAC9B2V,cAAc,EAAE9V,eAAe,CAACE,QAAQ;EACxC6V,gBAAgB,EAAE;AACtB,CAAC;AACD,IAAMC,iBAAiB,GAAG,OAAOrI,MAAM,KAAK,WAAW;AACvD,AAAO,SAASsI,mBAAmBA,CAAC1U,KAAK,EAAO;EAAA,IAAZA,KAAK;IAALA,KAAK,GAAG,EAAE;;EAC1C,IAAI2U,WAAW,GAAGlV,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4U,cAAc,CAAC,EAAEtU,KAAK,CAAC;EACzE,IAAI4U,cAAc;EAClB,IAAIlT,UAAU,GAAG;IACbG,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACfmP,WAAW,EAAE,KAAK;IAClB4D,WAAW,EAAE,CAAC;IACd9S,aAAa,EAAE,EAAE;IACjB+S,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzB9S,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAM7B,eAAe,GAAG;IACpBwB,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAI0B,OAAO,GAAG,EAAE;EAChB,IAAIT,WAAW,GAAG,EAAE;EACpB,IAAIC,cAAc,GAAGuR,WAAW,CAAChE,aAAa,IAAI,EAAE;EACpD,IAAIpM,WAAW,GAAG,KAAK;EACvB,IAAIyQ,UAAU,GAAG,KAAK;EACtB,IAAM5S,SAAS,GAAG;IACdgJ,KAAK,EAAE,IAAImD,OAAO,EAAE;IACpBlN,OAAO,EAAE,IAAIkN,OAAO,EAAE;IACtBjK,KAAK,EAAE,IAAIiK,OAAO,EAAE;IACpBlM,KAAK,EAAE,IAAIkM,OAAO;GACrB;EACD,IAAIlK,MAAM,GAAG;IACTP,KAAK,EAAE,IAAImR,GAAG,EAAE;IAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;IAClB3Q,KAAK,EAAE,IAAI2Q,GAAG,EAAE;IAChB7J,KAAK,EAAE,IAAI6J,GAAG,EAAE;IAChB9J,QAAQ,EAAE;GACb;EACD,IAAMgK,cAAc,GAAGC,kBAAkB,CAACT,WAAW,CAAC1H,IAAI,CAAC;EAC3D,IAAMoI,0BAA0B,GAAGV,WAAW,CAACxE,YAAY,KAAK1R,eAAe,CAACK,GAAG;EACnF,IAAMwW,cAAc,GAAG,SAAjBA,cAAcA,CAAIrY,IAAI;IAAA,OAAKoH,MAAM,CAAC8G,QAAQ,IAC5C9G,MAAM,CAAC+G,KAAK,CAACmK,GAAG,CAACtY,IAAI,CAAC,IACtBoH,MAAM,CAAC+G,KAAK,CAACmK,GAAG,CAAC,CAACtY,IAAI,CAACwW,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;EAClD,IAAM+B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIvY,IAAI,EAAEkI,KAAK,EAAK;IACtCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC;IACnC/C,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAER,UAAU,CAACQ;KACtB,CAAC;GACL;EACD,IAAMuT,uBAAuB,YAAvBA,uBAAuBA,GAAe;IAAA,OAAA1D,OAAA,CAAAC,OAAA,CAClB0D,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAA3C3R,OAAO;MAAA,IACTA,OAAO,KAAKP,UAAU,CAACO,OAAO;QAC9BP,UAAU,CAACO,OAAO,GAAGA,OAAO;QAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBN,OAAO,EAAPA;SACH,CAAC;;;GAET;EACD,IAAM0T,uBAAuB,YAAvBA,uBAAuBA,CAAUC,gBAAgB,EAAE3Y,IAAI,EAAEkI,KAAK,EAAEH,UAAU,EAAE6Q,mBAAmB,EAAEC,SAAS;IAAA,IAAK;MACjH,IAAMC,aAAa,GAAGpV,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;MAClD,IAAMgF,OAAO,GAAG,CAAC,EAAE5B,eAAe,CAAC4B,OAAO,KACrC0S,WAAW,CAACqB,QAAQ,GAAGH,mBAAmB,GAAGJ,uBAAuB,EAAE,CAAC,CAAC;MAC7E,IAAIzV,KAAK,CAACiW,UAAU,IAAI9Q,KAAK,EAAE;QAC3ByP,cAAc,GACVA,cAAc,IAAIsB,QAAQ,CAACV,gBAAgB,EAAExV,KAAK,CAACiW,UAAU,CAAC;QAClErB,cAAc,CAAC3X,IAAI,EAAEkI,KAAK,CAAC;OAC9B,MACI;QACDA,KAAK,GACCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC,GACnC8D,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;MAExC,IAAI,CAAC6Y,SAAS,KACT3Q,KAAK,GAAG,CAACoH,SAAS,CAACwJ,aAAa,EAAE5Q,KAAK,CAAC,GAAG4Q,aAAa,CAAC,IAC1D,CAAChV,aAAa,CAACiE,UAAU,CAAC,IAC1BtD,UAAU,CAACO,OAAO,KAAKA,OAAO,KAC9B,CAAC2T,gBAAgB,EAAE;QACnB,IAAMO,gBAAgB,GAAG1W,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsF,UAAU,CAAC,EAAG3E,eAAe,CAAC4B,OAAO,IAAI0S,WAAW,CAACqB,QAAQ,GAAG;UAAE/T,OAAO,EAAPA;SAAS,GAAG,EAAG,CAAC,EAAE;UAAEC,MAAM,EAAER,UAAU,CAACQ,MAAM;UAAEjF,IAAI,EAAJA;SAAM,CAAC;QAC/LyE,UAAU,GAAGjC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgC,UAAU,CAAC,EAAEyU,gBAAgB,CAAC;QAE3E/T,SAAS,CAACC,KAAK,CAACE,IAAI,CAACuT,SAAS,GAAG;UAAE7Y,IAAI,EAAJA;SAAM,GAAGkZ,gBAAgB,CAAC;;MAEjE/T,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MAAC,OAAA+P,OAAA,CAAAC,OAAA;KACN,QAAAoC,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMgC,aAAa,GAAG,SAAhBA,aAAaA,CAAInZ,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAOsP,YAAY,EAAK;IAAA,IAA/BtP,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAC5C,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAEhC,IAAI0G,KAAK,EAAE;MACP,IAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,IAAIA,EAAE,EAAE;QAEJ+B,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEgT,eAAe,CAAC3T,KAAK,EAAEuH,EAAE,CAAC,CAAC;QAClD,IAAMyS,UAAU,GAAGC,KAAK,IAAIC,aAAa,CAAC3S,EAAE,CAACa,GAAG,CAAC,IAAIlI,iBAAiB,CAACF,KAAK,CAAC,GACvE,EAAE,GACFA,KAAK;QACX,IAAIoT,WAAW,CAAC7L,EAAE,CAACa,GAAG,CAAC,IAAI,CAACwM,QAAQ,CAACoF,UAAU,CAAC,EAAE;UAC9CzS,EAAE,CAACa,GAAG,CAACiL,KAAK,GAAG2G,UAAU;SAC5B,MACI,IAAIzG,gBAAgB,CAAChM,EAAE,CAACa,GAAG,CAAC,EAAE;UAC/B,GAAArH,MAAA,CAAIwG,EAAE,CAACa,GAAG,CAACqC,OAAO,EAAE0P,OAAO,CAAC,UAACC,SAAS;YAAA,OAAMA,SAAS,CAACrH,QAAQ,GAAGiH,UAAU,CAAC7T,QAAQ,CAACiU,SAAS,CAACpa,KAAK,CAAC;WAAC,CAAC;SAC1G,MACI,IAAIuH,EAAE,CAACiD,IAAI,EAAE;UACd,IAAI/J,eAAe,CAAC8G,EAAE,CAACa,GAAG,CAAC,EAAE;YACzBb,EAAE,CAACiD,IAAI,CAACjG,MAAM,GAAG,CAAC,GACZgD,EAAE,CAACiD,IAAI,CAAC2P,OAAO,CAAC,UAACE,WAAW;cAAA,OAAMA,WAAW,CAAC3Z,OAAO,GAAGP,KAAK,CAACC,OAAO,CAAC4Z,UAAU,CAAC,GAC7E,CAAC,CAACA,UAAU,CAACtV,IAAI,CAAC,UAAC5E,IAAI;gBAAA,OAAKA,IAAI,KAAKua,WAAW,CAACra,KAAK;gBAAC,GACvDga,UAAU,KAAKK,WAAW,CAACra,KAAK;aAAC,CAAC,GACrCuH,EAAE,CAACiD,IAAI,CAAC,CAAC,CAAC,CAAC9J,OAAO,GAAG,CAAC,CAACsZ,UAAW;WAC5C,MACI;YACDzS,EAAE,CAACiD,IAAI,CAAC2P,OAAO,CAAC,UAACG,QAAQ;cAAA,OAAMA,QAAQ,CAAC5Z,OAAO,GAAG4Z,QAAQ,CAACta,KAAK,KAAKga,UAAU;aAAC,CAAC;;SAExF,MACI;UACDzS,EAAE,CAACa,GAAG,CAACpI,KAAK,GAAGga,UAAU;;QAE7B,IAAID,YAAY,EAAE;UACdjU,SAAS,CAACf,OAAO,CAACkB,IAAI,CAAC;YACnB0B,MAAM,EAAE4S,SAAS,EAAE;YACnB5Z,IAAI,EAAJA;WACH,CAAC;;QAEN,CAAC8J,OAAO,CAAC+P,WAAW,IAAI/P,OAAO,CAACgQ,WAAW,KACvCC,wBAAwB,CAAC/Z,IAAI,EAAEqZ,UAAU,EAAEvP,OAAO,CAACgQ,WAAW,CAAC;QACnEhQ,OAAO,CAACkQ,cAAc,IAAIC,OAAO,CAACja,IAAI,CAAC;;;GAGlD;EACD,IAAM+Z,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAI/Z,IAAI,EAAEwU,UAAU,EAAE0F,gBAAgB,EAAEd,YAAY,EAAY;IAAA,IAAxBA,YAAY;MAAZA,YAAY,GAAG,IAAI;;IACrF,IAAMhU,KAAK,GAAG;MACVpF,IAAI,EAAJA;KACH;IACD,IAAIma,SAAS,GAAG,KAAK;IACrB,IAAI/W,eAAe,CAACwB,OAAO,EAAE;MACzB,IAAMwV,eAAe,GAAG3V,UAAU,CAACG,OAAO;MAC1CH,UAAU,CAACG,OAAO,GAAGyV,WAAW,EAAE;MAClCjV,KAAK,CAACR,OAAO,GAAGH,UAAU,CAACG,OAAO;MAClCuV,SAAS,GAAGC,eAAe,KAAKhV,KAAK,CAACR,OAAO;;IAEjD,IAAIxB,eAAe,CAACyB,WAAW,IAAI,CAACqV,gBAAgB,EAAE;MAClD,IAAMI,oBAAoB,GAAG5W,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;MAC9D,IAAMua,mBAAmB,GAAG,CAACjL,SAAS,CAAC5L,GAAG,CAACyC,cAAc,EAAEnG,IAAI,CAAC,EAAEwU,UAAU,CAAC;MAC7E+F,mBAAmB,GACb5R,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,IAAI,CAAC,GACvCgM,KAAK,CAACvH,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;MACzCoF,KAAK,CAACP,WAAW,GAAGJ,UAAU,CAACI,WAAW;MAC1CsV,SAAS,GACLA,SAAS,IAAIG,oBAAoB,KAAK5W,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;;IAE/E,IAAMwa,sBAAsB,GAAG9W,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;IAClE,IAAIka,gBAAgB,IAAI,CAACM,sBAAsB,EAAE;MAC7C7R,GAAG,CAAClE,UAAU,CAACK,aAAa,EAAE9E,IAAI,EAAEka,gBAAgB,CAAC;MACrD9U,KAAK,CAACN,aAAa,GAAGL,UAAU,CAACK,aAAa;MAC9CqV,SAAS,GACLA,SAAS,IACJ/W,eAAe,CAAC0B,aAAa,IAC1B0V,sBAAsB,KAAKN,gBAAiB;;IAE5DC,SAAS,IAAIf,YAAY,IAAIjU,SAAS,CAACC,KAAK,CAACE,IAAI,CAACF,KAAK,CAAC;IACxD,OAAO+U,SAAS,GAAG/U,KAAK,GAAG,EAAE;GAChC;EACD,IAAMqV,eAAe,YAAfA,eAAeA,CAAUza,IAAI;IAAA,IAAK;MAAA,IAAA0a,sBAAA,GAC7BhD,WAAW,CAACqB,QAAQ;MAAA,OAAAjE,OAAA,CAAAC,OAAA,CAAA2F,sBAAA,GACfhD,WAAW,CAACqB,QAAQ,CAACvW,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyD,WAAW,CAAC,EAAEwR,WAAW,CAACiD,OAAO,EAAEC,kBAAkB,CAAC5a,IAAI,IAAIoH,MAAM,CAACP,KAAK,EAAEF,OAAO,EAAE+Q,WAAW,CAACxE,YAAY,EAAEwE,WAAW,CAACvE,yBAAyB,CAAC,CAAC,GACnM,EAAE;KACX,QAAAgE,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM0D,yBAAyB,YAAzBA,yBAAyBA,CAAU1a,KAAK,EAAK;IAAA,OAAA2U,OAAA,CAAAC,OAAA,CACtB0F,eAAe,EAAE,EAAA9D,IAAA,WAAAzS,IAAA;MAAA,IAAlCe,MAAM,GAAAf,IAAA,CAANe,MAAM;MACd,IAAI9E,KAAK,EAAE;QACP,SAAAsJ,SAAA,GAAAC,+BAAA,CAAmBvJ,KAAK,GAAAwJ,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;UAAA,IAAf5J,IAAI,GAAA2J,KAAA,CAAAtK,KAAA;UACX,IAAM6I,KAAK,GAAGxE,GAAG,CAACuB,MAAM,EAAEjF,IAAI,CAAC;UAC/BkI,KAAK,GACCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC,GACnC8D,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;OAE3C,MACI;QACDyE,UAAU,CAACQ,MAAM,GAAGA,MAAM;;MAE9B,OAAOA,MAAM;;GAChB;EACD,IAAMwT,YAAY,YAAZA,YAAYA,CAAU9R,OAAO,EAAEmU,gBAAgB,EAAEH,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG;QAC7DI,KAAK,EAAE;OACV;;IAAA,IAAK;MAAA,IAAAC,MAAA,YAAAA;QA+BF,OAAOL,OAAO,CAACI,KAAK;;MAAC,IAAAhE,UAAA;MAAA,IAAAkE,MAAA,GAAAhE,MAAA,CA7BFtQ,OAAO,YAAf3G,IAAI,EAAa;QACxB,IAAM0G,KAAK,GAAGC,OAAO,CAAC3G,IAAI,CAAC;QAAC,IAAAyU,MAAA;UAAA,IACxB/N,KAAK;YAAA,IAAA+P,MAAA,YAAAA;cAAA,SAAAO,MAAAkE,aAAA;gBAwBLA,aAAA;;cAA4D,OAA5Dxa,IAAG,GAAAoU,OAAA,CAAAC,OAAA,CAAW0D,YAAY,CAAC/X,IAAG,EAAEoa,gBAAgB,EAAEH,OAAO,CAAC,EAAAhE,IAAA,CAAAK,KAAA,IAAAA,KAAA,CAA1DtW,IAAG;;YAvBH,IAAMkG,EAAE,GAAGF,KAAK,CAACE,EAAE;YACnB,IAAMlG,IAAG,GAAGuC,IAAI,CAACyD,KAAK,EAAE,IAAI,CAAC;YAAC,IAAAmQ,MAAA;cAAA,IAE1BjQ,EAAE;gBAAA,OAAAkO,OAAA,CAAAC,OAAA,CAEuBoG,aAAa,CAACzU,KAAK,EAAEhD,GAAG,CAACwC,WAAW,EAAEU,EAAE,CAAC5G,IAAI,CAAC,EAAEoY,0BAA0B,EAAEV,WAAW,CAACvE,yBAAyB,CAAC,EAAAwD,IAAA,WAArIyE,UAAU;kBAEhBpV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmV,UAAU,EAAC,YAAY,CAAC;kBAAA,IAC3CN,gBAAgB;oBAAA,IACZM,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC;sBACnB2a,OAAO,CAACI,KAAK,GAAG,KAAK;sBAAChE,UAAA;;;oBAK1B,IAAIqE,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,EAAE;sBACrB2a,OAAO,CAACI,KAAK,GAAG,KAAK;;oBAEzBK,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,GACb2I,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAE2B,EAAE,CAAC5G,IAAI,EAAEob,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,CAAC,GACpDgM,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAE2B,EAAE,CAAC5G,IAAI,CAAC;;;;;YAAC,OAAA6W,MAAA,IAAAA,MAAA,CAAAF,IAAA,GAAAE,MAAA,CAAAF,IAAA,CAAAF,MAAA,IAAAA,MAAA,CAAAI,MAAA;;;QAAA,IAAApC,MAAA,IAAAA,MAAA,CAAAkC,IAAA,SAAAlC,MAAA,CAAAkC,IAAA;OAKvD;QAAA,OAAAI,UAAA;;MAAA,OAAAjC,OAAA,CAAAC,OAAA,CAAAkG,MAAA,IAAAA,MAAA,CAAAtE,IAAA,GAAAsE,MAAA,CAAAtE,IAAA,CAAAqE,MAAA,IAAAA,MAAA,CAAAC,MAAA;KAEJ,QAAA9D,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMkE,YAAY,YAAZA,YAAYA,CAAAhJ,KAAA;IAAA,IAAYnT,IAAI,GAAAmT,KAAA,CAAJnT,IAAI;MAAEW,MAAM,GAAAwS,KAAA,CAANxS,MAAM;MAAAyb,YAAA,GAAAjJ,KAAA,CAAExS,MAAM;MAAIR,KAAK,GAAAic,YAAA,CAALjc,KAAK;MAAEW,IAAI,GAAAsb,YAAA,CAAJtb,IAAI;MAAQub,SAAS,GAAAD,YAAA,CAAfpc,IAAI;IAAA,IAAqB;MACxF,IAAIgJ,KAAK;MACT,IAAIlD,OAAO;MACX,IAAM0B,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;MAAC,OAAA8U,OAAA,CAAAC,OAAA;QAAA,IAE7BrO,KAAK;UAAA,IAAA8U,MAAA,YAAAA;YA6CL,CAACzH,YAAW,IACR5O,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;cACjBtF,IAAI,EAAJA,IAAI;cACJd,IAAI,EAAJA,IAAI;cACJ8H,MAAM,EAAE4S,SAAS;aACpB,CAAC;YACNlB,uBAAuB,CAAC,KAAK,EAAE1Y,IAAI,EAAEkI,KAAK,EAAEH,WAAU,EAAE/C,OAAO,EAAE6T,UAAS,CAAC;;UAlD3E,IAAIrE,UAAU,GAAG+G,SAAS,GAAG/I,aAAa,CAAC9L,KAAK,CAAC,GAAG/F,SAAS;UAC7D6T,UAAU,GAAGpT,WAAW,CAACoT,UAAU,CAAC,GAAGnV,KAAK,GAAGmV,UAAU;UAEzD,IAAMT,YAAW,GAAG7U,IAAI,KAAKmC,MAAM,CAACC,IAAI;UACxC,IAAAma,mBAAA,GAA2EtD,kBAAkB,CAACT,WAAW,CAACJ,cAAc,CAAC;YAAvGzD,kBAAkB,GAAA4H,mBAAA,CAA5BvL,QAAQ;YAAkC4D,oBAAoB,GAAA2H,mBAAA,CAAhCtL,UAAU;UAChD,IAAMuL,oBAAoB,GAAI,CAACC,aAAa,CAACjV,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACE,EAAE,CAACC,KAAK,CAAC,IAClE,CAAC6Q,WAAW,CAACqB,QAAQ,IACrB,CAACrV,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,IAC7B4b,cAAc,CAACpZ,MAAM,CAACC,MAAM,CAAC;YAAEsR,WAAW,EAAXA,YAAW;YAAE9L,SAAS,EAAE,CAAC,CAACvE,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;YAAEgU,WAAW,EAAEvP,UAAU,CAACuP,WAAW;YAAEH,kBAAkB,EAAlBA,kBAAkB;YACjJC,oBAAoB,EAApBA;WAAsB,EAAEoE,cAAc,CAAC,CAAC;UAChD,IAAMW,UAAS,GAAG,CAAC9E,YAAW,IAAIsE,cAAc,CAACrY,IAAI,CAAC;UACtD,IAAI,CAACoB,WAAW,CAACoT,UAAU,CAAC,EAAE;YAC1B7L,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEwU,UAAU,CAAC;;UAEtC,IAAMzM,WAAU,GAAGgS,wBAAwB,CAAC/Z,IAAI,EAAEwU,UAAU,EAAET,YAAW,EAAE,KAAK,CAAC;UACjF,IAAMqF,YAAY,GAAG,CAACtV,aAAa,CAACiE,WAAU,CAAC,IAAI8Q,UAAS;UAC5D,IAAI6C,oBAAoB,EAAE;YACtB,CAAC3H,YAAW,IACR5O,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;cACjBtF,IAAI,EAAJA,IAAI;cACJd,IAAI,EAAJA;aACH,CAAC;YACN,OAAQka,YAAY,IAChBjU,SAAS,CAACC,KAAK,CAACE,IAAI,CAACuT,UAAS,GAAG;cAAE7Y,IAAI,EAAJA;aAAM,GAAGwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsF,WAAU,CAAC,EAAE;cAAE/H,IAAI,EAAJA;aAAM,CAAC,CAAC;;UAE3GmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjBP,YAAY,EAAE;WACjB,CAAC;UAAC,IAAA8W,MAAA;YAAA,IACCnE,WAAW,CAACqB,QAAQ;cAAA,OAAAjE,OAAA,CAAAC,OAAA,CACK0F,eAAe,CAAC,CAACza,IAAI,CAAC,CAAC,EAAA2W,IAAA,WAAAmF,KAAA;gBAAA,IAAxC7W,MAAM,GAAA6W,KAAA,CAAN7W,MAAM;gBACdiD,KAAK,GAAGxE,GAAG,CAACuB,MAAM,EAAEjF,IAAI,CAAC;gBACzB,IAAIF,eAAe,CAACD,MAAM,CAAC,IAAI,CAACqI,KAAK,EAAE;kBACnC,IAAM6T,cAAc,GAAGxb,iBAAiB,CAACP,IAAI,CAAC;kBAC9C,IAAMgc,QAAQ,GAAGtY,GAAG,CAACuB,MAAM,EAAE8W,cAAc,EAAE,EAAE,CAAC;kBAChDC,QAAQ,CAAC9c,IAAI,IAAI8c,QAAQ,CAACnU,OAAO,KAAKK,KAAK,GAAG8T,QAAQ,CAAC;kBACvD,IAAIA,QAAQ,IAAItY,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE8W,cAAc,CAAC,EAAE;oBACpD/b,IAAI,GAAG+b,cAAc;;;gBAG7B/W,OAAO,GAAGlB,aAAa,CAACmB,MAAM,CAAC;;;cAAC,OAAA6P,OAAA,CAAAC,OAAA,CAGjBoG,aAAa,CAACzU,KAAK,EAAEhD,GAAG,CAACwC,WAAW,EAAElG,IAAI,CAAC,EAAEoY,0BAA0B,EAAEV,WAAW,CAACvE,yBAAyB,CAAC,EAAAwD,IAAA,WAAAsF,cAAA;gBAA9H/T,KAAK,GAAG+T,cAAA,CAAwHjc,IAAI,CAAC;;;;UAAC,OAAA6b,MAAA,IAAAA,MAAA,CAAAlF,IAAA,GAAAkF,MAAA,CAAAlF,IAAA,CAAA6E,MAAA,IAAAA,MAAA,CAAAK,MAAA;;;KAUjJ,QAAA1E,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM+E,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIlc,IAAI,EAAEyH,GAAG,EAAE0U,iBAAiB,EAAK;IAChE,IAAMzV,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAEhC,IAAI0G,KAAK,EAAE;MACP,IAAM2S,UAAU,GAAG3V,GAAG,CAACwC,WAAW,EAAElG,IAAI,CAAC;MACzC,IAAMoc,gBAAgB,GAAGhb,WAAW,CAACiY,UAAU,CAAC;MAChD,IAAMvY,YAAY,GAAGsb,gBAAgB,GAC/B1Y,GAAG,CAACyC,cAAc,EAAEnG,IAAI,CAAC,GACzBqZ,UAAU;MAChB,IAAIjY,WAAW,CAACN,YAAY,CAAC,IACxB2G,GAAG,IAAIA,GAAG,CAAC4U,cAAe,IAC3BF,iBAAiB,EAAE;QACnB1U,GAAG,IAAIA,GAAG,CAACnD,OAAO,IAClBqE,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEmc,iBAAiB,GAAGrb,YAAY,GAAG0R,aAAa,CAAC9L,KAAK,CAAC,CAAC;OAClF,MACI;QACDyS,aAAa,CAACnZ,IAAI,EAAEc,YAAY,CAAC;;;IAGzCiX,UAAU,IAAI3U,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;GAC1D;EACD,IAAM8L,WAAW,GAAG,SAAdA,WAAWA,CAAIra,IAAI,EAAEb,IAAI,EAAK;IAChCa,IAAI,IAAIb,IAAI,IAAIwJ,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEb,IAAI,CAAC;IAC5C,OAAO,CAACmQ,SAAS,CAAC9M,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmX,SAAS,EAAE,CAAC,EAAEzT,cAAc,CAAC;GACpE;EACD,IAAMoI,YAAY,YAAZA,YAAYA;IAAA,IAAe;MAAA,IAAA+N,sBAAA,GACb5E,WAAW,CAACqB,QAAQ;MAAA,OAAAjE,OAAA,CAAAC,OAAA,CAAAuH,sBAAA,GACT7B,eAAe,EAAE,GAChChC,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAAA4F,gBAAA;QAFvC,IAAMvX,OAAO,GAAAuX,gBAE0B;QAAC,IACpCvX,OAAO,KAAKP,UAAU,CAACO,OAAO;UAC9BP,UAAU,CAACO,OAAO,GAAGA,OAAO;UAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjBN,OAAO,EAAPA;WACH,CAAC;;;KAET,QAAAmS,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMqF,SAAS,GAAG,SAAZA,SAASA,CAAIxc,IAAI,EAAEX,KAAK,EAAEyK,OAAO;IAAA,OAAKtH,MAAM,CAACia,OAAO,CAACpd,KAAK,CAAC,CAACma,OAAO,CAAC,UAAAkD,KAAA,EAA4B;MAAA,IAA1BC,QAAQ,GAAAD,KAAA;QAAErD,UAAU,GAAAqD,KAAA;MAC5F,IAAME,SAAS,GAAM5c,IAAI,SAAI2c,QAAU;MACvC,IAAMjW,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;MACrC,IAAMC,YAAY,GAAGzV,MAAM,CAACC,KAAK,CAACiR,GAAG,CAACtY,IAAI,CAAC;MAC3C,CAAC6c,YAAY,IAAI,CAACpN,WAAW,CAAC4J,UAAU,CAAC,IAAK3S,KAAK,IAAI,CAACA,KAAK,CAACE,EAAG,KAC7D,CAAClH,YAAY,CAAC2Z,UAAU,CAAC,GACvBmD,SAAS,CAACI,SAAS,EAAEvD,UAAU,EAAEvP,OAAO,CAAC,GACzCqP,aAAa,CAACyD,SAAS,EAAEvD,UAAU,EAAEvP,OAAO,EAAE,IAAI,CAAC;KAC5D,CAAC;;EACF,IAAMgT,SAAS,GAAG,SAAZA,SAASA,CAAIC,UAAU,EAAEjc,YAAY,EAAEkc,QAAQ,EAAK;IACtD,IAAMxQ,WAAW,GAAGhK,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGsV,UAAU,GAC3CvV,MAAM,CAACC,MAAM,CAAC,EAAE,EAAED,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0D,cAAc,CAAC,EAAED,WAAW,CAAC,CAAC,GAAG9E,WAAW,CAACN,YAAY,CAAC,GAC5GqF,cAAc,GACdrF,YAAa,CAAC;IACpB,IAAI,CAACic,UAAU,EAAE;MACbC,QAAQ,KAAK5V,MAAM,CAAC8G,QAAQ,GAAG,IAAI,CAAC;MACpC,OAAO1B,WAAW;;IAEtB,IAAMyQ,aAAa,GAAG,EAAE;IACxB,IAAMlc,MAAM,GAAG,IAAImc,GAAG,EAAE;IACxB,SAAAzL,UAAA,GAAA/H,+BAAA,CAAwBnE,qBAAqB,CAACwX,UAAU,CAAC,GAAArL,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAA7H,IAAA,GAAE;MAAA,IAAhDgT,SAAS,GAAAlL,MAAA,CAAArS,KAAA;MAChB2d,QAAQ,IAAI5V,MAAM,CAAC+G,KAAK,CAACpB,GAAG,CAAC6P,SAAS,CAAC;MACvCK,aAAa,CAACnM,IAAI,CAACpN,GAAG,CAAC8I,WAAW,EAAEoQ,SAAS,CAAC,CAAC;MAC/C7b,MAAM,CAAC4H,GAAG,CAACiU,SAAS,EAAElZ,GAAG,CAAC8I,WAAW,EAAEoQ,SAAS,CAAC,CAAC;;IAEtD,OAAOpd,KAAK,CAACC,OAAO,CAACsd,UAAU,CAAC,GAC1B,CAACE,aAAa,EAAClc,MAAM,CAAC,GACtBnB,QAAQ,CAACmB,MAAM,CAAC,CAAC,CAAC,CAAC,GACfyB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE1B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGvB,KAAK,CAACC,OAAO,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAAX,MAAA,CACnDW,MAAM,CAAC,CAAC,CAAC,IACbA,MAAM,CAAC,CAAC,CAAC;GACtB;EACD,IAAMoc,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIzJ,aAAa,EAAE1T,IAAI,EAAU;IAAA,IAAdA,IAAI;MAAJA,IAAI,GAAG,EAAE;;IAC/CgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyN,aAAa,EAAC,mBAAmB,CAAC;IACzD,KAAK,IAAMvS,GAAG,IAAIuS,aAAa,EAAE;MAC7B,IAAMrU,KAAK,GAAGqU,aAAa,CAACvS,GAAG,CAAC;MAChC,IAAMyb,SAAS,GAAG5c,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGmB,GAAG;MAChD,IAAMuF,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;MACrC,IAAI,CAAClW,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,EAAE;QACrB,IAAIhH,QAAQ,CAACP,KAAK,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;UACzC8d,iBAAiB,CAAC9d,KAAK,EAAEud,SAAS,CAAC;SACtC,MACI,IAAI,CAAClW,KAAK,EAAE;UACbiC,GAAG,CAACzC,WAAW,EAAE0W,SAAS,EAAEvd,KAAK,CAAC;;;;GAIjD;EACD,IAAM8N,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIzC,OAAO,EAAE1K,IAAI,EAAEod,MAAM,EAAEpO,IAAI,EAAE/B,uBAAuB,EAAOoQ,SAAS,EAASC,eAAe,EAAY;IAAA,IAA3ErQ,uBAAuB;MAAvBA,uBAAuB,GAAG,EAAE;;IAAA,IAAEoQ,SAAS;MAATA,SAAS,GAAG,IAAI;;IAAA,IAAEC,eAAe;MAAfA,eAAe,GAAG,IAAI;;IAC9HhW,WAAW,GAAG,IAAI;IAClB,IAAIgW,eAAe,IAAI5Z,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,EAAE;MACvC,IAAMud,MAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MAC/D0P,SAAS,IAAI1U,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAEud,MAAM,CAAC;;IAE3C5U,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEiN,uBAAuB,CAAC;IAC/C,IAAIzN,KAAK,CAACC,OAAO,CAACiE,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,CAAC,EAAE;MAC7C,IAAMud,OAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MACzE0P,SAAS,IAAI1U,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEud,OAAM,CAAC;MACjDC,eAAe,CAAC/Y,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;IAE5C,IAAIoD,eAAe,CAAC0B,aAAa,IAAIpB,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC,EAAE;MACtE,IAAMud,QAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MAChF0P,SAAS,IAAI1U,GAAG,CAAClE,UAAU,CAACK,aAAa,EAAE9E,IAAI,EAAEud,QAAM,CAAC;MACxDC,eAAe,CAAC/Y,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;;IAEnD,IAAIoD,eAAe,CAACyB,WAAW,IAAIzB,eAAe,CAACwB,OAAO,EAAE;MACxD+D,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACnP,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,EAAEhH,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC5KiN,uBAAuB,IACnBtE,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACnP,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,EAAEhH,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAChLwd,eAAe,CAAC/Y,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;;IAEjDmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBV,OAAO,EAAEyV,WAAW,CAACra,IAAI,EAAEsO,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;MACrE7F,WAAW,EAAEJ,UAAU,CAACI,WAAW;MACnCI,MAAM,EAAER,UAAU,CAACQ,MAAM;MACzBD,OAAO,EAAEP,UAAU,CAACO;KACvB,CAAC;GACL;EACD,IAAM6H,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI7M,IAAI;IAAA,OAAK0D,GAAG,CAACqU,UAAU,GAAG7R,WAAW,GAAGC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC;;EAC9F,IAAM0d,QAAQ,GAAG,SAAXA,QAAQA,CAAI1d,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IACvC,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAChC,IAAM6c,YAAY,GAAGzV,MAAM,CAACC,KAAK,CAACiR,GAAG,CAACtY,IAAI,CAAC;IAC3C2I,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEX,KAAK,CAAC;IAC7B,IAAIwd,YAAY,EAAE;MACd1X,SAAS,CAACkC,KAAK,CAAC/B,IAAI,CAAC;QACjB0B,MAAM,EAAE3H,KAAK;QACbW,IAAI,EAAJA,IAAI;QACJ0O,OAAO,EAAE;OACZ,CAAC;MACF,IAAI,CAACtL,eAAe,CAACwB,OAAO,IAAIxB,eAAe,CAACyB,WAAW,KACvDiF,OAAO,CAAC+P,WAAW,EAAE;QACrBlR,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACpe,KAAK,EAAEqE,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxImF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBtF,IAAI,EAAJA,IAAI;UACJ6E,WAAW,EAAEJ,UAAU,CAACI,WAAW;UACnCD,OAAO,EAAEyV,WAAW,CAACra,IAAI,EAAEX,KAAK;SACnC,CAAC;;KAET,MACI;MACDqH,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,IAAI,CAACrH,iBAAiB,CAACF,KAAK,CAAC,GACzCmd,SAAS,CAACxc,IAAI,EAAEX,KAAK,EAAEyK,OAAO,CAAC,GAC/BqP,aAAa,CAACnZ,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAE,IAAI,CAAC;;IAEnDuO,cAAc,CAACrY,IAAI,CAAC,IAAImF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IAChDH,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;MACjBtF,IAAI,EAAJA;KACH,CAAC;GACL;EACD,IAAMia,OAAO,YAAPA,OAAOA,CAAUja,IAAI,EAAE8J,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAAA,IAAK;MAAA,IAAA6T,OAAA,YAAAA;QAwB1CxY,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC9C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGwR,QAAQ,CAACjU,IAAI,CAAC,GAAG;UAAEA,IAAI,EAAJA;SAAM,GAAG,EAAG,CAAC,EAAE;UAAEiF,MAAM,EAAER,UAAU,CAACQ,MAAM;UAAEF,YAAY,EAAE;SAAO,CAAC,CAAC;QAC5I,IAAI+E,OAAO,CAACC,WAAW,IAAI,CAAC/E,OAAO,EAAE;UACjCqE,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;YAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;aAAEnB,IAAI,GAAG+c,UAAU,GAAG3V,MAAM,CAACP,KAAK,CAAC;;QAEjGzD,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;QACzC,OAAOvJ,OAAO;;MA5Bd,IAAM+X,UAAU,GAAGxX,qBAAqB,CAACvF,IAAI,CAAC;MAC9C,IAAIgF,OAAO;MACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MAAC,IAAA6Y,OAAA;QAAA,IACClG,WAAW,CAACqB,QAAQ;UAAA,OAAAjE,OAAA,CAAAC,OAAA,CACO8F,yBAAyB,CAACzZ,WAAW,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG+c,UAAU,CAAC,EAAApG,IAAA,WAArFkH,YAAY;YAClB7Y,OAAO,GAAGhF,IAAI,GACR+c,UAAU,CAAC1I,KAAK,CAAC,UAACrU,IAAI;cAAA,OAAK,CAAC0D,GAAG,CAACma,YAAY,EAAE7d,IAAI,CAAC;cAAC,GACpD8D,aAAa,CAAC+Z,YAAY,CAAC;;;UAAC,IAAAC,MAAA;YAAA,IAG9B9d,IAAI;cAAA,OAAA8U,OAAA,CAAAC,OAAA,CACaD,OAAO,CAACjT,GAAG,CAACkb,UAAU,CAACpS,GAAG,WAAQiS,SAAS;gBAAA,IAAK;kBAAA,IAAAmB,KAAA;kBAC7D,IAAMrX,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;kBAAC,OAAA9H,OAAA,CAAAC,OAAA,CACzB0D,YAAY,CAAC/R,KAAK,CAACE,EAAE,IAAAmX,KAAA,OAAAA,KAAA,CAAMnB,SAAS,IAAGlW,KAAK,EAAAqX,KAAA,IAAKrX,KAAK,CAAC;iBACvE,QAAAyQ,CAAA;kBAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;gBAAC,CAAC,EAAAR,IAAA,WAAAqH,YAAA;gBAHHhZ,OAAO,GAAGgZ,YAAA,CAGL3J,KAAK,CAAC5T,OAAO,CAAC;;;cAAC,OAAAqU,OAAA,CAAAC,OAAA,CAGd0D,YAAY,CAAC9R,OAAO,CAAC,EAAAgQ,IAAA;gBAC3B3R,OAAO,GAAGlB,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC;;;;UAAC,IAAA6Y,MAAA,IAAAA,MAAA,CAAAnH,IAAA,SAAAmH,MAAA,CAAAnH,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAA6I,OAAA,IAAAA,OAAA,CAAAjH,IAAA,GAAAiH,OAAA,CAAAjH,IAAA,CAAAgH,OAAA,IAAAA,OAAA,CAAAC,OAAA;KAStD,QAAAzG,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM8G,iBAAiB,YAAjBA,iBAAiBA,CAAUje,IAAI,EAAE8J,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAAA,IAAK;MAAA,IAAAoU,OAAA,YAAAA;QA0BpD,IAAIpU,OAAO,CAACC,WAAW,IAAI,CAAC/E,OAAO,EAAE;UACjCqE,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;YAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;aAAEnB,IAAI,GAAG+c,UAAU,GAAG3V,MAAM,CAACP,KAAK,CAAC;;QAEjGzD,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;QACzCvI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAExB,UAAU,CAACQ,MAAM,EAAE,KAAK,CAAC;QAC3D,OAAOD,OAAO;;MA9Bd,IAAM+X,UAAU,GAAGxX,qBAAqB,CAACvF,IAAI,CAAC;MAC9C,IAAIgF,OAAO;MAIXgB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAExB,UAAU,CAACQ,MAAM,CAAC;MAAC,IAAAkZ,OAAA;QAAA,IACjDzG,WAAW,CAACqB,QAAQ;UAAA,OAAAjE,OAAA,CAAAC,OAAA,CACO8F,yBAAyB,CAACzZ,WAAW,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG+c,UAAU,CAAC,EAAApG,IAAA,WAArFkH,YAAY;YAClB7Y,OAAO,GAAGhF,IAAI,GACR+c,UAAU,CAAC1I,KAAK,CAAC,UAACrU,IAAI;cAAA,OAAK,CAAC0D,GAAG,CAACma,YAAY,EAAE7d,IAAI,CAAC;cAAC,GACpD8D,aAAa,CAAC+Z,YAAY,CAAC;;;UAAC,IAAAO,OAAA;YAAA,IAG9Bpe,IAAI;cAAA,OAAA8U,OAAA,CAAAC,OAAA,CACaD,OAAO,CAACjT,GAAG,CAACkb,UAAU,CAACpS,GAAG,WAAQiS,SAAS;gBAAA,IAAK;kBAAA,IAAAyB,KAAA;kBAC7D,IAAM3X,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;kBAAC,OAAA9H,OAAA,CAAAC,OAAA,CACzB0D,YAAY,CAAC/R,KAAK,CAACE,EAAE,IAAAyX,KAAA,OAAAA,KAAA,CAAMzB,SAAS,IAAGlW,KAAK,EAAA2X,KAAA,IAAK3X,KAAK,CAAC;iBACvE,QAAAyQ,CAAA;kBAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;gBAAC,CAAC,EAAAR,IAAA,WAAA2H,aAAA;gBAHHtZ,OAAO,GAAGsZ,aAAA,CAGLjK,KAAK,CAAC5T,OAAO,CAAC;;;cAAC,OAAAqU,OAAA,CAAAC,OAAA,CAGJ0D,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAAA4H,cAAA;gBAA3CvZ,OAAO,GAAAuZ,cAAoC;;;;UAAC,IAAAH,OAAA,IAAAA,OAAA,CAAAzH,IAAA,SAAAyH,OAAA,CAAAzH,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAoJ,OAAA,IAAAA,OAAA,CAAAxH,IAAA,GAAAwH,OAAA,CAAAxH,IAAA,CAAAuH,OAAA,IAAAA,OAAA,CAAAC,OAAA;KAWvD,QAAAhH,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMyC,SAAS,GAAG,SAAZA,SAASA,CAAImD,UAAU,EAAK;IAC9B/W,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,WAAW,EAAES,OAAO,EAAE,cAAc,CAAC;IAC5D,IAAMK,MAAM,GAAGxE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0D,cAAc,CAAC,EAAED,WAAW,CAAC;IAC5E,OAAO9E,WAAW,CAAC2b,UAAU,CAAC,GACxB/V,MAAM,GACNiN,QAAQ,CAAC8I,UAAU,CAAC,GAChBrZ,GAAG,CAACsD,MAAM,EAAE+V,UAAU,CAAC,GACvBA,UAAU,CAACpS,GAAG,CAAC,UAAC3K,IAAI;MAAA,OAAK0D,GAAG,CAACsD,MAAM,EAAEhH,IAAI,CAAC;MAAC;GACxD;EACD,IAAMwe,WAAW,GAAG,SAAdA,WAAWA,CAAIxe,IAAI,EAAK;IAC1BA,IAAI,GACEuF,qBAAqB,CAACvF,IAAI,CAAC,CAACwZ,OAAO,CAAC,UAACiF,SAAS;MAAA,OAAKzS,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEwZ,SAAS,CAAC;MAAC,GACtFha,UAAU,CAACQ,MAAM,GAAG,EAAG;IAC9BE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAER,UAAU,CAACQ;KACtB,CAAC;GACL;EACD,IAAMyZ,QAAQ,GAAG,SAAXA,QAAQA,CAAI1e,IAAI,EAAEkI,KAAK,EAAE4B,OAAO,EAAK;IACvC,IAAMrC,GAAG,GAAG,CAAC/D,GAAG,CAACiD,OAAO,EAAE3G,IAAI,EAAE;MAAE4G,EAAE,EAAE;KAAI,CAAC,CAACA,EAAE,IAAI,EAAE,EAAEa,GAAG;IACzDkB,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyF,KAAK,CAAC,EAAE;MAAET,GAAG,EAAHA;KAAK,CAAC,CAAC;IAC9EtC,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBtF,IAAI,EAAJA,IAAI;MACJiF,MAAM,EAAER,UAAU,CAACQ,MAAM;MACzBD,OAAO,EAAE;KACZ,CAAC;IACF8E,OAAO,IAAIA,OAAO,CAACC,WAAW,IAAItC,GAAG,IAAIA,GAAG,CAACE,KAAK,IAAIF,GAAG,CAACE,KAAK,EAAE;GACpE;EACD,IAAMwG,KAAK,GAAG,SAARA,KAAKA,CAAIyO,SAAS,EAAE9b,YAAY;IAAA,OAAK4V,UAAU,CAACkG,SAAS,CAAC,GAC1DzX,SAAS,CAACgJ,KAAK,CAAC9I,SAAS,CAAC;MACxBC,IAAI,EAAE,SAAAA,KAACqZ,IAAI;QAAA,OAAK/B,SAAS,CAACE,SAAS,CAACnc,SAAS,EAAEG,YAAY,CAAC,EAAE6d,IAAI,CAAC;;KACtE,CAAC,GACA7B,SAAS,CAACF,SAAS,EAAE9b,YAAY,EAAE,IAAI,CAAC;;EAC9C,IAAMyG,UAAU,GAAG,SAAbA,UAAUA,CAAIvH,IAAI,EAAE8J,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAClC,SAAA8U,UAAA,GAAAlV,+BAAA,CAAwB1J,IAAI,GAAGuF,qBAAqB,CAACvF,IAAI,CAAC,GAAGoH,MAAM,CAACP,KAAK,GAAAgY,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAhV,IAAA,GAAE;MAAA,IAAhE6U,SAAS,GAAAI,MAAA,CAAAxf,KAAA;MAChB+H,MAAM,CAACP,KAAK,UAAO,CAAC4X,SAAS,CAAC;MAC9BrX,MAAM,CAACC,KAAK,UAAO,CAACoX,SAAS,CAAC;MAC9B,IAAI/a,GAAG,CAACiD,OAAO,EAAE8X,SAAS,CAAC,EAAE;QACzB,IAAI,CAAC3U,OAAO,CAACgV,SAAS,EAAE;UACpB9S,KAAK,CAACrF,OAAO,EAAE8X,SAAS,CAAC;UACzBzS,KAAK,CAAC9F,WAAW,EAAEuY,SAAS,CAAC;;QAEjC,CAAC3U,OAAO,CAACiV,SAAS,IAAI/S,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEwZ,SAAS,CAAC;QACzD,CAAC3U,OAAO,CAACkV,SAAS,IAAIhT,KAAK,CAACvH,UAAU,CAACI,WAAW,EAAE4Z,SAAS,CAAC;QAC9D,CAAC3U,OAAO,CAACmV,WAAW,IAAIjT,KAAK,CAACvH,UAAU,CAACK,aAAa,EAAE2Z,SAAS,CAAC;QAClE,CAAC/G,WAAW,CAAC5R,gBAAgB,IACzB,CAACgE,OAAO,CAACoV,gBAAgB,IACzBlT,KAAK,CAAC7F,cAAc,EAAEsY,SAAS,CAAC;;;IAG5CtZ,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC,EAAE,CAAC;IACxBH,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC9C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgC,UAAU,CAAC,EAAG,CAACqF,OAAO,CAACkV,SAAS,GAAG,EAAE,GAAG;MAAEpa,OAAO,EAAEyV,WAAW;KAAK,CAAC,CAAC;IAC1H,CAACvQ,OAAO,CAACqV,WAAW,IAAI5Q,YAAY,EAAE;GACzC;EACD,IAAM6Q,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIpf,IAAI,EAAEqf,QAAQ,EAAEvV,OAAO,EAAK;IAClDxD,QAAQ,CAACtG,IAAI,EAAE8J,OAAO,CAAC;IACvB,IAAIpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAC9B,IAAMyH,GAAG,GAAGrG,WAAW,CAACie,QAAQ,CAAChgB,KAAK,CAAC,GACjCggB,QAAQ,CAACC,gBAAgB,GACrBD,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IACnDD,QAAQ,GACVA,QAAQ,GACZA,QAAQ;IACd,IAAMnK,iBAAiB,GAAGqK,yBAAyB,CAAC9X,GAAG,CAAC;IACxD,IAAIA,GAAG,KAAKf,KAAK,CAACE,EAAE,CAACa,GAAG,IACnByN,iBAAiB,IACdlU,OAAO,CAAC0F,KAAK,CAACE,EAAE,CAACiD,IAAI,IAAI,EAAE,CAAC,CAAC9F,IAAI,CAAC,UAAC+N,MAAM;MAAA,OAAKA,MAAM,KAAKrK,GAAG;MAAE,EAAE;MACpE;;IAEJf,KAAK,GAAG;MACJE,EAAE,EAAEsO,iBAAiB,GACf1S,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiE,KAAK,CAACE,EAAE,CAAC,EAAE;QAAEiD,IAAI,KAAAzJ,MAAA,CACxCY,OAAO,CAAC0F,KAAK,CAACE,EAAE,CAACiD,IAAI,IAAI,EAAE,CAAC,CAACrJ,MAAM,CAAC,UAACiH,GAAG;UAAA,OAAK8R,aAAa,CAAC9R,GAAG,CAAC,IAAI+I,QAAQ,CAACgP,QAAQ,CAAC/X,GAAG,CAAC;UAAC,GAC7FA,GAAG,EACN;QAAEA,GAAG,EAAE;UAAEvI,IAAI,EAAEuI,GAAG,CAACvI,IAAI;UAAEc,IAAI,EAAJA;;OAAQ,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiE,KAAK,CAACE,EAAE,CAAC,EAAE;QAAEa,GAAG,EAAHA;OAAK;KACnG;IACDkB,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAE0G,KAAK,CAAC;IACzBwV,yBAAyB,CAAClc,IAAI,EAAEyH,GAAG,CAAC;GACvC;EACD,IAAMnB,QAAQ,GAAG,SAAXA,QAAQA,CAAItG,IAAI,EAAE8J,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAChC,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAEhC2I,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAE;MACf4G,EAAE,EAAEpE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGiE,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;QAAEa,GAAG,EAAE;UAAEzH,IAAI,EAAJA;;OAAS,CAAC,EAAE;QAAEA,IAAI,EAAJA,IAAI;QAAE6G,KAAK,EAAE;OAAM,CAAC,EAAEiD,OAAO;KACzI,CAAC;IACF9D,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGiE,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;MAAEa,GAAG,EAAE;QAAEzH,IAAI,EAAJA;;KAAS,CAAC,EAAE;MAAEA,IAAI,EAAJA,IAAI;MAAE6G,KAAK,EAAE;KAAM,CAAC,EAAEiD,OAAO,CAAC,EAAC,wBAAwB,EAAEpD,KAAK,EAAE1G,IAAI,EAAE2G,OAAO,CAAC;IAC1M,IAAImD,OAAO,CAACzK,KAAK,EAAE;MACfsJ,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAE8J,OAAO,CAACzK,KAAK,CAAC;;IAEzC,IAAI,CAAC+B,WAAW,CAAC0I,OAAO,CAACzF,QAAQ,CAAC,IAC9BqC,KAAK,IACLA,KAAK,CAACE,EAAE,IACRF,KAAK,CAACE,EAAE,CAACa,GAAG,CAACpD,QAAQ,KAAKyF,OAAO,CAACzF,QAAQ,EAAE;MAC5CsE,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAE8J,OAAO,CAACzF,QAAQ,GAAG1D,SAAS,GAAG+F,KAAK,CAACE,EAAE,CAACa,GAAG,CAACpI,KAAK,CAAC;;IAE7E+H,MAAM,CAACP,KAAK,CAACkG,GAAG,CAAC/M,IAAI,CAAC;IACtB,CAAC0G,KAAK,IAAIwV,yBAAyB,CAAClc,IAAI,EAAEW,SAAS,EAAE,IAAI,CAAC;IAC1D,OAAO6W,iBAAiB,GAClB;MAAExX,IAAI,EAAEA;KAAM,GACdwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;MAAEzC,IAAI,EAAJA;KAAM,EAAGoB,WAAW,CAAC0I,OAAO,CAACzF,QAAQ,CAAC,GAChE,EAAE,GACF;MAAEA,QAAQ,EAAEyF,OAAO,CAACzF;KAAW,CAAC,EAAE;MAAE3C,QAAQ,EAAE2Z,YAAY;MAAE5Z,MAAM,EAAE4Z,YAAY;MAAE5T,GAAG,EAAE,SAAAA,IAACA,KAAG,EAAK;QAC9F,IAAIA,KAAG,EAAE;UACL2X,gBAAgB,CAACpf,IAAI,EAAEyH,KAAG,EAAEqC,OAAO,CAAC;SACvC,MACI;UACD,IAAMpD,MAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,EAAE,EAAE,CAAC;UACpC,IAAMkH,iBAAiB,GAAGwQ,WAAW,CAAC5R,gBAAgB,IAAIgE,OAAO,CAAChE,gBAAgB;UAClF,IAAIY,MAAK,CAACE,EAAE,EAAE;YACVF,MAAK,CAACE,EAAE,CAACC,KAAK,GAAG,KAAK;;UAE1BK,iBAAiB,IACb,EAAEC,kBAAkB,CAACC,MAAM,CAACC,KAAK,EAAErH,IAAI,CAAC,IAAIsH,WAAW,CAAC,IACxDF,MAAM,CAAC6Q,OAAO,CAAClL,GAAG,CAAC/M,IAAI,CAAC;;;KAEjC,CAAC;GACf;EACD,IAAMyf,YAAY,GAAG,SAAfA,YAAYA,CAAIC,OAAO,EAAEC,SAAS;IAAA,iBAAYxI,CAAC;MAAA,IAAK;QACtD,IAAIA,CAAC,EAAE;UACHA,CAAC,CAACyI,cAAc,IAAIzI,CAAC,CAACyI,cAAc,EAAE;UACtCzI,CAAC,CAAC0I,OAAO,IAAI1I,CAAC,CAAC0I,OAAO,EAAE;;QAE5B,IAAIC,iBAAiB,GAAG,IAAI;QAC5B,IAAItT,WAAW,GAAGhK,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyD,WAAW,CAAC;QAEhDf,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBuS,YAAY,EAAE;SACjB,CAAC;QAAC,OAAA/C,OAAA,CAAAC,OAAA,CAAAgL,gBAAA;UAAA,OAAAC,MAAA,aACC;YAAA,SAAAC;cAAA,IAAAC,OAAA;gBAAA,IASIpc,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC,IAChCzC,MAAM,CAACmB,IAAI,CAACc,UAAU,CAACQ,MAAM,CAAC,CAACoP,KAAK,CAAC,UAACrU,IAAI;kBAAA,OAAK0D,GAAG,CAAC8I,WAAW,EAAExM,IAAI,CAAC;kBAAC;kBACtEmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;oBACjBL,MAAM,EAAE,EAAE;oBACV4S,YAAY,EAAE;mBACjB,CAAC;kBAAC,OAAA/C,OAAA,CAAAC,OAAA,CACG2K,OAAO,CAAClT,WAAW,EAAE2K,CAAC,CAAC,EAAAR,IAAA;;kBAAA,IAAAwJ,OAAA,YAAAA,QAAAC,UAAA;oBAG7BA,UAAA;oBACA1I,WAAW,CAACH,gBAAgB,IACxBlO,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;sBAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;uBAAEiG,MAAM,CAACP,KAAK,CAAC;;kBAAC,OAF9E8Y,SAAS,GAAA7K,OAAA,CAAAC,OAAA,CAAW4K,SAAS,CAAClb,UAAU,CAACQ,MAAM,EAAEkS,CAAC,CAAC,EAAAR,IAAA,CAAAwJ,OAAA,IAAAA,OAAA,CAAnDR,SAAS;;;cAAA,IAAAO,OAAA,IAAAA,OAAA,CAAAvJ,IAAA,SAAAuJ,OAAA,CAAAvJ,IAAA;;YAAA,IAAA0J,OAAA;cAAA,IAjBT3I,WAAW,CAACqB,QAAQ;gBAAA,OAAAjE,OAAA,CAAAC,OAAA,CACa0F,eAAe,EAAE,EAAA9D,IAAA,WAAA2J,KAAA;kBAAA,IAA1Crb,MAAM,GAAAqb,KAAA,CAANrb,MAAM;oBAAE+B,MAAM,GAAAsZ,KAAA,CAANtZ,MAAM;kBACtBvC,UAAU,CAACQ,MAAM,GAAGA,MAAM;kBAC1BuH,WAAW,GAAGxF,MAAM;;;gBAAC,OAAA8N,OAAA,CAAAC,OAAA,CAGf0D,YAAY,CAAC9R,OAAO,CAAC,EAAAgQ,IAAA;;;YAAA,OAAA0J,OAAA,IAAAA,OAAA,CAAA1J,IAAA,GAAA0J,OAAA,CAAA1J,IAAA,CAAAsJ,OAAA,IAAAA,OAAA,CAAAI,OAAA;WAelC,YACME,GAAG,EAAE;YACRT,iBAAiB,GAAG,KAAK;YACzB,MAAMS,GAAG;WACZ;qBAAAC,UAAA,EAAAC,QAAA;UAEGhc,UAAU,CAACuP,WAAW,GAAG,IAAI;UAC7B7O,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjB0O,WAAW,EAAE,IAAI;YACjB6D,YAAY,EAAE,KAAK;YACnBC,kBAAkB,EAAEhU,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC,IAAI6a,iBAAiB;YACzElI,WAAW,EAAEnT,UAAU,CAACmT,WAAW,GAAG,CAAC;YACvC3S,MAAM,EAAER,UAAU,CAACQ;WACtB,CAAC;UAAC,IAAAub,UAAA,QAAAC,QAAA;UAAA,OAAAA,QAAA;;OAEV,QAAAtJ,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;;EACD,IAAMuJ,KAAK,GAAG,SAARA,KAAKA,CAAI1Z,MAAM,EAAE2Z,gBAAgB,EAAU;IAAA,IAA1BA,gBAAgB;MAAhBA,gBAAgB,GAAG,EAAE;;IACxC,IAAMC,aAAa,GAAG5Z,MAAM,IAAIb,cAAc;IAC9C,IAAImT,KAAK,IAAI,CAACqH,gBAAgB,CAACE,UAAU,EAAE;MACvC,SAAAC,UAAA,GAAApX,+BAAA,CAAmBtC,MAAM,CAACP,KAAK,GAAAka,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAlX,IAAA,GAAE;QAAA,IAAtB5J,IAAI,GAAA+gB,MAAA,CAAA1hB,KAAA;QACX,IAAMqH,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;QAChC,IAAI0G,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;UACnB,IAAMoO,QAAQ,GAAGxV,KAAK,CAACC,OAAO,CAACiH,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,GACvCnD,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,CAAC,CAAC,GAChBnD,KAAK,CAACE,EAAE,CAACa,GAAG;UAClB,IAAI;YACA8R,aAAa,CAACvE,QAAQ,CAAC,IAAIA,QAAQ,CAACgM,OAAO,CAAC,MAAM,CAAC,CAACN,KAAK,EAAE;YAC3D;WACH,CACD,OAAOlN,EAAE,EAAE;;;;IAIvB,IAAI,CAACmN,gBAAgB,CAACM,iBAAiB,EAAE;MACrC9a,cAAc,GAAG3D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;MACjD1a,WAAW,GAAG1D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;;IAElD,IAAI,CAACD,gBAAgB,CAACE,UAAU,EAAE;MAC9Bla,OAAO,GAAG,EAAE;MACZT,WAAW,GAAG,EAAE;MAChBf,SAAS,CAACf,OAAO,CAACkB,IAAI,CAAC;QACnB0B,MAAM,EAAE2Z,gBAAgB,CAACM,iBAAiB,GACpC9a,cAAc,GACd3D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa;OACxC,CAAC;MACFzb,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC,EAAE,CAAC;MACxBH,SAAS,CAACkC,KAAK,CAAC/B,IAAI,CAAC;QACjB0B,MAAM,EAAExE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;QACxClS,OAAO,EAAE;OACZ,CAAC;;IAENtH,MAAM,GAAG;MACLP,KAAK,EAAE,IAAImR,GAAG,EAAE;MAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;MAClB3Q,KAAK,EAAE,IAAI2Q,GAAG,EAAE;MAChB7J,KAAK,EAAE,IAAI6J,GAAG,EAAE;MAChB9J,QAAQ,EAAE;KACb;IACD/I,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBsS,WAAW,EAAE+I,gBAAgB,CAACO,eAAe,GACvCzc,UAAU,CAACmT,WAAW,GACtB,CAAC;MACPhT,OAAO,EAAE+b,gBAAgB,CAAC3B,SAAS,GAC7Bva,UAAU,CAACG,OAAO,GAClB+b,gBAAgB,CAACM,iBAAiB,GAC9B3R,SAAS,CAACtI,MAAM,EAAEb,cAAc,CAAC,GACjC,KAAK;MACf6N,WAAW,EAAE2M,gBAAgB,CAACQ,eAAe,GACvC1c,UAAU,CAACuP,WAAW,GACtB,KAAK;MACXnP,WAAW,EAAE8b,gBAAgB,CAAC3B,SAAS,GAAGva,UAAU,CAACI,WAAW,GAAG,EAAE;MACrEC,aAAa,EAAE6b,gBAAgB,CAAC1B,WAAW,GACrCxa,UAAU,CAACK,aAAa,GACxB,EAAE;MACRG,MAAM,EAAE0b,gBAAgB,CAACS,UAAU,GAAG3c,UAAU,CAACQ,MAAM,GAAG,EAAE;MAC5D4S,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACvB,CAAC;IACFC,UAAU,GAAG,CAAC,CAAC4I,gBAAgB,CAACxB,WAAW;GAC9C;EACD,IAAMkC,QAAQ,GAAG,SAAXA,QAAQA,CAAIrhB,IAAI;IAAA,OAAK0D,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,CAAC4G,EAAE,CAACa,GAAG,CAACE,KAAK,EAAE;;EAC5D,OAAO;IACHvD,OAAO,EAAE;MACLkC,QAAQ,EAARA,QAAQ;MACRiB,UAAU,EAAVA,UAAU;MACV8S,WAAW,EAAXA,WAAW;MACXyC,SAAS,EAATA,SAAS;MACTvO,YAAY,EAAZA,YAAY;MACZ4O,iBAAiB,EAAjBA,iBAAiB;MACjBhQ,qBAAqB,EAArBA,qBAAqB;MACrBN,mBAAmB,EAAnBA,mBAAmB;MACnB1H,SAAS,EAATA,SAAS;MACT+B,iBAAiB,EAAEwQ,WAAW,CAAC5R,gBAAgB;MAC/Ca,OAAO,EAAPA,OAAO;MACPvD,eAAe,EAAfA,eAAe;MACf,IAAI8C,WAAWA,GAAG;QACd,OAAOA,WAAW;OACrB;MACD,IAAIA,WAAWA,CAAC7G,KAAK,EAAE;QACnB6G,WAAW,GAAG7G,KAAK;OACtB;MACD,IAAI0Y,UAAUA,GAAG;QACb,OAAOA,UAAU;OACpB;MACD,IAAIA,UAAUA,CAAC1Y,KAAK,EAAE;QAClB0Y,UAAU,GAAG1Y,KAAK;OACrB;MACD,IAAI8G,cAAcA,GAAG;QACjB,OAAOA,cAAc;OACxB;MACD,IAAIA,cAAcA,CAAC9G,KAAK,EAAE;QACtB8G,cAAc,GAAG9G,KAAK;OACzB;MACD,IAAI+H,MAAMA,GAAG;QACT,OAAOA,MAAM;OAChB;MACD,IAAIA,MAAMA,CAAC/H,KAAK,EAAE;QACd+H,MAAM,GAAG/H,KAAK;OACjB;MACDiI,WAAW,EAAE;QACT,IAAI5G,GAAGA,GAAG;UACN,OAAO4G,WAAW;SACrB;QACD,IAAI5G,GAAGA,CAACrB,KAAK,EAAE;UACXiI,WAAW,GAAGjI,KAAK;;OAE1B;MACDoF,UAAU,EAAE;QACR,IAAI/D,GAAGA,GAAG;UACN,OAAO+D,UAAU;SACpB;QACD,IAAI/D,GAAGA,CAACrB,KAAK,EAAE;UACXoF,UAAU,GAAGpF,KAAK;;OAEzB;MACDiiB,YAAY,EAAE,SAAAA,aAACxX,OAAO,EAAK;QACvB4N,WAAW,GAAGlV,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4U,cAAc,CAAC,EAAEvN,OAAO,CAAC;;KAE9E;IACDmQ,OAAO,EAAPA,OAAO;IACPgE,iBAAiB,EAAjBA,iBAAiB;IACjB3X,QAAQ,EAARA,QAAQ;IACRmZ,YAAY,EAAZA,YAAY;IACZtR,KAAK,EAALA,KAAK;IACLuP,QAAQ,EAARA,QAAQ;IACR9D,SAAS,EAATA,SAAS;IACT8G,KAAK,EAALA,KAAK;IACLlC,WAAW,EAAXA,WAAW;IACXjX,UAAU,EAAVA,UAAU;IACVmX,QAAQ,EAARA,QAAQ;IACR2C,QAAQ,EAARA;GACH;AACL;;ACh0BA,YAAe,UAAC5Z,GAAG;EAAA,OAAK,CAAC8R,aAAa,CAAC9R,GAAG,CAAC,IAAI,CAAC+I,QAAQ,CAACgP,QAAQ,CAAC/X,GAAG,CAAC;AAAA;;ACO/D,SAAS8Z,OAAOA,CAACxe,KAAK,EAAO;EAAA,IAAZA,KAAK;IAALA,KAAK,GAAG,EAAE;;EAC9B,IAAMye,YAAY,GAAG7e,YAAY,EAAE;EACnC,IAAA6B,eAAA,GAAqC7B,cAAc,CAAC;MAChDiC,OAAO,EAAE,KAAK;MACdG,YAAY,EAAE,KAAK;MACnBF,WAAW,EAAE,EAAE;MACfmP,WAAW,EAAE,KAAK;MAClB4D,WAAW,EAAE,CAAC;MACd9S,aAAa,EAAE,EAAE;MACjB+S,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE,KAAK;MACzB9S,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;KACX,CAAC;IAXK9B,SAAS,GAAAqB,eAAA;IAAEE,eAAe,GAAAF,eAAA;EAYjC,IAAIgd,YAAY,CAAClhB,OAAO,EAAE;IACtBkhB,YAAY,CAAClhB,OAAO,CAAC8D,OAAO,CAACkd,YAAY,CAACve,KAAK,CAAC;GACnD,MACI;IACDye,YAAY,CAAClhB,OAAO,GAAGkC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgf,mBAAmB,CAAC1e,KAAK,CAAC,CAAC,EAAE;MAAEI,SAAS,EAATA;KAAW,CAAC;;EAEtG,IAAMiB,OAAO,GAAGod,YAAY,CAAClhB,OAAO,CAAC8D,OAAO;EAC5CzB,eAAe,CAAC,YAAM;IAClB,IAAMuC,qBAAqB,GAAGd,OAAO,CAACe,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAI,WAAAA,KAACnC,SAAS,EAAE;QAEZ,IAAIsC,qBAAqB,CAACtC,SAAS,EAAEiB,OAAO,CAAChB,eAAe,EAAE,IAAI,CAAC,EAAE;UACjEgB,OAAO,CAACK,UAAU,CAAC/D,GAAG,GAAG8B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE2B,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC,EAAEyC,SAAS,CAAC;UAC5FuB,eAAe,CAAClC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE2B,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC,CAAC;;;KAGrE,CAAC;IACF,IAAMghB,yBAAyB,GAAGtd,OAAO,CAACe,SAAS,CAACkC,KAAK,CAAChC,SAAS,CAAC;MAChEC,IAAI,WAAAA,KAACF,KAAK,EAAE;QACR,IAAIA,KAAK,CAAC4B,MAAM,IAAI5B,KAAK,CAACpF,IAAI,IAAIoE,OAAO,CAAChB,eAAe,CAAC4B,OAAO,EAAE;UAC/D2D,GAAG,CAACvE,OAAO,CAAC8B,WAAW,EAAEd,KAAK,CAACpF,IAAI,EAAEoF,KAAK,CAAC4B,MAAM,CAAC;UAClD5C,OAAO,CAACmK,YAAY,EAAE;;;KAGjC,CAAC;IACF,OAAO,YAAM;MACTrJ,qBAAqB,CAACQ,WAAW,EAAE;MACnCgc,yBAAyB,CAAChc,WAAW,EAAE;KAC1C;GACJ,EAAE,CAACtB,OAAO,CAAC,CAAC;EACbzB,eAAe,CAAC,YAAM;IAClB,IAAMgf,oBAAoB,GAAG,EAAE;IAC/B,IAAI,CAACvd,OAAO,CAAC2T,UAAU,EAAE;MACrB3T,OAAO,CAAC2T,UAAU,GAAG,IAAI;MACzB3T,OAAO,CAAChB,eAAe,CAAC4B,OAAO,IAAIZ,OAAO,CAACmK,YAAY,EAAE;MACzD,CAACxL,KAAK,CAAC+C,gBAAgB,IACnB1B,OAAO,CAAC+Y,iBAAiB,CAAC/Y,OAAO,CAAC+B,cAAc,CAAC;;IAEzD,SAAAsD,SAAA,GAAAC,+BAAA,CAAmBtF,OAAO,CAACgD,MAAM,CAAC6Q,OAAO,GAAAtO,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;MAAA,IAAhC5J,IAAI,GAAA2J,KAAA,CAAAtK,KAAA;MACX,IAAMqH,KAAK,GAAGhD,GAAG,CAACU,OAAO,CAACuC,OAAO,EAAE3G,IAAI,CAAC;MACxC0G,KAAK,KACAA,KAAK,CAACE,EAAE,CAACiD,IAAI,GAAGnD,KAAK,CAACE,EAAE,CAACiD,IAAI,CAACwK,KAAK,CAACuN,IAAI,CAAC,GAAGA,IAAI,CAAClb,KAAK,CAACE,EAAE,CAACa,GAAG,CAAC,CAAC,IAChEka,oBAAoB,CAAC7Q,IAAI,CAAC9Q,IAAI,CAAC;;IAEvCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE0b,oBAAoB,EAAC,sBAAsB,EAACvd,OAAO,CAACgD,MAAM,EAAChD,OAAO,CAAC;IAC1Fud,oBAAoB,CAAC/d,MAAM,IACvB4d,YAAY,CAAClhB,OAAO,CAACiH,UAAU,CAACoa,oBAAoB,CAAC;IACzDvd,OAAO,CAACgD,MAAM,CAAC6Q,OAAO,GAAG,IAAID,GAAG,EAAE;GACrC,CAAC;EACFwJ,YAAY,CAAClhB,OAAO,CAAC6C,SAAS,GAAGwC,iBAAiB,CAACxC,SAAS,EAAEiB,OAAO,CAAChB,eAAe,CAAC;EACtF,OAAOoe,YAAY,CAAClhB,OAAO;AAC/B;;ACrEO,SAASuhB,QAAQA,CAAC9e,KAAK,EAAE;EAC5B,IAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,IAAAqB,IAAA,GAAqEnB,KAAK,IAAI,EAAE;IAAAoB,YAAA,GAAAD,IAAA,CAAxEE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAGF,OAAO,CAACG,OAAO,GAAAD,YAAA;IAAEnE,IAAI,GAAAkE,IAAA,CAAJlE,IAAI;IAAEc,YAAY,GAAAoD,IAAA,CAAZpD,YAAY;IAAEuD,QAAQ,GAAAH,IAAA,CAARG,QAAQ;EAC/D,IAAMyd,KAAK,GAAGnf,YAAY,CAAC3C,IAAI,CAAC;EAChC8hB,KAAK,CAACxhB,OAAO,GAAGN,IAAI;EACpB,IAAAwE,eAAA,GAA6B7B,cAAc,CAACvB,WAAW,CAACN,YAAY,CAAC,GAC/DsD,OAAO,CAAC0Y,SAAS,CAAC9c,IAAI,CAAC,GACvBc,YAAY,CAAC;IAFZzB,KAAK,GAAAmF,eAAA;IAAEud,WAAW,GAAAvd,eAAA;EAGzB7B,eAAe,CAAC,YAAM;IAClB,IAAMqf,iBAAiB,GAAG5d,OAAO,CAACe,SAAS,CAACgJ,KAAK,CAAC9I,SAAS,CAAC;MACxDC,IAAI,EAAE,SAAAA,KAAA+M,KAAA,EAAc;QAAA,IAAXrS,IAAI,GAAAqS,KAAA,CAAJrS,IAAI;QACTgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,uBAAuB,EAAEjG,IAAI,CAAC;QACrD,OAAM,CAAC,CAAC8hB,KAAK,CAACxhB,OAAO,IACrB,CAACN,IAAI,IACLuF,qBAAqB,CAACuc,KAAK,CAACxhB,OAAO,CAAC,CAACD,IAAI,CAAC,UAACuc,SAAS;UAAA,OAAK5c,IAAI,IACzD4c,SAAS,KACRA,SAAS,CAACvO,UAAU,CAACrO,IAAI,CAAC,IACvBA,IAAI,CAACqO,UAAU,CAACuO,SAAS,CAAC,CAAC;UAAC,KACpCmF,WAAW,CAAC3d,OAAO,CAAC0Y,SAAS,CAACgF,KAAK,CAACxhB,OAAO,EAAEQ,YAAY,CAAC,CAAC;;KAClE,CAAC;IACFuD,QAAQ,IAAI2d,iBAAiB,CAACtc,WAAW,EAAE;IAC3C,OAAO;MAAA,OAAMsc,iBAAiB,CAACtc,WAAW,EAAE;;GAC/C,EAAE,CAACrB,QAAQ,EAAED,OAAO,EAAEtD,YAAY,CAAC,CAAC;EACrC,OAAOzB,KAAK;AAChB;;ACzBA,IAAM4iB,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAOhX,EAAE,EAAMD,IAAI,EAAS;EAAA,IAAnCiX,OAAO;IAAPA,OAAO,GAAG,EAAE;;EAAA,IAAEhX,EAAE;IAAFA,EAAE,GAAG,CAAC;;EAAA,IAAED,IAAI;IAAJA,IAAI,GAAG,CAAC;;EAClD,IAAMkX,UAAU,GAAG,GAAA/hB,MAAA,CAAI8hB,OAAO,EAAElX,KAAK,CAACC,IAAI,EAAEC,EAAE,CAAC;EAC/ClF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,gBAAgB,EAAEkc,UAAU,EAAEjX,EAAE,CAAC;EACxD,OAAO,IAAI8M,GAAG,CAACmK,UAAU,CAAC;AAC9B,CAAC;AAED,AAAe,SAASC,UAAUA,CAACC,IAAI,EAAiB;EAAA,IAAAC,KAAA;EAAA,IAArBD,IAAI;IAAJA,IAAI,GAAG;MAAEriB,IAAI,EAAE;KAAI;;EAElD,IAAAuiB,SAAA,GAA4BC,cAAQ,CAACH,IAAI,CAAC;IAAnCI,MAAM,GAAAF,SAAA;IAAEG,SAAS,GAAAH,SAAA;EAGxB,IAAAI,UAAA,GAAiCH,cAAQ,CAAC,IAAIxK,GAAG,EAAE,CAAC;IAA7CkK,OAAO,GAAAS,UAAA;IAAEC,aAAa,GAAAD,UAAA;EAC7B,IAAAE,UAAA,GAA0BL,cAAQ,CAAC,CAAC,CAAC;IAA9B3Z,KAAK,GAAAga,UAAA;IAAEC,QAAQ,GAAAD,UAAA;EACtB,IAAAE,UAAA,GAAyCP,cAAQ,EAAAF,KAAA,GAACD,IAAI,cAAAC,KAAA,uBAAJA,KAAA,CAAMtiB,IAAI,CAAC;IAAtDgjB,WAAW,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAErC,IAAM3d,KAAK,GAAG8d,aAAO,CAAC;IAAA,OAAMT,MAAM,CAACO,WAAW,CAAC;KAAE,CAACna,KAAK,EAAEma,WAAW,CAAC,CAAC;EAOtE,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAI9jB,KAAK,EAAK;IACxB,IAAIA,KAAK,KAAKsB,SAAS,IAAItB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;IAG3D,IAAM+jB,QAAQ,GAAG/jB,KAAK,CAACW,IAAI;IAE3B,IAAMqjB,QAAQ,GAAGC,CAAC,CAAC5f,GAAG,CAAC+e,MAAM,EAAEW,QAAQ,CAAC;IAGxC,IAAIlB,OAAO,CAAC5J,GAAG,CAAC8K,QAAQ,CAAC,EAAE;MAIvB,IAAMjB,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEmB,QAAQ,CAAC,SAAS,CAAC,CAAC;MAC/DT,aAAa,CAACT,UAAU,CAAC;MAEzB,IAAM5f,KAAI,GAAG+gB,CAAC,CAACC,SAAS,CAACD,CAAC,CAAC3a,GAAG,CAAC8Z,MAAM,EAAEW,QAAQ,EAAA7c,QAAA,KAAOlH,KAAK;QAAE,SAAS,EAAEgkB,QAAQ,CAAC,SAAS;QAAG,CAAC,CAAC;MAC/FX,SAAS,CAACngB,KAAI,CAAC;MAGfugB,QAAQ,CAACO,QAAQ,CAAC,SAAS,CAAC,CAAC;MAC7BJ,iBAAiB,CAACG,QAAQ,CAAC;MAE3Bpd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,uBAAuB,EAAEic,OAAO,EAAE,OAAO,EAAEmB,QAAQ,CAAC,SAAS,CAAC,EAAElB,UAAU,CAAC;MAClG;;IAEJnc,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE5G,KAAK,EAAEikB,CAAC,CAAC3a,GAAG,CAAC8Z,MAAM,EAAEW,QAAQ,EAAE/jB,KAAK,CAAC,EAAE+F,KAAK,EAAE8c,OAAO,CAACsB,IAAI,CAAC;IAC9F,IAAMC,QAAQ,GAAG5a,KAAK,GAAG,CAAC;IAC1B,IAAMtG,IAAI,GAAG+gB,CAAC,CAACC,SAAS,CAACD,CAAC,CAAC3a,GAAG,CAAC8Z,MAAM,EAAEW,QAAQ,EAAA7c,QAAA,KAAOlH,KAAK;MAAE,SAAS,EAAEokB;MAAU,CAAC,CAAC;IAEpFX,QAAQ,CAACW,QAAQ,CAAC;IAElBb,aAAa,CAACV,OAAO,CAACnV,GAAG,CAACqW,QAAQ,CAAC,CAAC;IACpCV,SAAS,CAACngB,IAAI,CAAC;IACf0gB,iBAAiB,CAACG,QAAQ,CAAC;IAC3Bpd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAEic,OAAO,CAAC;IAC9Clc,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5G,KAAK,EAAE,2BAA2B,EAAEgkB,QAAQ,CAAC;IACpErd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEwc,MAAM,EAAE,gBAAgB,EAAErd,KAAK,EAAE4d,WAAW,EAAEM,CAAC,CAACI,OAAO,CAACL,QAAQ,EAAEhkB,KAAK,CAAC,CAAC;GACnG;EAcD,IAAMskB,UAAU,GAAG,SAAbA,UAAUA,CAAItB,IAAI,EAAoB;IACxCS,QAAQ,CAAC,CAAC,CAAC;IACXJ,SAAS,CAAC,EAAE,CAAC;IACbE,aAAa,CAAC,EAAE,CAAC;IACjB5c,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,iBAAiB,EAAEic,OAAO,EAAEO,MAAM,EAAE5Z,KAAK,CAAC;GACpE;EAED,IAAM+a,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAK,EAAMnD,KAAK,EAAa;IAAA,IAA7BmD,KAAK;MAALA,KAAK,GAAG,CAAC;;IAAA,IAAEnD,KAAK;MAALA,KAAK,GAAG,KAAK;;IACpC,IAAGoD,MAAM,CAACD,KAAK,CAAC,EAAC;MACbE,aAAa,CAACF,KAAK,EAAEnD,KAAK,CAAC;MAC3B;;IAEJ1a,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,cAAc,EAAE4d,KAAK,CAAC;IAC7C,IAAG,CAACpB,MAAM,CAACoB,KAAK,CAAC,EAAC;MACd,MAAM,kCAAkC;;IAE5CG,YAAY,CAACH,KAAK,EAAEnD,KAAK,CAAC;GAC7B;EAGD,IAAMqD,aAAa,GAAG,SAAhBA,aAAaA,CAAIF,KAAK,EAAMnD,KAAK,EAAa;IAAA,IAA7BmD,KAAK;MAALA,KAAK,GAAG,CAAC;;IAAA,IAAEnD,KAAK;MAALA,KAAK,GAAG,KAAK;;IAC3C1a,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4d,KAAK,EAAE,aAAa,CAAC;IAC5C,IAAMJ,QAAQ,GAAGlZ,IAAI,CAACxI,GAAG,CAAC,CAAC,EAAE+hB,MAAM,CAACjb,KAAK,CAAC,IAAIib,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,IAAMI,gBAAgB,GAAGzhB,MAAM,CAACmB,IAAI,CAAC8e,MAAM,CAAC,CAACgB,QAAQ,GAAG,CAAC,CAAC;IAE1Dzd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEsE,IAAI,CAACxI,GAAG,CAAC,CAAC,EAAE+hB,MAAM,CAACjb,KAAK,CAAC,IAAIib,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,0DAA0D,EAAEhb,KAAK,EAAEob,gBAAgB,EAAExB,MAAM,CAACwB,gBAAgB,CAAC,CAAC;IACxLhB,iBAAiB,CAACgB,gBAAgB,CAAC;IACnCnB,QAAQ,CAACW,QAAQ,CAAC;IAClB,IAAI/C,KAAK,EAAE;MACP,IAAMwD,YAAY,GAAGZ,CAAC,CAAC5f,GAAG,CAAC+e,MAAM,EAAEwB,gBAAgB,CAAC;MACpD,IAAM9B,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEuB,QAAQ,CAAC;MAIpDb,aAAa,CAACT,UAAU,CAAC;MACzBnc,OAAO,CAACC,GAAG,CAAC,SAAS,EACjBge,gBAAgB,EAChBR,QAAQ,EACR,kBAAkB,EAClBvB,OAAO,EACPC,UAAU,EACV+B,YAAY,CAAC,SAAS,CAE1B,CAAC;;GAER;EAED,IAAMF,YAAY,GAAG,SAAfA,YAAYA,CAAIH,KAAK,EAAMnD,KAAK,EAAa;IAAA,IAA7BmD,KAAK;MAALA,KAAK,GAAG,CAAC;;IAAA,IAAEnD,KAAK;MAALA,KAAK,GAAG,KAAK;;IAC1C1a,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4d,KAAK,EAAE,aAAa,CAAC;IAC5C,IAAMK,YAAY,GAAGZ,CAAC,CAAC5f,GAAG,CAAC+e,MAAM,EAAEoB,KAAK,CAAC;IAGzC,IAAMJ,QAAQ,GAAGlZ,IAAI,CAACxI,GAAG,CAAC,CAAC,EAAE+hB,MAAM,CAACjb,KAAK,CAAC,IAAIib,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,IAAMI,gBAAgB,GAAGzhB,MAAM,CAACmB,IAAI,CAAC8e,MAAM,CAAC,CAACgB,QAAQ,GAAG,CAAC,CAAC;IAE1Dzd,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEsE,IAAI,CAACxI,GAAG,CAAC,CAAC,EAAE+hB,MAAM,CAACjb,KAAK,CAAC,IAAIib,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,0DAA0D,EAAEhb,KAAK,EAAEob,gBAAgB,EAAExB,MAAM,CAACwB,gBAAgB,CAAC,CAAC;IACxLhB,iBAAiB,CAACgB,gBAAgB,CAAC;IACnCnB,QAAQ,CAACW,QAAQ,CAAC;IAClB,IAAI/C,KAAK,EAAE;MACP,IAAMwD,aAAY,GAAGZ,CAAC,CAAC5f,GAAG,CAAC+e,MAAM,EAAEwB,gBAAgB,CAAC;MACpD,IAAM9B,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEuB,QAAQ,CAAC;MAIpDb,aAAa,CAACT,UAAU,CAAC;MACzBnc,OAAO,CAACC,GAAG,CAAC,SAAS,EACjBge,gBAAgB,EAChBR,QAAQ,EACR,kBAAkB,EAClBvB,OAAO,EACPC,UAAU,EACV+B,aAAY,CAAC,SAAS,CAE1B,CAAC;;GAER;EAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIN,KAAK,EAAS;IAAA,IAAdA,KAAK;MAALA,KAAK,GAAG,CAAC;;IACxBf,QAAQ,CAACvY,IAAI,CAACvI,GAAG,CAACygB,MAAM,CAAC7e,MAAM,GAAG,CAAC,EAAEkgB,MAAM,CAACjb,KAAK,CAAC,IAAIib,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAC9E;EAED,IAAMO,UAAU,GAAG,SAAbA,UAAUA,CAAI/kB,KAAK,EAAK;IAC1B,IAAMgkB,QAAQ,GAAGC,CAAC,CAAC5f,GAAG,CAAC+e,MAAM,EAAEO,WAAW,CAAC;IAC3CK,QAAQ,CAAC3P,aAAa,GAAAnN,QAAA,KAAQlH,KAAK,CAAE;IACrC2G,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5G,KAAK,EAAE,wBAAwB,EAAEgkB,QAAQ,CAAC;GACpE;EAED,OAAO;IACHje,KAAK,EAAEA,KAAK;IACZ+d,QAAQ,EAAEA,QAAQ;IAClBQ,UAAU,EAAEA,UAAU;IACtBX,WAAW,EAAXA,WAAW;IACXna,KAAK,EAAEA,KAAK;IACZI,SAAS,EAAE,CAAAwZ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE7e,MAAM,IAAG,CAAC,IAAI,CAAC;IAClCggB,MAAM,EAAEA,MAAM;IACdO,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtBlC,OAAO,EAAPA;GACH;AACL;;AChLA,IAAMmC,eAAe,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE1C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIllB,KAAK,EAAEyK,OAAO,EAAK;EACnC,OAAUzK,KAAK;AACnB,CAAC;AAED,IAAMmlB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIC,UAAU,EAAK;EACxC,IAAI,OAAOA,UAAU,KAAK,WAAW,IAAI,OAAOA,UAAU,CAACC,gBAAgB,KAAK,WAAW,EAAE;IAC3F,MAAM,IAAIC,SAAS,CAAC,4BAA4B,CAAC;;EAEnDF,UAAU,CAACC,gBAAgB,CACzB,YAAY,EACZ,UAACrlB,KAAK,EAAEyK,OAAO;IAAA,OAAKya,UAAU,CAACllB,KAAK,AAAS,CAAC;KAC9C,UACF,CAAC;AACL,CAAC;AAED,SAASulB,eAAeA,CAACC,IAAI,EAAE/a,OAAO,EAAE;EACpC,IAAM2a,UAAU,GAAGJ,eAAe,CAACQ,IAAI,EAAE/a,OAAO,CAAC;EACjD0a,mBAAmB,CAACC,UAAU,CAAC;EAC/B,OAAOA,UAAU;AACrB;;ACrBuC,IAETK,WAAW,YAAXA,WAAWA,CAAC3lB,IAAI,EAAE4lB,MAAM;EAAA,IAAG;IACrD,IAAMN,UAAU,GAAGO,eAAO,CAACD,MAAM,CAAC;IAAC,OAAAjQ,OAAA,CAAAC,OAAA,CACd0P,UAAU,CAACQ,QAAQ,CAAC9lB,IAAI,CAAC;GAEjD,QAAAgY,CAAA;IAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;AAAA;;ACJD,IAAM+N,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,UAAU,EAAEze,KAAK,EAAE0e,EAAE,EAAEC,iBAAiB,EAAUC,gBAAgB,EAAa;EAAA,IAAxDD,iBAAiB;IAAjBA,iBAAiB,GAAG,KAAK;;EAAA,IAAEC,gBAAgB;IAAhBA,gBAAgB,GAAG,KAAK;;EAClG,IAAI,CAAC9lB,KAAK,CAACC,OAAO,CAAC0lB,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;;EAGjD,IAAAhD,SAAA,GAA8BC,cAAQ,CAAC2C,UAAU,CAAC;IAA3CjD,OAAO,GAAAK,SAAA;IAAEiD,UAAU,GAAAjD,SAAA;EAC1B,IAAAI,UAAA,GAAwCH,cAAQ,CAAC,CAAC,CAAC;IAA5CiD,YAAY,GAAA9C,UAAA;IAAE+C,eAAe,GAAA/C,UAAA;EAEpCgD,eAAS,CAAC,YAAM;IACd,IAAIzD,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;MACxB8hB,eAAe,CAAC,CAAC,CAAC;KACnB,MAAM;MACL,IAAMjC,QAAQ,GAAGvB,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;QAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAK0e,EAAE;QAAC;MACxDM,eAAe,CAACjC,QAAQ,IAAI,CAAC,GAAGA,QAAQ,GAAG,CAAC,CAAC;;GAEhD,EAAE,CAAC2B,EAAE,CAAC,CAAC;EAERO,eAAS,CAAC,YAAM;IAEd,IAAIzD,OAAO,CAACte,MAAM,GAAG,CAAC,IAAI,CAACse,OAAO,CAAC,CAAC,CAAC,CAAChjB,IAAI,EAAE;MAC1CsmB,UAAU,CAAC,UAAAK,WAAW,EAAI;QACxB,IAAMC,eAAe,GAAAvf,QAAA,KAAQsf,WAAW,CAAC,CAAC,CAAC;UAAE3mB,IAAI,EAAE;UAAW;QAC9D,QAAQ4mB,eAAe,EAAA1lB,MAAA,CAAKylB,WAAW,CAAC7a,KAAK,CAAC,CAAC,CAAC;OACjD,CAAC;;GAEL,EAAE,CAACkX,OAAO,CAAC,CAAC;EAEb,IAAM6D,YAAY,GAAG,SAAfA,YAAYA;IAAA,OAAUN,YAAY,GAAG,CAAC,IAAIvD,OAAO,CAACte,MAAM,GAAG,KAAK,GAAG6hB,YAAY,GAAG,CAAC;GAAC;EAC1F,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAgBA;IAAA,OAAUP,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAGA,YAAY,GAAG,CAAC;GAAC;EAEhF,IAAMngB,IAAI,GAAG,SAAPA,IAAIA,GAAS;IACjB,IAAI4c,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IACtC,IAAMqiB,SAAS,GAAGF,YAAY,EAAE;IAChC,OAAOE,SAAS,KAAK,KAAK,GAAG/D,OAAO,CAAC+D,SAAS,CAAC,GAAG,KAAK;GACxD;EAED,IAAM3lB,OAAO,GAAG,SAAVA,OAAOA;IAAA,OAAUmlB,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGvD,OAAO,CAACte,MAAM,GAAGse,OAAO,CAACuD,YAAY,CAAC,GAAG,KAAK;GAAC;EAE1G,IAAMlT,QAAQ,GAAG,SAAXA,QAAQA,GAAS;IACrB,IAAI2P,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IACtC,IAAMsiB,aAAa,GAAGF,gBAAgB,EAAE;IACxC,OAAOE,aAAa,KAAK,KAAK,GAAGhE,OAAO,CAACgE,aAAa,CAAC,GAAG,KAAK;GAChE;EAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,GAAS;IACtB,IAAIjE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B8hB,eAAe,CAAC,CAAC,CAAC;GACnB;EAED,IAAMU,IAAI,GAAG,SAAPA,IAAIA,CAAIC,KAAK,EAAEC,WAAW,EAAa;IAAA,IAAxBA,WAAW;MAAXA,WAAW,GAAG,KAAK;;IACtC,IAAIpE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAM6f,QAAQ,GAAGvB,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;MAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAK2f,KAAK;MAAC;IAC3D,IAAI5C,QAAQ,IAAI,CAAC,EAAE;MACjBiC,eAAe,CAACjC,QAAQ,CAAC;MACzB,IAAI6C,WAAW,EAAE;QACfC,gBAAgB,CAAC9C,QAAQ,CAAC;;;GAG/B;EAED,IAAM+C,MAAM,GAAG,SAATA,MAAMA,GAAS;IACnB,IAAItE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAMqiB,SAAS,GAAGF,YAAY,EAAE;IAChC,IAAIE,SAAS,KAAK,KAAK,EAAE;MACvBP,eAAe,CAACO,SAAS,CAAC;;GAE7B;EAED,IAAMQ,SAAS,GAAG,SAAZA,SAASA,CAAI5d,KAAK,EAAEyd,WAAW,EAAa;IAAA,IAAxBA,WAAW;MAAXA,WAAW,GAAG,KAAK;;IAC3C,IAAIpE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAIiF,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGqZ,OAAO,CAACte,MAAM,EAAE;MACxC8hB,eAAe,CAAC7c,KAAK,CAAC;MACtB,IAAIyd,WAAW,EAAE;QACfC,gBAAgB,CAAC1d,KAAK,CAAC;;;GAG5B;EAED,IAAM+a,MAAM,GAAG,SAATA,MAAMA,CAAI0C,WAAW,EAAa;IAAA,IAAxBA,WAAW;MAAXA,WAAW,GAAG,KAAK;;IACjC,IAAIpE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAMsiB,aAAa,GAAGF,gBAAgB,EAAE;IACxC,IAAIE,aAAa,KAAK,KAAK,EAAE;MAC3BR,eAAe,CAACQ,aAAa,CAAC;MAC9B,IAAII,WAAW,EAAE;QACfC,gBAAgB,CAACL,aAAa,CAAC;;;GAGpC;EAED,IAAMQ,eAAe,GAAG,SAAlBA,eAAeA,CAAIJ,WAAW,EAAUK,aAAa,EAAY;IAAA,IAA9CL,WAAW;MAAXA,WAAW,GAAG,KAAK;;IAAA,IAAEK,aAAa;MAAbA,aAAa,GAAG,IAAI;;IAChE,IAAIzE,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAE1B,IAAIsiB,aAAa,GAAGT,YAAY,GAAG,CAAC;IACpC,IAAIkB,aAAa,EAAE;MACjB,OAAOT,aAAa,IAAI,CAAC,IAAIhE,OAAO,CAACgE,aAAa,CAAC,CAAChnB,IAAI,KAAK,WAAW,EAAE;QACxEgnB,aAAa,EAAE;;;IAInB,IAAIA,aAAa,IAAI,CAAC,EAAE;MACtBR,eAAe,CAACQ,aAAa,CAAC;MAC9B,IAAII,WAAW,EAAE;QACfC,gBAAgB,CAACL,aAAa,CAAC;;;GAGpC;EAED,IAAMU,eAAe,GAAG,SAAlBA,eAAeA,CAAIN,WAAW,EAAUK,aAAa,EAASznB,IAAI,EAAiB;IAAA,IAAhEonB,WAAW;MAAXA,WAAW,GAAG,KAAK;;IAAA,IAAEK,aAAa;MAAbA,aAAa,GAAG,IAAI;;IAAA,IAAEznB,IAAI;MAAJA,IAAI,GAAG,SAAS;;IAClF,IAAIgjB,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAE1B,IAAIqiB,SAAS,GAAGR,YAAY,GAAG,CAAC;IAChC,IAAIkB,aAAa,EAAE;MACjB,OAAOV,SAAS,GAAG/D,OAAO,CAACte,MAAM,IAAIse,OAAO,CAAC+D,SAAS,CAAC,CAAC/mB,IAAI,KAAKA,IAAI,EAAE;QACrE+mB,SAAS,EAAE;;;IAIf,IAAIA,SAAS,GAAG/D,OAAO,CAACte,MAAM,EAAE;MAC9B8hB,eAAe,CAACO,SAAS,CAAC;MAC1B,IAAIK,WAAW,EAAE;QACfC,gBAAgB,CAACN,SAAS,CAAC;;;GAGhC;EAED,IAAMY,OAAO,GAAG,SAAVA,OAAOA,GAAS;IACpB,IAAI3E,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAC1B8hB,eAAe,CAACxD,OAAO,CAACte,MAAM,GAAG,CAAC,CAAC;GACpC;EAED,IAAMkjB,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIle,MAAM,EAAEme,WAAW,EAAK;IACnD,IAAGA,WAAW,GAAG7E,OAAO,CAACte,MAAM,EAAE;IACjC,IAAMojB,QAAQ,MAAA5mB,MAAA,CAAO8hB,OAAO,CAAC;IAC7B8E,QAAQ,CAAC7b,MAAM,CAAC4b,WAAW,EAAE,CAAC,EAAEne,MAAM,CAAC;IACvC4c,UAAU,CAACwB,QAAQ,CAAC;IACpBtB,eAAe,CAACqB,WAAW,CAAC;GAC7B;EAED,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIre,MAAM,EAAEme,WAAW,EAAEG,sBAAsB,EAAUC,sBAAsB,EAAiB;IAAA,IAAvED,sBAAsB;MAAtBA,sBAAsB,GAAG,KAAK;;IAAA,IAAEC,sBAAsB;MAAtBA,sBAAsB,GAAGxmB,SAAS;;IAC3G,IAAI0kB,iBAAiB,IAAI,CAAC6B,sBAAsB,EAAE;MAChD,IAAME,aAAa,GAAGlF,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;QAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAKkC,MAAM,CAAClC,KAAK,CAAC;QAAC;MACxE,IAAI0gB,aAAa,KAAK,CAAC,CAAC,EAAE;QACxB,IAAID,sBAAsB,KAAKxmB,SAAS,GAAGwmB,sBAAsB,GAAG7B,gBAAgB,EAAE;UACpF,IAAM0B,QAAQ,MAAA5mB,MAAA,CAAO8hB,OAAO,CAAC;UAC7B8E,QAAQ,CAACI,aAAa,CAAC,GAAGxe,MAAM;UAChC4c,UAAU,CAACwB,QAAQ,CAAC;UACpBtB,eAAe,CAAC0B,aAAa,CAAC;SAC/B,MAAM;UACL1B,eAAe,CAAC0B,aAAa,CAAC;;QAEhC;;;IAIJ,IAAMC,cAAc,GAAG9U,QAAQ,EAAE;IACjC,IAAM+U,UAAU,GAAGD,cAAc,IAAIA,cAAc,CAACnoB,IAAI,KAAK,SAAS,GAAG,WAAW,GAAG,SAAS;IAEhG,IAAMqoB,qBAAqB,GAAAhhB,QAAA,KACtBqC,MAAM,EACL,CAACA,MAAM,CAAC1J,IAAI,IAAI;MAACA,IAAI,EAAEooB;KAAW,CACvC;IAED,IAAIP,WAAW,KAAKpmB,SAAS,EAAE;MAC7BmmB,mBAAmB,CAACS,qBAAqB,EAAER,WAAW,CAAC;KACxD,MAAM;MACLvB,UAAU,IAAAplB,MAAA,CAAK8hB,OAAO,GAAEqF,qBAAqB,EAAC,CAAC;MAC/C7B,eAAe,CAACxD,OAAO,CAACte,MAAM,CAAC;;GAElC;EAED,IAAM4jB,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,aAAa,EAAK;IACvC,IAAIvF,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAI1B,IAAI6hB,YAAY,KAAK,CAAC,IAAIgC,aAAa,CAACvoB,IAAI,KAAK,WAAW,EAAE;MAC5DuoB,aAAa,CAACvoB,IAAI,GAAG,SAAS;;IAGhC,IAAMwoB,YAAY,MAAAtnB,MAAA,CAAO8hB,OAAO,CAAC;IACjCwF,YAAY,CAACjC,YAAY,CAAC,GAAGgC,aAAa;IAC1CjC,UAAU,CAACkC,YAAY,CAAC;GACzB;EAED,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIF,aAAa,EAAK;IAC1C,IAAIvF,OAAO,CAACte,MAAM,KAAK,CAAC,EAAE;IAI1B,IAAI6hB,YAAY,KAAK,CAAC,IAAIgC,aAAa,CAACvoB,IAAI,KAAK,WAAW,EAAE;MAC5DuoB,aAAa,CAACvoB,IAAI,GAAG,SAAS;;IAGhC,IAAM2J,KAAK,GAAGqZ,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;MAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAK+gB,aAAa,CAAC/gB,KAAK,CAAC;MAAC;IACvE,IAAImC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAM6e,YAAY,MAAAtnB,MAAA,CAAO8hB,OAAO,CAAC;MACjCwF,YAAY,CAAC7e,KAAK,CAAC,GAAG4e,aAAa;MACnCjC,UAAU,CAACkC,YAAY,CAAC;;GAE3B;EAED,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGC,WAAW,EAAI;IACzC,IAAIA,WAAW,IAAI,CAAC,IAAIA,WAAW,GAAG3F,OAAO,CAACte,MAAM,EAAE;MACpD,IAAMojB,QAAQ,MAAA5mB,MAAA,CAAO8hB,OAAO,CAAC;MAC7B8E,QAAQ,CAAC7b,MAAM,CAAC0c,WAAW,EAAE,CAAC,CAAC;MAC/BrC,UAAU,CAACwB,QAAQ,CAAC;MAGpB,IAAIa,WAAW,GAAGpC,YAAY,EAAE;QAC9BC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;;MAGnC,IAAIA,YAAY,IAAIvD,OAAO,CAACte,MAAM,GAAG,CAAC,EAAE;QACtC8hB,eAAe,CAACxD,OAAO,CAACte,MAAM,GAAG,CAAC,CAAC;;;GAGxC;EAED,IAAMkkB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAGC,UAAU,EAAI;IACvC,IAAMF,WAAW,GAAG3F,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;MAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAKqhB,UAAU;MAAC;IACnEH,mBAAmB,CAACC,WAAW,CAAC;GACjC;EAED,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAGnf,KAAK,EAAI;IAC7B,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGqZ,OAAO,CAACte,MAAM,EAAE;MACxC,IAAMqkB,MAAM,MAAA7nB,MAAA,CAAO8hB,OAAO,CAAC;MAC3B+F,MAAM,CAAC9c,MAAM,CAACtC,KAAK,EAAE,CAAC,CAAC;MACvB2c,UAAU,CAACyC,MAAM,CAAC;MAClB,IAAIxC,YAAY,IAAIvD,OAAO,CAACte,MAAM,EAAE;QAClC8hB,eAAe,CAACxD,OAAO,CAACte,MAAM,GAAG,CAAC,GAAGse,OAAO,CAACte,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;;GAGjE;EAED,IAAMskB,YAAY,GAAG,SAAfA,YAAYA,CAAGloB,IAAI,EAAI;IAC3B,IAAM6I,KAAK,GAAGqZ,OAAO,CAAC0D,SAAS,CAAC,UAAAzO,CAAC;MAAA,OAAIA,CAAC,CAACzQ,KAAK,CAAC,KAAK1G,IAAI;MAAC;IACvD,IAAI6I,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBmf,aAAa,CAACnf,KAAK,CAAC;;GAEvB;EAED,IAAMsf,WAAW,GAAG,SAAdA,WAAWA,GAAS;IACxB,IAAIjG,OAAO,CAACte,MAAM,GAAG,CAAC,EAAE;MACtBokB,aAAa,CAAC,CAAC,CAAC;;GAEnB;EAED,IAAMI,UAAU,GAAG,SAAbA,UAAUA,GAAS;IACvB,IAAIlG,OAAO,CAACte,MAAM,GAAG,CAAC,EAAE;MACtBokB,aAAa,CAAC9F,OAAO,CAACte,MAAM,GAAG,CAAC,CAAC;;GAEpC;EAED,IAAMykB,SAAS,GAAG,SAAZA,SAASA,GAAS;IACtB7C,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,CAAC,CAAC;GACnB;EAED,IAAMa,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAG1d,KAAK,EAAI;IAChC,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGqZ,OAAO,CAACte,MAAM,GAAG,CAAC,EAAE;MAC5C,IAAMqkB,MAAM,MAAA7nB,MAAA,CAAO8hB,OAAO,CAAC;MAC3B+F,MAAM,CAAC9c,MAAM,CAACtC,KAAK,GAAG,CAAC,CAAC;MACxB2c,UAAU,CAACyC,MAAM,CAAC;MAClB,IAAIxC,YAAY,IAAIvD,OAAO,CAACte,MAAM,EAAE;QAClC8hB,eAAe,CAACxD,OAAO,CAACte,MAAM,GAAG,CAAC,GAAGse,OAAO,CAACte,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;;GAGjE;EAED,IAAM0kB,UAAU,GAAG,SAAbA,UAAUA,GAAS;IACvB,IAAMC,WAAW,GAAG,EAAE;IACtBrG,OAAO,CAAC1I,OAAO,CAAC,UAAC5Y,GAAG,EAAEiI,KAAK,EAAK;MAC9B,IAAM2f,KAAK,GAAG5nB,GAAG,CAAC8F,KAAK,CAAC;MACxB6hB,WAAW,CAACC,KAAK,CAAC,GAAG5nB,GAAG;KACzB,CAAC;IACF,OAAO2nB,WAAW;GACnB;EAED,OAAO;IACLrG,OAAO,EAAPA,OAAO;IACPuD,YAAY,EAAZA,YAAY;IACZngB,IAAI,EAAJA,IAAI;IACJhF,OAAO,EAAPA,OAAO;IACPiS,QAAQ,EAARA,QAAQ;IACR4T,SAAS,EAATA,SAAS;IACTC,IAAI,EAAJA,IAAI;IACJI,MAAM,EAANA,MAAM;IACNC,SAAS,EAATA,SAAS;IACT7C,MAAM,EAANA,MAAM;IACNiD,OAAO,EAAPA,OAAO;IACPI,YAAY,EAAZA,YAAY;IACZH,mBAAmB,EAAnBA,mBAAmB;IACnBkB,aAAa,EAAbA,aAAa;IACbE,YAAY,EAAZA,YAAY;IACZC,WAAW,EAAXA,WAAW;IACXC,UAAU,EAAVA,UAAU;IACVC,SAAS,EAATA,SAAS;IACT9B,gBAAgB,EAAhBA,gBAAgB;IAChBqB,mBAAmB,EAAnBA,mBAAmB;IACnBE,kBAAkB,EAAlBA,kBAAkB;IAClBN,aAAa,EAAbA,aAAa;IACbd,eAAe,EAAfA,eAAe;IACfiB,gBAAgB,EAAhBA,gBAAgB;IAChBf,eAAe,EAAfA,eAAe;IACf0B,UAAU,EAAVA;GACD;AACH,CAAC;;AC5SD,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAItpB,IAAI,EAAEa,IAAI,EAAEY,GAAG;EAAA,OAAK,UAAC8nB,KAAK,EAAK;IAMpD,IAAAxkB,IAAA,GAA6CwkB,KAAK,CAACC,WAAW,IAAI;QAAE/O,SAAS,EAAEjZ;OAAW;MAAlFiZ,SAAS,GAAA1V,IAAA,CAAT0V,SAAS;MAAEgP,SAAS,GAAA1kB,IAAA,CAAT0kB,SAAS;MAAAC,UAAA,GAAA3kB,IAAA,CAAG2E,KAAK;MAALA,KAAK,GAAAggB,UAAA,cAAG,CAAC,GAAAA,UAAA;IACxC,IAAM7hB,MAAM,GAAAT,QAAA,KAAQqiB,SAAS,EAAMhP,SAAS,IAAIA,SAAS,EAAE,IAAI,EAAE;MAAG/Q,KAAK,EAALA,KAAK;MAAEigB,YAAY,EAAEjgB,KAAK,GAAG;MAAG;IAQpG,IAAI,OAAO1J,IAAI,KAAK,QAAQ,EAAE;MAM1B,IAAM4pB,KAAK,GAAG,2BAA2B;MACzC,IAAMC,OAAO,GAAG7pB,IAAI,CAACqX,KAAK,CAACuS,KAAK,CAAC;MACjC,IAAIC,OAAO,EAAE;QACT,IAAI;UACAhjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjG,IAAI,EAAE,oBAAoB,EAAEgpB,OAAO,CAAC,CAAC,CAAC,CAAC;UAE9D,IAAMjoB,MAAM,GAAG,IAAIkoB,QAAQ,CAAC,MAAM,mBAAiBD,OAAO,CAAC,CAAC,CAAG,CAAC,CAAAziB,QAAA,KACzDS,MAAM,EACN0hB,KAAK,CACX,CAAC;UAEF1iB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAElF,MAAM,EAAE,0BAA0B,EAAEioB,OAAO,CAAC,CAAC,CAAC,CAAC;UAQtE,IAAI,OAAOjoB,MAAM,KAAK,UAAU,EAAE;YAC9B,OAAOA,MAAM,CAAAwF,QAAA,KACNS,MAAM,EACN0hB,KAAK,CACX,CAAC;;UAEN,OAAO3nB,MAAM;SAChB,CAAC,OAAOmH,KAAK,EAAE;UACZlC,OAAO,CAACC,GAAG,CAACiC,KAAK,EAAE,yBAAyB,CAAC;UAC7C,OAAO/I,IAAI;;;MAOnB,IAAIA,IAAI,KAAKwB,SAAS,IAAIxB,IAAI,CAACqG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC3CQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE9G,IAAI,EAAEypB,SAAS,EAAEtF,CAAC,CAAC5f,GAAG,CAACsD,MAAM,EAAE7H,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,OAAOqjB,CAAC,CAAC5f,GAAG,CAACsD,MAAM,EAAE7H,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC;;MAG3C,IAAId,IAAI,KAAKwB,SAAS,IAAIxB,IAAI,CAACqG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC3CQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9G,IAAI,CAAC6L,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC;QACpD,IAAI;UAGAhF,OAAO,CAACC,GAAG,CAACyiB,KAAK,EAAE,aAAa,CAAC;UAEjC,IAAM3nB,OAAM,GAAG,IAAIkoB,QAAQ,CAAC,MAAM,mBAAiB9pB,IAAI,CAAC6L,KAAK,CAAC,CAAC,CAAG,CAAC,CAAAzE,QAAA,KAC5DS,MAAM,EACN0hB,KAAK,CACX,CAAC;UAEF,IAAI,OAAO3nB,OAAM,KAAK,UAAU,EAAE;YAC9BiF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAElF,OAAM,EAAE,8BAA8B,CAAC;YAC9D,OAAOA,OAAM,CAAAwF,QAAA,KACNS,MAAM,EACN0hB,KAAK,CACX,CAAC;;UAEN,IAAI3nB,OAAM,aAANA,OAAM,eAANA,OAAM,CAAE4V,IAAI,EAAE;YACd3Q,OAAO,CAACC,GAAG,CAAC,SAAS,EAAElF,OAAM,EAAE,mCAAmC,CAAC;YACnE,OAAOA,OAAM,CAAC4V,IAAI,CAAC,UAAUuS,QAAQ,EAAE;cACnCljB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEijB,QAAQ,EAAE,8CAA8C,CAAC;cAChF,OAAOA,QAAQ;aAClB,CAAC;;UAENljB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAElF,OAAM,EAAE,2CAA2C,CAAC;UAC3E,OAAOA,OAAM;SAChB,CAAC,OAAOmH,KAAK,EAAE;UACZlC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjG,IAAI,EAAE,QAAQ,EAAEkI,KAAK,EAAE,sCAAsC,CAAC;;;MAI7F,IAAIihB,aAAa,GAAGhqB,IAAI;MAIxB,IAAIA,IAAI,KAAKwB,SAAS,IAAIxB,IAAI,CAACqG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC3C2jB,aAAa,GAAGA,aAAa,CAACzgB,OAAO,CAAC,eAAe,EAAE,UAAC4a,CAAC,EAAEtjB,IAAI,EAAK;UAEhE,IAAI;YACAgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqd,CAAC,EAAEtjB,IAAI,EAAE,2BAA2B,EAAEmpB,aAAa,CAAC;YAC3E,IAAMpoB,QAAM,GAAGqoB,IAAI,YAAU9F,CAAG,CAAC;YACjC,IAAI,OAAOviB,QAAM,KAAK,UAAU,EAAE;cAC9B,OAAOA,QAAM,CAACiG,MAAM,CAAC;;YAEzB,OAAOjG,QAAM;WAChB,CAAC,OAAOmH,KAAK,EAAE;YACZlC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiC,KAAK,EAAE,yBAAyB,CAAC;YACxD,OAAOob,CAAC;;SAEf,CAAC;;MAGN6F,aAAa,GAAGA,aAAa,CAACzgB,OAAO,CAAC,cAAc,EAAE,UAAC2gB,CAAC,EAAErpB,IAAI,EAAK;QAE/D,IAAMe,MAAM,GAAGuiB,CAAC,CAAC5f,GAAG,CAACsD,MAAM,EAAEhH,IAAI,CAAC,IAAI,EAAE;QAIxC,OAAOe,MAAM,KAAKJ,SAAS,IAAII,MAAM;OACxC,CAAC;MAEF,OAAOooB,aAAa;;IAIxB,OAAOhqB,IAAI;GACd;AAAA;;ACvID,IAAMmqB,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAInqB,IAAI,EAAEa,IAAI,EAAEY,GAAG;EAAA,OAAK,UAAC8nB,KAAK,EAAK;IACzD,IAAM1hB,MAAM,GAAAT,QAAA,KAAQ3F,GAAG,CAAC+nB,WAAW,CAAE;IACrC,IAAIxpB,IAAI,KAAKwB,SAAS,IAAIxB,IAAI,KAAK,IAAI,EAAE,OAAOA,IAAI;IAEpD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;MAE1B,IAAIA,IAAI,KAAKwB,SAAS,IAAIxB,IAAI,CAACqG,QAAQ,CAAC,IAAI,CAAC,EAAE;QAC3C,IAAI;UAEA,IAAMzE,MAAM,GAAGqoB,IAAI,qBAAmBjqB,IAAI,CAAC6L,KAAK,CAAC,CAAC,CAAG,CAAC;UACtD,IAAI,OAAOjK,MAAM,KAAK,UAAU,EAAE;YAC9B,OAAOA,MAAM,CAACiG,MAAM,CAAC;;UAEzB,OAAOjG,MAAM;SAChB,CAAC,OAAOmH,KAAK,EAAE;UACZlC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiC,KAAK,EAAE,sCAAsC,CAAC;;;MAI7E,IAAI/I,IAAI,KAAK,EAAE,EAAE;QAAA,IAAAoqB,KAAA;QACb,IAAMxoB,OAAM,IAAAwoB,KAAA,GAAGjG,CAAC,CAAC5f,GAAG,CAACsD,MAAM,EAAE7H,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,YAAAspB,KAAA,GAAIpqB,IAAI;QAEvD,OAAO4B,OAAM;;;IAIrB,OAAO5B,IAAI;GACd;AAAA;;AC7BD,IAAMqqB,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,aAAa,EAAEC,SAAS,EAAEC,eAAe,EAAK;EACjE,KAAK,IAAIxoB,GAAG,IAAIsoB,aAAa,EAAE;IAC3B,IAAIpqB,KAAK,GAAGoqB,aAAa,CAACtoB,GAAG,CAAC;IAE9B,IAAI,CAAA9B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEuqB,WAAW,MAAKpnB,MAAM,EAAE;MAC/B,IAAImnB,eAAe,IAAI,IAAI,IAAIA,eAAe,IAAI,EAAE,EAAE;QAClDD,SAAS,CAACvoB,GAAG,CAAC,GAAG9B,KAAK;OACzB,MAAM;QACH,IAAI8B,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAI,EAAE,EAAE;UAC1BuoB,SAAS,CAACC,eAAe,CAAC,GAAGtqB,KAAK;SACrC,MAAM;UACHqqB,SAAS,CAACC,eAAe,GAAG,GAAG,GAAGxoB,GAAG,CAAC,GAAG9B,KAAK;;;KAGzD,MAAM;MACH,IAAIsqB,eAAe,IAAI,IAAI,IAAIA,eAAe,IAAI,EAAE,EAAE;QAClDH,aAAa,CAACnqB,KAAK,EAAEqqB,SAAS,EAAEvoB,GAAG,CAAC;OACvC,MAAM;QACHqoB,aAAa,CAACnqB,KAAK,EAAEqqB,SAAS,EAAEC,eAAe,GAAG,GAAG,GAAGxoB,GAAG,CAAC;;;;AAI5E,CAAC;AAED,IAAM0oB,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,SAAS,EAAK;EACjC,IAAMJ,SAAS,GAAG,EAAE;EAEpBF,aAAa,CAACM,SAAS,EAAEJ,SAAS,EAAE,EAAE,CAAC;EAEvC,OAAOA,SAAS;AACpB,CAAC;;AC3BD,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAIhkB,IAAI,EAAEikB,WAAW,EAAOC,cAAc,EAAU;EAAA,IAA1CD,WAAW;IAAXA,WAAW,GAAG,EAAE;;EAAA,IAAEC,cAAc;IAAdA,cAAc,GAAG,EAAE;;EAC5D,IAAIlkB,IAAI,KAAKpF,SAAS,EAAE,OAAO,EAAE;EAEjC,IAAMupB,YAAY,GAAG;IACjBxmB,GAAG,WAAAA,IAAC7D,MAAM,EAAE2D,IAAI,EAAE2mB,QAAQ,EAAE;MACxB,IAAI,OAAOtqB,MAAM,CAAC2D,IAAI,CAAC,KAAK,QAAQ,IAAI3D,MAAM,CAAC2D,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3DwC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpG,MAAM,CAAC2D,IAAI,CAAC,EAAE,uBAAuB,CAAC;QAC7D,OAAO,IAAI4mB,KAAK,CAACvqB,MAAM,CAAC2D,IAAI,CAAC,EAAE0mB,YAAY,CAAC;OAC/C,MAAM;QACH,OAAOZ,oBAAoB,CACvBzpB,MAAM,CAAC2D,IAAI,CAAC,EACZA,IAAI,EACJ3D,MACJ,CAAC,CAAA0G,QAAA,KACM0jB,cAAc,CACpB,CAAC;;;GAGb;EAED,IAAMI,WAAW,GAAG,IAAID,KAAK,CAAA7jB,QAAA,KAElBsjB,aAAa,CAAAtjB,QAAA,KACTR,IAAI,CAACukB,MAAM,CAACvF,MAAM,CACxB,CAAC;IACF4D,WAAW,EAAApiB,QAAA,KAAOyjB,WAAW,EAAKjkB,IAAI;MAE1CmkB,YACJ,CAAC;EACD,OAAOG,WAAW;AACtB,CAAC;;AC9BD,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIxkB,IAAI,EAAEikB,WAAW,EAAOC,cAAc,EAAU;EAAA,IAA1CD,WAAW;IAAXA,WAAW,GAAG,EAAE;;EAAA,IAAEC,cAAc;IAAdA,cAAc,GAAG,EAAE;;EAC3D,IAAMO,UAAU,GAAGT,WAAW,CAAChkB,IAAI,EAAEikB,WAAW,EAAEC,cAAc,CAAC;EAEjE,IAAIQ,SAAS,GAAG,EAAE;EAClB,IAAMC,CAAC,GAAGloB,MAAM,CAACmB,IAAI,CAAC6mB,UAAU,CAAC,CAAC7f,GAAG,CAAC,UAACggB,EAAE,EAAK;IAC1C,IAAIA,EAAE,KAAK,aAAa,EAAE;IAC1BF,SAAS,GAAGnH,CAAC,CAAC3a,GAAG,CAAC8hB,SAAS,EAAEE,EAAE,EAAEH,UAAU,CAACG,EAAE,CAAC,CAAC;IAChD3kB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE0kB,EAAE,EAAE,gBAAgB,CAAC;GAC/C,CAAC;EAEF,OAAOrH,CAAC,CAACC,SAAS,CAACkH,SAAS,CAAC;AACjC,CAAC;;ACdD,SAASG,aAAaA,CAACN,MAAM,EAAEO,aAAa,EAAE9kB,IAAI,EAAE6iB,SAAS,EAAE;EAC3D,IAAIkC,aAAa,GAAGhW,OAAO,CAACC,OAAO,CAAChP,IAAI,CAAC;EAAC,IAAAglB,KAAA,YAAAA,MAAAC,YAAA,EAEP;IAC/B,IAAMC,MAAM,GAAGX,MAAM,CAACU,YAAY,CAAC;IACnC,IAAME,aAAa,GAAGL,aAAa,CAACG,YAAY,CAAC;IACjDF,aAAa,GAAGA,aAAa,CAACnU,IAAI,CAAC,UAAC5V,MAAM,EAAK;MAC3CiF,OAAO,CAACC,GAAG,CAAC+kB,YAAY,EAAEE,aAAa,EAAE,oBAAoB,EAAEnqB,MAAM,CAAC;MACtE,OAAOmqB,aAAa,CAACD,MAAM,CAAC,CAACrC,SAAS,CAAC,CAAC7nB,MAAM,CAAC;KAClD,CAAC;GACL;EAPD,KAAK,IAAMiqB,YAAY,IAAIV,MAAM;IAAAS,KAAA,CAAAC,YAAA;;EASjC,OAAOF,aAAa;AACxB;;ACbA,IAAMK,yBAAyB,GAAG;EAC9BC,KAAK,YAASrlB,IAAI,EAAE1G,KAAK;IAAA,IAAK;MAC1B,OAAAyV,OAAA,CAAAC,OAAA,CAAQ1V,KAAK,KAAK,EAAE,IAAI,CAAC0G,IAAI,CAAC1G,KAAK,CAACmG,QAAQ,CAACnG,KAAK,CAAC,IAAK,KAAK;KAChE,QAAA8X,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACDkU,EAAE,YAAStlB,IAAI,EAAE1G,KAAK;IAAA,IAAK;MACvB,OAAAyV,OAAA,CAAAC,OAAA,CAAO,CAAA1V,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEoL,QAAQ,EAAE,MAAK1E,IAAI,CAAC1G,KAAK;KAC1C,QAAA8X,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACDmU,gBAAgB,YAASvlB,IAAI,EAAE1G,KAAK;IAAA,IAAK;MACrC,OAAAyV,OAAA,CAAAC,OAAA,CAAQ1V,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC1G,KAAK,CAACmG,QAAQ,CAACnG,KAAK,CAAC,IAAK,KAAK;KAC/D,QAAA8X,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;AACL,CAAC;;ACyDM,IAAMoU,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIxoB,KAAK,EAAK;EAAA,IAAAyoB,aAAA;EAG7C,IAAA7I,UAAA,GAA0BH,cAAQ,CAACzf,KAAK,CAACqB,OAAO,CAAC9D,OAAO,IAAIyC,KAAK,CAACqB,OAAO,CAAC9D,OAAO,CAACyC,KAAK,CAAC/C,IAAI,CAAC,CAAC;IAAvF0G,KAAK,GAAAic,UAAA;IAAE8I,QAAQ,GAAA9I,UAAA;EAGtB3c,OAAO,CAACC,GAAG,CAAC,SAAS,EACjBlD,KAAK,CAAC/C,IAAI,EACV,4CAA4C,EAC5C0G,KAAK,EACL3D,KAAK,CAACkC,MAAM,EACZlC,KAAK,CAAC/C,IACV,CAAC;EAGD,IAAMkI,KAAK,GAAGnF,KAAK,CAACkC,MAAM,IAAIlC,KAAK,CAACkC,MAAM,CAAC3E,OAAO,MAAAkrB,aAAA,GAAIzoB,KAAK,CAACkC,MAAM,cAAAumB,aAAA,uBAAZA,aAAA,CAAclrB,OAAO,CAACyC,KAAK,CAAC/C,IAAI,CAAC;EAEvF,IAAA6iB,UAAA,GAA4BL,cAAQ,CAAC,EAAE,CAAC;EAIxC,IAAM9gB,QAAQ,GAAG,SAAXA,QAAQA,CAAIrC,KAAK,EAAK;IAGxB2G,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE5G,KAAK,CAAC;IAK3C0D,KAAK,CAAC2oB,eAAe,CAACrsB,KAAK,EAAE0D,KAAK,CAAC/C,IAAI,CAAC;IACxCyrB,QAAQ,CAAAllB,QAAA,KAAMG,KAAK;MAAErH,KAAK,EAAEA;MAAO,CAAC;GAEvC;EAUD,OAAO0D,KAAK,CAACqF,MAAM,CAAC;IAAE1G,QAAQ,EAARA,QAAQ;IAAErC,KAAK,EAAEqH,KAAK,CAACrH,KAAK;IAAEqH,KAAK,EAALA,KAAK;IAAEwB,KAAK,EAALA,KAAK;IAAEW,KAAK,EAAE9F,KAAK,CAAC8F;GAAO,CAAC;AAC3F,CAAC;AAED,AAEA,IAAM8iB,GAAG,GAAGhpB,cAAK,CAACipB,IAAI,CAClB,UAAC7oB,KAAK;EAAA,oBAAKJ,cAAA,CAAAkpB,aAAA,CAACN,sBAAsB,EAAKxoB,KAAQ,CAAC;AAAA,GAChD,UAAC+oB,SAAS,EAAEC,SAAS,EAAK;EAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,kBAAA;EAEtB,IAAMC,IAAI,GAAI,EAAAJ,iBAAA,GAAAF,SAAS,CAAC7mB,MAAM,cAAA+mB,iBAAA,uBAAhBA,iBAAA,CAAkB1rB,OAAO,OAAA2rB,kBAAA,GAAIH,SAAS,CAAC7mB,MAAM,cAAAgnB,kBAAA,uBAAhBA,kBAAA,CAAkB3rB,OAAO,CAACwrB,SAAS,CAAC9rB,IAAI,CAAC,KAAK,EAAE;EAC3F,IAAMqsB,IAAI,GAAG,EAAAH,iBAAA,GAAAH,SAAS,CAAC9mB,MAAM,cAAAinB,iBAAA,uBAAhBA,iBAAA,CAAkB5rB,OAAO,CAACyrB,SAAS,CAAC/rB,IAAI,CAAC,KAAI,EAAE;EAE5D,IAAMssB,MAAM,GAAGhJ,CAAC,CAACI,OAAO,CAAC0I,IAAI,EAAEC,IAAI,CAAC;EACpC,IAAME,SAAS,IAAAJ,kBAAA,GAAGJ,SAAS,CAAC9mB,MAAM,cAAAknB,kBAAA,uBAAhBA,kBAAA,CAAkB7rB,OAAO,CAACwrB,SAAS,CAAC9rB,IAAI,CAAC;EAE3DgG,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB6lB,SAAS,EACTC,SAAS,EACTD,SAAS,CAAC9rB,IAAI,GAAG,6CAA6C,EAC9DssB,MAAM,EACN,OAAO,EACPC,SAAS,EACTT,SAAS,CAAC9rB,IACd,CAAC;EAID,IAAIwsB,IAAI,CAACC,SAAS,CAACV,SAAS,CAAC,KAAKS,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,EAAE;IACzD,OAAO,IAAI;;EAEf,OAAO,KAAK;AAChB,CACJ,CAAC;AAED,AAKA,IAAMY,UAAU,GAAG,SAAbA,UAAUA,CACZvtB,IAAI,EACJusB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3nB,MAAM,EACN4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfnZ,UAAU,EACV+U,WAAW,EACXjL,QAAQ,EACP;EACD1X,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,EAAE,YAAY,CAAC;EAE5C,IAAMqF,CAAC,GAAGnL,IAAI,CACTqB,MAAM,CAAC,UAACvB,OAAO;IAAA,OAAKA,OAAO,CAACqF,OAAO;IAAC,CACpCqG,GAAG,CAAC,UAAC5E,IAAI,EAAE8C,KAAK,EAAK;IAGlB,IAII5D,MAAM,GASN0jB,WAAW,CATX1jB,MAAM;MACNb,OAAO,GAQPukB,WAAW,CARXvkB,OAAO;MACP6V,AAIAxN,aAAa,GAGbkc,WAAW,CAHXlc,aAAa;IAMjB,IAAMzM,IAAI,GAAG4T,UAAU,IAAOA,UAAU,SAAI7N,IAAI,CAAC/F,IAAM,IAAI+F,IAAI,CAAC/F,IAAI;IAEpE,IAAIe,MAAM,GAAG,IAAI;IACjB,IAAIisB,KAAK,GAAG,EAAE;IACd,IAAIjnB,IAAI,CAACknB,KAAK,EAAE;MACZD,KAAK,GAAGN,UAAU,CACd3mB,IAAI,CAACknB,KAAK,EACVvB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3nB,MAAM,EACN4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACf,CAAAhnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS,EAChCgoB,WAAW,AAEf,CAAC;;IAGL,IAAMuE,UAAU,GAAG;MACfjrB,SAAS,EAAE8D,IAAI,CAAC9D,SAAS,IAAI8D,IAAI,CAAC9D,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC9D,SAAS,IAAItB,SAAS;MACvFuB,SAAS,EAAE6D,IAAI,CAAC7D,SAAS,IAAI6D,IAAI,CAAC7D,SAAS,CAAC7C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC7D,SAAS,IAAIvB,SAAS;MACvFoB,GAAG,EAAEgE,IAAI,CAAChE,GAAG,IAAIgE,IAAI,CAAChE,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAChE,GAAG,IAAIpB,SAAS;MAC/DqB,GAAG,EAAE+D,IAAI,CAAC/D,GAAG,IAAI+D,IAAI,CAAC/D,GAAG,CAAC3C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC/D,GAAG,IAAIrB,SAAS;MAC/DwB,OAAO,EAAE4D,IAAI,CAAC5D,OAAO,IAAI4D,IAAI,CAAC5D,OAAO,CAAC9C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC5D,OAAO,IAAIxB,SAAS;MAC/EyB,QAAQ,EAAE2D,IAAI,CAAC3D,QAAQ,IAAI2D,IAAI,CAAC3D,QAAQ,CAAC/C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC3D,QAAQ,IAAIzB;KAC7E;IAODI,MAAM,gBACF4B,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;MACPhH,GAAG,EAAE4E,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;MACzDA,IAAI,EAAE+F,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;MAC1DoE,OAAO,EAAEA,OAAQ;MACjB2B,IAAI,EAAEA,IAAK;MAGXS,KAAK,EAAET,IAAI,CAAConB,IAAI,IAAID,UAAW;MAC/B9kB,MAAM,EAAE,SAAAA,OAAAlE,IAAA,EAAe;QAAA,IAAZwC,KAAK,GAAAxC,IAAA,CAALwC,KAAK;QA2BZ,IAAIX,IAAI,CAACtG,OAAO,EAAE;UAEd,IAAA2tB,cAAA,GAAmC3gB,aAAa,CAAC;cAC7CrI,OAAO,EAAPA,OAAO;cACPpE,IAAI,EAAEA;aACT,CAAC;YAHMsJ,MAAM,GAAA8jB,cAAA,CAAN9jB,MAAM;YAAEuB,MAAM,GAAAuiB,cAAA,CAANviB,MAAM;YAAE2C,MAAM,GAAA4f,cAAA,CAAN5f,MAAM;UAW9Bwf,KAAK,gBACDrqB,cAAA,CAAAkpB,aAAA,CAAAwB,QAAA,qBAWI1qB,cAAA,CAAAkpB,aAAA,aACKviB,MAAM,CAACqB,GAAG,CAAC,UAACggB,EAAE,EAAE9hB,KAAK;YAAA,oBAClBlG,cAAA,CAAAkpB,aAAA;cAAI1qB,GAAG,EAAEwpB,EAAE,CAACvF;eACPrf,IAAI,CAACknB,KAAK,CAACtiB,GAAG,CAAC,UAAC1L,OAAO,EAAEquB,IAAI;cAAA,oBAC1B3qB,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;gBACPnI,IAAI,EAAKA,IAAI,SAAI6I,KAAK,SAAI5J,OAAO,CAACe,IAAO;gBACzCoE,OAAO,EAAEA,OAAQ;gBACjBgE,MAAM,EAAE,SAAAA,OAAAiK,KAAA,EAAe;kBAAA,IAAZ3L,KAAK,GAAA2L,KAAA,CAAL3L,KAAK;kBACZ,IAAM6mB,SAAS,GAAGT,UAAU,CAAC7tB,OAAO,CAACC,IAAI,EAAE;oBACvCwH,KAAK,EAALA,KAAK;oBACLX,IAAI,EAAE9G,OAAO;oBACbe,IAAI,EAAKA,IAAI,SAAI6I,KAAK,SAAI5J,OAAO,CAACe,IAAM;oBACxCstB,IAAI,EAAJA,IAAI;oBACJP,eAAe,EAAfA,eAAe;oBACfC,KAAK,EAALA,KAAK;oBACLvgB,aAAa,EAAbA;mBACH,CAAC;kBACF,OAAO8gB,SAAS;;eAEvB,CAAC;aACL,CAAC,eACF5qB,cAAA,CAAAkpB,aAAA;cAAQ3sB,IAAI,EAAC,QAAQ;cAACsuB,OAAO,EAAE,SAAAA;gBAAA,OAAMhgB,MAAM,CAAC3E,KAAK,CAAC;;eAAE,GAAS,CAC7D,CAAC;WACR,CAED,CAAC,eAOLlG,cAAA,CAAAkpB,aAAA;YACI3sB,IAAI,EAAC,QAAQ;YAEbsuB,OAAO,EAAE,SAAAA;cAAA,OAAM3iB,MAAM,CAAC,EAAE,CAAC;;aAE5B,GAEO,CACV,CAAC;;QAIX,IAAM0iB,SAAS,GAAGT,UAAU,CAAC/mB,IAAI,CAAC7G,IAAI,EAAE;UACpCwH,KAAK,EAALA,KAAK;UACLX,IAAI,EAAJA,IAAI;UACJ/F,IAAI,EAAJA,IAAI;UACJ6I,KAAK,EAALA,KAAK;UACLkkB,eAAe,EAAfA,eAAe;UACfC,KAAK,EAALA,KAAK;UACLvgB,aAAa,EAAbA,aAAa;UACbvE,KAAK,EAAEjD,MAAM;UACb0jB,WAAW,EAAXA;SACH,CAAC;QACF,OAAO4E,SAAS;;KAGvB,CACJ;IAED,OAAOxsB,MAAM;GAChB,CAAC;EAEN,OAAOuJ,CAAC;AACZ,CAAC;AAED,AAOA,IAAMmjB,UAAU,GAAG,SAAbA,UAAUA,CACZtuB,IAAI,EACJusB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3nB,MAAM,EACN4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfnZ,UAAU,EACVxP,OAAO,EACPsZ,QAAQ,EACP;EACD1X,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,EAAE,YAAY,CAAC;EAE5C,IAAI9F,IAAI,KAAKwB,SAAS,EAAE,OAAO,IAAI;EACnC,IAAM2J,CAAC,GAAGnL,IAAI,CACTqB,MAAM,CAAC,UAACvB,OAAO;IAAA,OAAKA,OAAO,CAACqF,OAAO;IAAC,CACpCqG,GAAG,CAAC,UAAC5E,IAAI,EAAE8C,KAAK,EAAK;IAIlB,IAAM7I,IAAI,GAAG4T,UAAU,IAAOA,UAAU,SAAI7N,IAAI,CAAC/F,IAAM,IAAI+F,IAAI,CAAC/F,IAAI;IAEpE,IAAIe,MAAM,GAAG,IAAI;IACjB,IAAIisB,KAAK,GAAG,EAAE;IACd,IAAIjnB,IAAI,CAACknB,KAAK,EAAE;MACZD,KAAK,GAAGS,UAAU,CACd1nB,IAAI,CAACknB,KAAK,EACVvB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3nB,MAAM,EACN4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACf,CAAAhnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS,EAChCyD,OAAO,AAEX,CAAC;;IAQLrD,MAAM,gBACF4B,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;MACPhH,GAAG,EAAEnB,IAAK;MACVA,IAAI,EAAEA,IAAK;MACXoE,OAAO,EAAEA,OAAQ;MACjB2B,IAAI,EAAEA,IAAK;MAGXS,KAAK,EAAET,IAAI,CAAConB,IAAI,IAAI,EAAG;MACvB/kB,MAAM,EAAE,SAAAA,OAAA0T,KAAA,EAAe;QAAA,IAAZpV,KAAK,GAAAoV,KAAA,CAALpV,KAAK;QA6EZ,IAAM6mB,SAAS,GAAGT,UAAU,CAAC/mB,IAAI,CAAC7G,IAAI,EAAE;UACpCwH,KAAK,EAALA,KAAK;UACLX,IAAI,EAAJA,IAAI;UACJ/F,IAAI,EAAJA,IAAI;UACJ6I,KAAK,EAALA,KAAK;UACLkkB,eAAe,EAAfA;SACH,CAAC;QAEF,OAAOQ,SAAS;;KAGvB,CA8CJ;IAED,OAAOxsB,MAAM;GAChB,CAAC;EAEN,OAAOuJ,CAAC;AACZ,CAAC;AACD,IAAMojB,YAAY,GAAG/qB,cAAK,CAACipB,IAAI,CAAC,UAAA7oB,KAAK;EAAA,OAAI0qB,UAAU,CAAC1qB,KAAK,CAAC;AAAA,GACtD,UAAC+oB,SAAS,EAAEC,SAAS,EAAK;EACtB,IAAI,CAACzc,SAAS,CAACyc,SAAS,EAAED,SAAS,CAAC,EAAE;IAClC,OAAO,IAAI;;EAEf,OAAO,KAAK;AAChB,CACJ,CAAC;AACD4B,YAAY,CAAC9qB,WAAW,GAAG,YAAY;AACvC8qB,YAAY,CAACC,eAAe,GAAG,IAAI;AASnC,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIvmB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAEpuB,OAAO,EAAK;EAG1D,IAAMsB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAqI,SAAA;IAErD,IAAMC,QAAQ,GAAGtuB,OAAO,KAAKkB,SAAS,IAAIoF,IAAI,CAAC5E,GAAG,CAAC,IAAO0sB,MAAM,WAAM9nB,IAAI,CAAC5E,GAAG,CAAG;IAGjF,IAAM6sB,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAktB,SAAA,OAAAA,SAAA,CAELC,QAAQ,IAAAxnB,QAAA,KACFR,IAAI;MACP/F,IAAI,EAAE+tB,QAAQ;MACdC,KAAK,EAALA;OACIH,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAC,SAAA,GAGxB/nB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,cAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,EAAE4E,IAAI,CAACtG,OAAO,CAAC;GAEzG,EAAE,IAAIyd,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,IAAMktB,UAAU,GAAG,SAAbA,UAAUA,CAAI5mB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAK;EAG7C,IAAM9sB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAyI,SAAA;IAGrD,IAAMF,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAstB,SAAA,OAAAA,SAAA,CAELnoB,IAAI,CAAC5E,GAAG,CAAC,IAAAoF,QAAA,KACHR,IAAI;MACPioB,KAAK,EAALA,KAAK;MACL3uB,KAAK,EAAE;OACHwuB,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAK,SAAA,GAGxBnoB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,cAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,CAAC;GAE3F,EAAE,IAAI+b,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,AAmBA,IAAMotB,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAIlB,KAAK,EAAE9rB,GAAG,EAAK;EAG7C,IAAMitB,YAAY,GAAG,IAAIlR,GAAG,EAAE;EAE9B1a,MAAM,CAACmB,IAAI,CAACspB,KAAK,CAAC,CAACzT,OAAO,CAAC,UAACrY,GAAG,EAAK;IAChC,IAAI8rB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE;MACzB,IAAMC,eAAe,GAAGC,oBAAoB,CAACtB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE,OAAO,CAAC;MAM9E,IAAM1qB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAAC2qB,eAAe,CAAC;MACzC,KAAK,IAAIzlB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlF,IAAI,CAACC,MAAM,EAAEiF,KAAK,EAAE,EAAE;QAC9C,IAAM2lB,YAAY,GAAGF,eAAe,CAAC3qB,IAAI,CAACkF,KAAK,CAAC,CAAC;QACjDulB,YAAY,CAACzlB,GAAG,CAAC6lB,YAAY,CAACxuB,IAAI,KAAAI,MAAA,CACzBguB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAIouB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAK,EAAE,GAAAuG,QAAA;UACpFynB,KAAK,EAAEf,KAAK,CAAC9rB,GAAG,CAAC,CAAC6sB;WAAUQ,YAAY,GAC7C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAYD,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIlnB,KAAK,EAAElG,GAAG,EAAE9B,KAAK,EAAK;EAChD,IAAM+uB,YAAY,GAAG,EAAE;EACvB,IAAI,CAAC5uB,KAAK,CAACC,OAAO,CAAC4H,KAAK,CAAC,EAAE;EAC3B,IAAMonB,UAAU,GAAGpnB,KAAK,CAACjH,MAAM,EAAE;EACjC,OAAOquB,UAAU,CAACvtB,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAK;IAAA,IAAA2oB,SAAA;IACpC,OAAAnoB,QAAA,KACO3F,GAAG,GAAA8tB,SAAA,OAAAA,SAAA,CACL3oB,IAAI,CAAC5E,GAAG,CAAC,IAAI9B,KAAK,IAAI0G,IAAI,CAAC1G,KAAK,CAAC,IAAMA,KAAK,KAAKsB,SAAS,IAAIoF,IAAK,IAAI,EAAE,EAAA2oB,SAAA;GAEjF,EAAEN,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,WAAW,GAAG,CAAC;AACnB,IAAMC,aAAa,GAAGjsB,cAAK,CAACksB,UAAU,CAAC,UAAAnS,KAAA,EAKbjV,GAAG,EAAK;EAAA,IALQwlB,KAAK,GAAAvQ,KAAA,CAALuQ,KAAK;IAAA6B,qBAAA,GAAApS,KAAA,CAC3CqS,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAG3D,yBAAyB,GAAA2D,qBAAA;IAC9CjC,oBAAoB,GAAAnQ,KAAA,CAApBmQ,oBAAoB;IACpBC,UAAU,GAAApQ,KAAA,CAAVoQ,UAAU;IACVC,eAAe,GAAArQ,KAAA,CAAfqQ,eAAe;IAAAiC,mBAAA,GAAAtS,KAAA,CACfhJ,aAAa;IAAbA,aAAa,GAAAsb,mBAAA,cAAG,EAAE,GAAAA,mBAAA;EAElBhpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyN,aAAa,EAAE,eAAe,CAAC;EAEtD,IAAAub,QAAA,GAWI1N,OAAO,CAAC;MACRvR,IAAI,EAAE,UAAU;MAGhB0D,aAAa,EAAbA;KACH,CAAC;IAfEpN,QAAQ,GAAA2oB,QAAA,CAAR3oB,QAAQ;IACRmZ,YAAY,GAAAwP,QAAA,CAAZxP,YAAY;IACZtR,KAAK,GAAA8gB,QAAA,CAAL9gB,KAAK;IACQlJ,MAAM,GAAAgqB,QAAA,CAAnB9rB,SAAS,CAAI8B,MAAM;IACnBb,OAAO,GAAA6qB,QAAA,CAAP7qB,OAAO;IACP6V,OAAO,GAAAgV,QAAA,CAAPhV,OAAO;IACPoH,QAAQ,GAAA4N,QAAA,CAAR5N,QAAQ;IACRzH,SAAS,GAAAqV,QAAA,CAATrV,SAAS;IACT8D,QAAQ,GAAAuR,QAAA,CAARvR,QAAQ;IACRO,iBAAiB,GAAAgR,QAAA,CAAjBhR,iBAAiB;EAQrB,IAAM0K,WAAW,GAAG;IAChBriB,QAAQ,EAARA,QAAQ;IACRmZ,YAAY,EAAZA,YAAY;IACZtR,KAAK,EAALA,KAAK;IACLlJ,MAAM,EAANA,MAAM;IACNb,OAAO,EAAPA,OAAO;IACP6V,OAAO,EAAPA,OAAO;IACPoH,QAAQ,EAARA,QAAQ;IACRzH,SAAS,EAATA,SAAS;IACT8D,QAAQ,EAARA,QAAQ;IACRjR,aAAa,EAAbA,aAAa;IACboV,QAAQ,EAARA,QAAQ;IACR5D,iBAAiB,EAAjBA;GACH;EAED,IAAMiR,YAAY,GAAGvsB,cAAK,CAACwsB,MAAM,EAAE;EAEnC,IAAMC,kBAAkB,GAAGzsB,cAAK,CAACwsB,MAAM,EAAE;EACzC,IAAME,iBAAiB,GAAG1sB,cAAK,CAACwsB,MAAM,EAAE;EAGxC,IAAApM,UAAA,GAAwBP,cAAQ,EAAE;IAA3BrjB,IAAI,GAAA4jB,UAAA;IAAEuM,OAAO,GAAAvM,UAAA;EAEpBpgB,cAAK,CAACgjB,SAAS,CAAC,YAAM;IAClB,IAAIsH,KAAK,KAAKtsB,SAAS,EAAE;IAGzBuuB,YAAY,CAAC5uB,OAAO,GAAGstB,cAAc,CAACX,KAAK,EAAE,MAAM,CAAC;IAEpDmC,kBAAkB,CAAC9uB,OAAO,GAAG6tB,wBAAwB,CAACe,YAAY,CAAC5uB,OAAO,CAAC;IAC3E0F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEipB,YAAY,EAAE,0BAA0B,CAAC;IAChElpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmpB,kBAAkB,EAAE,0BAA0B,KAAAhvB,MAAA,CAAMgvB,kBAAkB,CAAC9uB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,IAAMuN,YAAY,GAAG/C,KAAK,WAAQ9O,KAAK,EAAA0e,KAAA;MAAA,IAAI/d,IAAI,GAAA+d,KAAA,CAAJ/d,IAAI;QAAEd,IAAI,GAAA6e,KAAA,CAAJ7e,IAAI;MAAA,IAAO;QAAA,OAAA4V,OAAA,CAAAC,OAAA;UAAA,IACpDqa,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;YAEpCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,wCAAwC,EAAE5G,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE8tB,KAAK,CAAC;YAAA,OAAAnY,OAAA,CAAAC,OAAA,CAC3Ewa,iBAAiB,CAACvvB,IAAI,EAAEX,KAAK,CAACW,IAAI,CAAC,EAAEitB,KAAK,CAAC,EAAAtW,IAAA,WAAA0H,KAAA;cAAA,IAAzD3S,CAAC,GAAA2S,KAAA;gBAAE1S,CAAC,GAAA0S,KAAA;cAAA,IACP,CAAC/O,SAAS,CAACnQ,IAAI,EAAEwM,CAAC,CAAC,IAAID,CAAC;gBACxB4jB,OAAO,IAAAlvB,MAAA,CAAKuL,CAAC,CAAC,CAAC;;;;;OAM1B,QAAAwL,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;MAAC;IAEFmY,OAAO,CAACrC,KAAK,CAAC;GACjB,EAAEA,KAAK,CAAC;EAgBT,IAAMuC,WAAW,GAAG,SAAdA,WAAWA,GAAS;IACtBN,YAAY,CAAC5uB,OAAO,GAAG2tB,UAAU,CAAChB,KAAK,EAAE,MAAM,CAAC;IAChDqC,OAAO,CAACrC,KAAK,CAAC;GACjB;EAOD,IAAMwC,YAAY,YAAZA,YAAYA;IAAA,IAAe;MAE7B,IAAIjtB,MAAM,CAACmB,IAAI,CAACsB,MAAM,CAAC,CAACrB,MAAM,GAAG,CAAC,EAAE,OAAAkR,OAAA,CAAAC,OAAA,CAAO,KAAK;MAAC,OAAAD,OAAA,CAAAC,OAAA,CAC5BkF,OAAO,EAAE,EAAAtD,IAAA,WAAxB5V,MAAM;QACZiF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAElF,MAAM,EAAEkE,MAAM,CAAC;QAAA,IAC1ElE,MAAM,KAAK,IAAI;UAAA,OAAA+T,OAAA,CAAAC,OAAA,CACF6E,SAAS,EAAE;;UAExB,OAAO,KAAK;;;KAEnB,QAAAzC,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED1P,GAAG,CAACnH,OAAO,GAAG;IACVsZ,SAAS,EAAE6V,YAAY;IACvBD,WAAW,EAAEA;GAChB;EAED,IAAME,cAAc,YAAdA,cAAcA,CAAU1vB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAElD,IAAM4uB,aAAa,GAAGT,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC;MAChD,IAAI4vB,CAAC,GAAG7uB,MAAM;MACd,IAAM8uB,cAAc,GAAGtpB,QAAA,KAAKtB,MAAM,CAAC3E,OAAO,KAAM,EAAE;MAClD,IAAMwvB,SAAS,GAAG7qB,MAAM,CAAC3E,OAAO,IAAI,EAAE;MAEtC,IAAI4H,KAAK,GAAG,KAAK;MAGjB,IAAI7I,KAAK,KAAK,EAAE,EAAE;QACd,IAAM6I,MAAK,GAAG7I,KAAK,KAAK,KAAK;QAC7B,IAAI6I,MAAK,EAAE;UACP4nB,SAAS,CAAC9vB,IAAI,CAAC,GAAG;YACdkI,KAAK,EAALA,MAAK;YACL6nB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;WACjE;SACJ,MAAM;UACH,OAAOD,SAAS,CAAC9vB,IAAI,CAAC;;OAI7B,MAAM;QACH,OAAO8vB,SAAS,CAAC9vB,IAAI,CAAC;;MAI1BiF,MAAM,CAAC3E,OAAO,GAAAiG,QAAA,KAAQupB,SAAS,CAAE;MAEjC9pB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,EAAE,aAAa,EAAE6qB,SAAU,CAAC;MACzD,IAAI5nB,KAAK,CAAC5H,OAAO,KAAKuvB,cAAc,EAAE;MAetC,OAAA/a,OAAA,CAAAC,OAAA,CAAO,CAAC,CAACuO,CAAC,CAACI,OAAO,CAACmM,cAAc,EAAEC,SAAS,CAAC,KAAA1vB,MAAA,CAAMwvB,CAAC,GAAGE,SAAS,CAAC9vB,IAAI,CAAC,CAAC;KAC1E,QAAAmX,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMuU,eAAe,YAAfA,eAAeA,CAAUrsB,KAAK,EAAEW,IAAI;IAAA,IAAK;MAG3CkvB,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;MAAA,IAAA2wB,qBAAA,GAGjBd,YAAY,CAAC5uB,OAAO;MAAA,OAAAwU,OAAA,CAAAC,OAAA,CAAqB0a,YAAY,EAAE,EAAA9Y,IAAA,WAAAsZ,aAAA;QAA9EjqB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAA+pB,qBAAA,EAAwB,WAAW,EAAAC,aAAsB,CAAC;QAAA,OAAAnb,OAAA,CAAAC,OAAA,CAG3B2a,cAAc,CAAC1vB,IAAI,EAAEX,KAAK,KAAAe,MAAA,CAAMjB,IAAI,CAAC,CAAC,EAAAwX,IAAA,WAAAuZ,KAAA;UAAA,IAAnFC,oBAAoB,GAAAD,KAAA;YAAEnvB,MAAM,GAAAmvB,KAAA;YAAEhoB,KAAK,GAAAgoB,KAAA;UAAA,OAAApb,OAAA,CAAAC,OAAA,CACQwa,iBAAiB,CAACvvB,IAAI,EAAEX,KAAK,EAAE0B,MAAM,CAAC,EAAA4V,IAAA,WAAA2J,KAAA;YAAA,IAAjF8P,sBAAsB,GAAA9P,KAAA;cAAE+P,SAAS,GAAA/P,KAAA;YAAA,IAGpC6P,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI;cAGhEpqB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5BkqB,oBAAoB,EACpBC,sBAAsB,EACtBnrB,MACJ,CAAC;cACDqqB,OAAO,IAAAlvB,MAAA,CAAKiwB,SAAS,CAAC,CAAC;;;;;KAM9B,QAAAlZ,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMoY,iBAAiB,YAAjBA,iBAAiBA,CAAUvvB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAAA,IAAA8V,MAAA,YAAAA;QA0CrD,OAAO,CAACyZ,OAAO,KAAAlwB,MAAA,CAAMwvB,CAAC,EAAE;;MAxCxB,IAAMW,YAAY,GAAGnB,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;MAEzDgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9G,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEkvB,YAAY,CAAC5uB,OAAO,EAAEiwB,YAAY,EAAEnB,kBAAkB,CAAC9uB,OAAO,CAAC;MAM7H,IAAIsvB,CAAC,MAAAxvB,MAAA,CAAOW,MAAM,CAAC;MAEnB,IAAIuvB,OAAO,GAAG,KAAK;MAAA,IAAAtZ,KAAA;QAAA,IAEfuZ,YAAY,KAAK5vB,SAAS;UAAA,OAAAmU,OAAA,CAAAC,OAAA,CAQpBwb,YAAY,CAAC5lB,GAAG,WAAQ5E,IAAI;YAAA,IAAK;cAAA,IAAA0O,MAAA,YAAAA,OAE7B+b,OAAO;gBAAA,IAAA/Z,MAAA;kBAAA,IAET6M,CAAC,CAAC5f,GAAG,CAAC;oBAAEgI,CAAC,EAAEkkB;mBAAG,QAAM7pB,IAAI,CAACioB,KAAK,aAAU,CAAC,KAAKwC,OAAO;oBAErDZ,CAAC,GAAGtM,CAAC,CAAC3a,GAAG,CAAC;sBAAE+C,CAAC,EAAEkkB;qBAAG,QAAM7pB,IAAI,CAACioB,KAAK,eAAYwC,OAAO,CAAC,CAAC9kB,CAAC;oBACxD4kB,OAAO,GAAG,IAAI;oBAAA,OAAAxb,OAAA,CAAAC,OAAA,CAGJuO,CAAC,CAAC5f,GAAG,CAAC;sBAAEgI,CAAC,EAAEkkB;qBAAG,QAAM7pB,IAAI,CAACioB,KAAK,aAAU,CAAC,EAAArX,IAAA,WAAA4S,KAAA;sBAAA,OAAAzU,OAAA,CAAAC,OAAA,CACzCyb,OAAO,EAAA7Z,IAAA,WAAA8Z,QAAA;wBAHjBzqB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,QAAQ,EAAAsjB,KAAA,EAAAkH,QAAA,EAGRF,YAAY,EACZD,OACJ,CAAC;;;;;gBAAA,IAAA7Z,MAAA,IAAAA,MAAA,CAAAE,IAAA,SAAAF,MAAA,CAAAE,IAAA;;cAbL,IAAM+Z,SAAS,GAAGrxB,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;cAAC,IAAAsxB,UAAA,GAC1B5qB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7G,IAAI;cAAA,OAAA4V,OAAA,CAAAC,OAAA,CAAA4b,UAAA,GAAA7b,OAAA,CAAAC,OAAA,CAAWga,kBAAkB,CAAChpB,IAAI,CAAC7G,IAAI,CAAC,CAAC6G,IAAI,EAAE2qB,SAAS,CAAC,EAAA/Z,IAAA,CAAAlC,MAAA,IAAAA,MAAA,CAAAkc,UAAA;aAgBtF,QAAAxZ,CAAA;cAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;YAAC,EAAAR,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAiC,KAAA,IAAAA,KAAA,CAAAL,IAAA,GAAAK,KAAA,CAAAL,IAAA,CAAAE,MAAA,IAAAA,MAAA,CAAAG,KAAA;KAGT,QAAAG,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAEDnR,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE0oB,WAAW,EAAE,CAAC;EACpD,OACKxvB,IAAI,IACDutB,UAAU,CACNvtB,IAAI,EACJusB,eAAe,EACfwD,YAAY,EACZtV,SAAS,EAAArT,QAAA,KACJtB,MAAM,GACX4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfpsB,SAAS,EACTgoB,WAAW,AAEf,CAAC,IAEL,IAAI;AAEZ,CAAC,CAAC;AAEFiG,aAAa,CAACjB,eAAe,GAAG,IAAI;AACpCiB,aAAa,CAAChsB,WAAW,GAAG,eAAe;;AC17B3C,IAAMguB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI5wB,IAAI,EAAEb,IAAI,EAAA+E,IAAA,EAajC;EAAA,IAbqCwnB,eAAe,GAAAxnB,IAAA,CAAfwnB,eAAe;IACrDwD,YAAY,GAAAhrB,IAAA,CAAZgrB,YAAY;IACZtV,SAAS,GAAA1V,IAAA,CAAT0V,SAAS;IACT3U,MAAM,GAAAf,IAAA,CAANe,MAAM;IACN4nB,oBAAoB,GAAA3oB,IAAA,CAApB2oB,oBAAoB;IACpBC,UAAU,GAAA5oB,IAAA,CAAV4oB,UAAU;IACVC,eAAe,GAAA7oB,IAAA,CAAf6oB,eAAe;IACfpsB,WAAS,GAAAuD,IAAA,CAATvD,SAAS;IACTgoB,WAAW,GAAAzkB,IAAA,CAAXykB,WAAW;IACX9f,KAAK,GAAA3E,IAAA,CAAL2E,KAAK;IACLglB,MAAM,GAAA3pB,IAAA,CAAN2pB,MAAM;IAAAgD,cAAA,GAAA3sB,IAAA,CACN4sB,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAGlwB,WAAS,GAAAkwB,cAAA;EAIrB,IAAME,iBAAiB,GAAAxqB,QAAA,KAAOpH,IAAI,CAACa,IAAI,CAAC;IAAE8wB,SAAS,EAATA;IAAW;EAIrD,IAAIC,iBAAiB,KAAKpwB,WAAS,EAAE,OAAO,IAAI;EAEhD,IAAI,CAAAowB,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEzsB,OAAO,MAAK,KAAK,EAAE,OAAO,IAAI;EACrD,OAAO0sB,mBAAmB,CACtBD,iBAAiB,EACjBrF,eAAe,EACfwD,YAAY,EACZtV,SAAS,EAAArT,QAAA,KACJtB,MAAM,GACX4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfpsB,WAAS,EACTgoB,WAAW,EACX9f,KAAK,EACL1J,IAAI,EACJ0uB,MACJ,CAAC;AACL,CAAC;AAED,IAAMmD,mBAAmB,GAAG,SAAtBA,mBAAmBA,CACrBjrB,IAAI,EACJ2lB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACRqE,OAAO,EACPpE,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfnZ,UAAU,EACV+U,WAAW,EACX9f,KAAK,EACL1J,IAAI,EACJ0uB,MAAM,EACL;EACD7nB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgrB,OAAO,EAAE,YAAY,CAAC;EAO7C,IAIIhsB,MAAM,GASN0jB,WAAW,CATX1jB,MAAM;IACNb,OAAO,GAQPukB,WAAW,CARXvkB,OAAO;IACP6V,AAIAxN,aAAa,GAGbkc,WAAW,CAHXlc,aAAa;EAMjB,IAAMzM,IAAI,GAAG4T,UAAU,IAAOA,UAAU,SAAI7N,IAAI,CAAC/F,IAAM,IAAI+F,IAAI,CAAC+qB,SAAS,IAAI/qB,IAAI,CAAC+qB,SAAS,IAAI/qB,IAAI,CAAC/F,IAAI;EAExG,IAAIe,MAAM,GAAG,IAAI;EACjB,IAAIisB,KAAK,GAAG,EAAE;EACd,IAAIjnB,IAAI,CAACknB,KAAK,EAAE;IACZD,KAAK,GAAGjnB,IAAI,CAACknB,KAAK,CAACtiB,GAAG,CAAC,UAAC3K,IAAI,EAACkxB,GAAG;MAAA,OAAKN,kBAAkB,CAAC5wB,IAAI,EAAEb,IAAI,EAAE;QAChEusB,eAAe,EAAfA,eAAe;QACfiB,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACR3nB,MAAM,EAANA,MAAM;QACN4nB,oBAAoB,EAApBA,oBAAoB;QACpBC,UAAU,EAAVA,UAAU;QACVC,eAAe,EAAfA,eAAe;QACfnZ,UAAU,EAAE,CAAA7N,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS;QAC5CgoB,WAAW,EAAXA,WAAW;QACX9f,KAAK,EAAEqoB,GAAG;QACV/xB,IAAI,EAAJA,IAAI;QACJ0uB,MAAM,EAAE;UAAE7tB,IAAI,EAAE+F,IAAI,CAAC/F,IAAI;UAAE6I,KAAK,EAALA,KAAK;UAAEuc,EAAE,EAAErf,IAAI,CAACqf;SAAI;QAC/C2I,QAAQ,EAAE/tB;OACb,CAAC;MAAC;;EAiBP,IAAMktB,UAAU,GAAG;IACfjrB,SAAS,EAAE8D,IAAI,CAAC9D,SAAS,IAAI8D,IAAI,CAAC9D,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC9D,SAAS,IAAItB,SAAS;IACvFuB,SAAS,EAAE6D,IAAI,CAAC7D,SAAS,IAAI6D,IAAI,CAAC7D,SAAS,CAAC7C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC7D,SAAS,IAAIvB,SAAS;IACvFoB,GAAG,EAAEgE,IAAI,CAAChE,GAAG,IAAIgE,IAAI,CAAChE,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAChE,GAAG,IAAIpB,SAAS;IAC/DqB,GAAG,EAAE+D,IAAI,CAAC/D,GAAG,IAAI+D,IAAI,CAAC/D,GAAG,CAAC3C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC/D,GAAG,IAAIrB,SAAS;IAC/DwB,OAAO,EAAE4D,IAAI,CAAC5D,OAAO,IAAI4D,IAAI,CAAC5D,OAAO,CAAC9C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC5D,OAAO,IAAIxB,SAAS;IAC/EyB,QAAQ,EAAE2D,IAAI,CAAC3D,QAAQ,IAAI2D,IAAI,CAAC3D,QAAQ,CAAC/C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC3D,QAAQ,IAAIzB;GAC7E;EAODI,MAAM,gBACF4B,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;IACPhH,GAAG,EAAE4E,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;IACzDA,IAAI,EAAE+F,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;IAC1DoE,OAAO,EAAEA,OAAQ;IACjB2B,IAAI,EAAEA,IAAK;IACXS,KAAK,EAAET,IAAI,CAAConB,IAAI,IAAID,UAAW;IAC/B9kB,MAAM,EAAE,SAAAA,OAAAiK,KAAA,EAAe;MAAA,IAAZ3L,KAAK,GAAA2L,KAAA,CAAL3L,KAAK;MAEZ,IAAIX,IAAI,CAACtG,OAAO,EAAE;QACduG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjG,IAAI,EAAC+F,IAAI,CAACknB,KAAK,EAAE,eAAe,CAAC;QACxD,IAAAG,cAAA,GAAmC3gB,aAAa,CAAC;YAC7CrI,OAAO,EAAPA,OAAO;YACPpE,IAAI,EAAEA;WACT,CAAC;UAHMsJ,MAAM,GAAA8jB,cAAA,CAAN9jB,MAAM;UAAEuB,MAAM,GAAAuiB,cAAA,CAANviB,MAAM;UAAE2C,MAAM,GAAA4f,cAAA,CAAN5f,MAAM;QAK9Bwf,KAAK,gBACDrqB,cAAA,CAAAkpB,aAAA,CAAAwB,QAAA,qBACI1qB,cAAA,CAAAkpB,aAAA,aACKviB,MAAM,CAACqB,GAAG,CAAC,UAACggB,EAAE,EAAE9hB,KAAK;UAAA,oBAClBlG,cAAA,CAAAkpB,aAAA;YAAI1qB,GAAG,EAAEwpB,EAAE,CAACvF;aACPrf,IAAI,CAACknB,KAAK,CAACtiB,GAAG,CAAC,UAAC1L,OAAO,EAAEquB,IAAI;YAAA,oBAC1B3qB,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;cACPhH,GAAG,EAAKnB,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe,IAAO;cAC9CA,IAAI,EAAKA,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe,IAAO;cAC/CoE,OAAO,EAAEA,OAAQ;cACjBgE,MAAM,EAAE,SAAAA,OAAA0T,KAAA,EAAe;gBACnB9V,OAAO,CAACC,GAAG,CAAC,SAAS,EAAKjG,IAAI,SAAI6I,KAAK,SAAI5J,OAAO,EAAG,+BAA+B,CAAC;gBACrF,OAAO2xB,kBAAkB,CAAC3xB,OAAO,EAAEE,IAAI,EAAE;kBACrCusB,eAAe,EAAfA,eAAe;kBACfiB,SAAS,EAATA,SAAS;kBACTC,QAAQ,EAARA,QAAQ;kBACR3nB,MAAM,EAANA,MAAM;kBACN4nB,oBAAoB,EAApBA,oBAAoB;kBACpBC,UAAU,EAAVA,UAAU;kBACVC,eAAe,EAAfA,eAAe;kBACfnZ,UAAU,EAAE,CAAA7N,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS;kBAC5CgoB,WAAW,EAAXA,WAAW;kBACX9f,KAAK,EAAEA,KAAK;kBACZ1J,IAAI,EAAJA,IAAI;kBACJ0uB,MAAM,EAAE;oBAAE7tB,IAAI,EAAE+F,IAAI,CAAC/F,IAAI;oBAAE6I,KAAK,EAALA,KAAK;oBAAEuc,EAAE,EAAErf,IAAI,CAACqf;mBAAI;kBAC/C0L,SAAS,EAAK9wB,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe;iBAChD,CAAC;;aAaT,CAAC;WACL,CAAC,eACF2C,cAAA,CAAAkpB,aAAA;YAAQ3sB,IAAI,EAAC,QAAQ;YAACsuB,OAAO,EAAE,SAAAA;cAAA,OAAMhgB,MAAM,CAAC3E,KAAK,CAAC;;aAAE,GAAS,CAC7D,CAAC;SACR,CAED,CAAC,eAOLlG,cAAA,CAAAkpB,aAAA;UACI3sB,IAAI,EAAC,QAAQ;UAEbsuB,OAAO,EAAE,SAAAA;YAAA,OAAM3iB,MAAM,CAAC,EAAE,CAAC;;WAE5B,GAEO,CACV,CAAC;;MAGX,IAAM0iB,SAAS,GAAGT,UAAU,CAAC/mB,IAAI,CAAC7G,IAAI,EAAE;QACpCwH,KAAK,EAALA,KAAK;QACLX,IAAI,EAAJA,IAAI;QACJ/F,IAAI,EAAJA,IAAI;QACJ6I,KAAK,EAALA,KAAK;QACLkkB,eAAe,EAAfA,eAAe;QACfC,KAAK,EAALA,KAAK;QACLvgB,aAAa,EAAbA,aAAa;QACbvE,KAAK,EAAEjD,MAAM;QACb0jB,WAAW,EAAXA,WAAW;QACXkF,MAAM,EAANA;OACH,CAAC;MAEF,OAAON,SAAS;;GAGvB,CACJ;EAKD,OAAOxsB,MAAM;AACjB,CAAC;AAED,AAmLA,IAAM6sB,gBAAc,GAAG,SAAjBA,cAAcA,CAAIvmB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAEpuB,OAAO,EAAK;EAG1D,IAAMsB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAqI,SAAA;IAErD,IAAMC,QAAQ,GAAGtuB,OAAO,KAAKkB,SAAS,IAAIoF,IAAI,CAAC5E,GAAG,CAAC,IAAO0sB,MAAM,WAAM9nB,IAAI,CAAC5E,GAAG,CAAG;IAGjF,IAAM6sB,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAktB,SAAA,OAAAA,SAAA,CAELC,QAAQ,IAAAxnB,QAAA,KACFR,IAAI;MACP/F,IAAI,EAAE+tB,QAAQ;MACdC,KAAK,EAALA;OACIH,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAC,SAAA,GAGxB/nB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,cAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,EAAE4E,IAAI,CAACtG,OAAO,CAAC;GAEzG,EAAE,IAAIyd,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,IAAMktB,YAAU,GAAG,SAAbA,UAAUA,CAAI5mB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAK;EAG7C,IAAM9sB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAyI,SAAA;IAGrD,IAAMF,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAstB,SAAA,OAAAA,SAAA,CAELnoB,IAAI,CAAC5E,GAAG,CAAC,IAAAoF,QAAA,KACHR,IAAI;MACPioB,KAAK,EAALA,KAAK;MACL3uB,KAAK,EAAE;OACHwuB,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAK,SAAA,GAGxBnoB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,gBAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,CAAC;GAE3F,EAAE,IAAI+b,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,AAmBA,IAAMotB,0BAAwB,GAAG,SAA3BA,wBAAwBA,CAAIlB,KAAK,EAAE9rB,GAAG,EAAK;EAG7C,IAAMitB,YAAY,GAAG,IAAIlR,GAAG,EAAE;EAE9B1a,MAAM,CAACmB,IAAI,CAACspB,KAAK,CAAC,CAACzT,OAAO,CAAC,UAACrY,GAAG,EAAK;IAChC,IAAI8rB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE;MACzB,IAAMC,eAAe,GAAGC,sBAAoB,CAACtB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE,OAAO,CAAC;MAM9E,IAAM1qB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAAC2qB,eAAe,CAAC;MACzC,KAAK,IAAIzlB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlF,IAAI,CAACC,MAAM,EAAEiF,KAAK,EAAE,EAAE;QAC9C,IAAM2lB,YAAY,GAAGF,eAAe,CAAC3qB,IAAI,CAACkF,KAAK,CAAC,CAAC;QACjD7C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgnB,KAAK,CAAC9rB,GAAG,CAAC,EAAE,YAAY,CAAC;QAChDitB,YAAY,CAACzlB,GAAG,CAAC6lB,YAAY,CAACxuB,IAAI,KAAAI,MAAA,CACzBguB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAIouB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAK,EAAE,GAAAuG,QAAA;UACpFynB,KAAK,EAAEf,KAAK,CAAC9rB,GAAG,CAAC,CAACikB;WAAOoJ,YAAY,GAC1C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAED,IAAMG,sBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIlnB,KAAK,EAAElG,GAAG,EAAE9B,KAAK,EAAK;EAChD,IAAM+uB,YAAY,GAAG,EAAE;EACvB,IAAI,CAAC5uB,KAAK,CAACC,OAAO,CAAC4H,KAAK,CAAC,EAAE;EAC3B,IAAMonB,UAAU,GAAGpnB,KAAK,CAACjH,MAAM,EAAE;EACjC,OAAOquB,UAAU,CAACvtB,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAK;IAAA,IAAA2oB,SAAA;IACpC,OAAAnoB,QAAA,KACO3F,GAAG,GAAA8tB,SAAA,OAAAA,SAAA,CACL3oB,IAAI,CAAC5E,GAAG,CAAC,IAAI9B,KAAK,IAAI0G,IAAI,CAAC1G,KAAK,CAAC,IAAMA,KAAK,KAAKsB,SAAS,IAAIoF,IAAK,IAAI,EAAE,EAAA2oB,SAAA;GAEjF,EAAEN,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,aAAW,GAAG,CAAC;AACnB,IAAMwC,eAAe,GAAGxuB,cAAK,CAACksB,UAAU,CAAC,UAAAxQ,KAAA,EAOf5W,GAAG,EAAK;EAAA,IAAA2pB,UAAA,EAAAC,gBAAA;EAAA,IAPUpE,KAAK,GAAA5O,KAAA,CAAL4O,KAAK;IAC7C8B,kBAAkB,GAAA1Q,KAAA,CAAlB0Q,kBAAkB;IAElBlC,oBAAoB,GAAAxO,KAAA,CAApBwO,oBAAoB;IACpBC,UAAU,GAAAzO,KAAA,CAAVyO,UAAU;IACVC,eAAe,GAAA1O,KAAA,CAAf0O,eAAe;IAAAuE,AACQC,mBAAA,GAAAlT,KAAA,CACvB3K,aAAa;IAAbA,aAAa,GAAA6d,mBAAA,cAAG,EAAE,GAAAA,mBAAA;EAElBvrB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyN,aAAa,EAAE,eAAe,CAAC;EAEtD,IAAAub,QAAA,GAYI1N,OAAO,CAAC;MACRvR,IAAI,EAAE,UAAU;MAChBlK,gBAAgB,EAAE,IAAI;MAGtB4N,aAAa,EAAEA;KAClB,CAAC;IAjBEpN,QAAQ,GAAA2oB,QAAA,CAAR3oB,QAAQ;IACRmZ,YAAY,GAAAwP,QAAA,CAAZxP,YAAY;IACZtR,KAAK,GAAA8gB,QAAA,CAAL9gB,KAAK;IACQlJ,MAAM,GAAAgqB,QAAA,CAAnB9rB,SAAS,CAAI8B,MAAM;IACnBb,OAAO,GAAA6qB,QAAA,CAAP7qB,OAAO;IACP6V,OAAO,GAAAgV,QAAA,CAAPhV,OAAO;IACPoH,QAAQ,GAAA4N,QAAA,CAAR5N,QAAQ;IACRzH,SAAS,GAAAqV,QAAA,CAATrV,SAAS;IACT8D,QAAQ,GAAAuR,QAAA,CAARvR,QAAQ;IACRO,iBAAiB,GAAAgR,QAAA,CAAjBhR,iBAAiB;IACjB1W,UAAU,GAAA0nB,QAAA,CAAV1nB,UAAU;EASd,IAAMohB,WAAW,GAAG;IAChBriB,QAAQ,EAARA,QAAQ;IACRmZ,YAAY,EAAZA,YAAY;IACZtR,KAAK,EAALA,KAAK;IACLlJ,MAAM,EAANA,MAAM;IACNb,OAAO,EAAPA,OAAO;IACP6V,OAAO,EAAPA,OAAO;IACPoH,QAAQ,EAARA,QAAQ;IACRzH,SAAS,EAATA,SAAS;IACT8D,QAAQ,EAARA,QAAQ;IACRjR,aAAa,EAAbA,aAAa;IACboV,QAAQ,EAARA,QAAQ;IACR5D,iBAAiB,EAAjBA,iBAAiB;IACjB1W,UAAU,EAAVA;GACH;EAED,IAAM2nB,YAAY,GAAGvsB,cAAK,CAACwsB,MAAM,EAAE;EAEnC,IAAMC,kBAAkB,GAAGzsB,cAAK,CAACwsB,MAAM,EAAE;EACzC,IAAME,iBAAiB,GAAG1sB,cAAK,CAACwsB,MAAM,EAAE;EAGxC,IAAA5M,SAAA,GAAwBC,cAAQ,EAAE;IAA3BrjB,IAAI,GAAAojB,SAAA;IAAE+M,OAAO,GAAA/M,SAAA;EAEpB5f,cAAK,CAACgjB,SAAS,CAAC,YAAM;IAClB,IAAIsH,KAAK,KAAKtsB,SAAS,EAAE;IAUzBuuB,YAAY,CAAC5uB,OAAO,GAAG2sB,KAAK;IAE5BmC,kBAAkB,CAAC9uB,OAAO,GAAG6tB,0BAAwB,CAACe,YAAY,CAAC5uB,OAAO,CAAC;IAC3E0F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEipB,YAAY,EAAE,0BAA0B,CAAC;IAChElpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmpB,kBAAkB,EAAE,0BAA0B,KAAAhvB,MAAA,CAAMgvB,kBAAkB,CAAC9uB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,IAAMuN,YAAY,GAAG/C,KAAK,WAAQ9O,KAAK,EAAA6wB,KAAA;MAAA,IAAIlwB,IAAI,GAAAkwB,KAAA,CAAJlwB,IAAI;QAAEd,IAAI,GAAAgxB,KAAA,CAAJhxB,IAAI;MAAA,IAAO;QAAA,OAAA4V,OAAA,CAAAC,OAAA;UAAA,IAKpDqa,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;YAEpCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,wCAAwC,EAAE5G,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE8tB,KAAK,CAAC;YAAA,OAAAnY,OAAA,CAAAC,OAAA,CAC3Ewa,iBAAiB,CAACvvB,IAAI,EAAEX,KAAK,CAACW,IAAI,CAAC,EAAEitB,KAAK,CAAC,EAAAtW,IAAA,WAAA2J,KAAA;cAAA,IAAzD5U,CAAC,GAAA4U,KAAA;gBAAE3U,CAAC,GAAA2U,KAAA;cAAA,IACP,CAAChR,SAAS,CAACnQ,IAAI,EAAEwM,CAAC,CAAC,IAAID,CAAC;gBAExB4jB,OAAO,CAAA/oB,QAAA,KAAMoF,CAAC,CAAE,CAAC;;;;;OAK5B,QAAAwL,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;MAAC;IAEFmY,OAAO,CAACrC,KAAK,CAAC;GACjB,EAAE,CAACA,KAAK,CAAC,CAAC;EAMX,IAAMuC,WAAW,GAAG,SAAdA,WAAWA,GAAS;IACtBN,YAAY,CAAC5uB,OAAO,GAAG2tB,YAAU,CAAChB,KAAK,EAAE,MAAM,CAAC;IAChDqC,OAAO,CAACrC,KAAK,CAAC;GACjB;EAOD,IAAMwC,YAAY,YAAZA,YAAYA;IAAA,IAAe;MAE7B,IAAIjtB,MAAM,CAACmB,IAAI,CAACsB,MAAM,CAAC,CAACrB,MAAM,GAAG,CAAC,EAAE,OAAAkR,OAAA,CAAAC,OAAA,CAAO,KAAK;MAAC,OAAAD,OAAA,CAAAC,OAAA,CAC5BkF,OAAO,EAAE,EAAAtD,IAAA,WAAxB5V,MAAM;QACZiF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAElF,MAAM,EAAEkE,MAAM,CAAC;QAAA,IAC1ElE,MAAM,KAAK,IAAI;UAAA,OAAA+T,OAAA,CAAAC,OAAA,CACF6E,SAAS,EAAE;;UAExB,OAAO,KAAK;;;KAEnB,QAAAzC,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED1P,GAAG,CAACnH,OAAO,GAAG;IACVsZ,SAAS,EAAE6V,YAAY;IACvBD,WAAW,EAAEA,WAAW;IACxB9R,QAAQ,EAAEA;GACb;EAED,IAAMgS,cAAc,YAAdA,cAAcA,CAAU1vB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAElD,IAAM4uB,aAAa,GAAGT,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC;MAChD,IAAI4vB,CAAC,GAAG7uB,MAAM;MACd,IAAM8uB,cAAc,GAAGtpB,QAAA,KAAKtB,MAAM,CAAC3E,OAAO,KAAM,EAAE;MAClD,IAAMwvB,SAAS,GAAG7qB,MAAM,CAAC3E,OAAO,IAAI,EAAE;MAEtC,IAAI4H,KAAK,GAAG,KAAK;MAGjB,IAAI7I,KAAK,KAAK,EAAE,EAAE;QACd,IAAM6I,MAAK,GAAG7I,KAAK,KAAK,KAAK;QAC7B,IAAI6I,MAAK,EAAE;UACP4nB,SAAS,CAAC9vB,IAAI,CAAC,GAAG;YACdkI,KAAK,EAALA,MAAK;YACL6nB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;WACjE;SACJ,MAAM;UACH,OAAOD,SAAS,CAAC9vB,IAAI,CAAC;;OAI7B,MAAM;QACH,OAAO8vB,SAAS,CAAC9vB,IAAI,CAAC;;MAI1BiF,MAAM,CAAC3E,OAAO,GAAAiG,QAAA,KAAQupB,SAAS,CAAE;MAEjC9pB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,EAAE,aAAa,EAAE6qB,SAAU,CAAC;MACzD,IAAI5nB,KAAK,CAAC5H,OAAO,KAAKuvB,cAAc,EAAE;MAetC,OAAA/a,OAAA,CAAAC,OAAA,CAAO,CAAC,CAACuO,CAAC,CAACI,OAAO,CAACmM,cAAc,EAAEC,SAAS,CAAC,KAAA1vB,MAAA,CAAMwvB,CAAC,GAAGE,SAAS,CAAC9vB,IAAI,CAAC,CAAC;KAC1E,QAAAmX,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMuU,eAAe,YAAfA,eAAeA,CAAUrsB,KAAK,EAAEW,IAAI;IAAA,IAAK;MAG3CkvB,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;MAAA,IAAA2wB,qBAAA,GAGjBd,YAAY,CAAC5uB,OAAO;MAAA,OAAAwU,OAAA,CAAAC,OAAA,CAAqB0a,YAAY,EAAE,EAAA9Y,IAAA,WAAAsZ,aAAA;QAA9EjqB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAA+pB,qBAAA,EAAwB,WAAW,EAAAC,aAAsB,CAAC;QAAA,OAAAnb,OAAA,CAAAC,OAAA,CAG3B2a,cAAc,CAAC1vB,IAAI,EAAEX,KAAK,EAAAkH,QAAA,KAAOpH,IAAI,CAAE,CAAC,EAAAwX,IAAA,WAAA6a,KAAA;UAAA,IAArFrB,oBAAoB,GAAAqB,KAAA;YAAEzwB,MAAM,GAAAywB,KAAA;YAAEtpB,KAAK,GAAAspB,KAAA;UAAA,OAAA1c,OAAA,CAAAC,OAAA,CACQwa,iBAAiB,CAACvvB,IAAI,EAAEX,KAAK,EAAEF,IAAI,CAAC,EAAAwX,IAAA,WAAA8a,MAAA;YAAA,IAA/ErB,sBAAsB,GAAAqB,MAAA;cAAEpB,SAAS,GAAAoB,MAAA;YAAA,IAGpCtB,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI;cAGhEpqB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5BkqB,oBAAoB,EACpBC,sBAAsB,EACtBnrB,MACJ,CAAC;cACDqqB,OAAO,CAAA/oB,QAAA,KAAM8pB,SAAS,CAAE,CAAC;;;;;KAMhC,QAAAlZ,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMoY,iBAAiB,YAAjBA,iBAAiBA,CAAUvvB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAAA,IAAA8V,MAAA,YAAAA;QAsDrD,OAAO,CAACyZ,OAAO,EAAEV,CAAC,CAAC;QACnB,OAAO,CAACU,OAAO,EAAA/pB,QAAA,KAAOqpB,CAAC,EAAG;;MArD1B,IAAMW,YAAY,GAAGnB,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;MAEzDgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9G,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEkvB,YAAY,CAAC5uB,OAAO,EAAEiwB,YAAY,EAAEnB,kBAAkB,CAAC9uB,OAAO,CAAC;MAO7H,IAAIsvB,CAAC,GAAArpB,QAAA,KAAOxF,MAAM,CAAC;MAEnB,IAAIuvB,OAAO,GAAG,KAAK;MAAA,IAAAtZ,KAAA;QAAA,IAEfuZ,YAAY,KAAK5vB,SAAS;UAAA,OAAAmU,OAAA,CAAAC,OAAA,CAQpBwb,YAAY,CAAC5lB,GAAG,WAAQ5E,IAAI;YAAA,IAAK;cAAA,IAAA0Q,MAAA,YAAAA,OAE7B+Z,OAAO;gBAOb,IAAMjlB,CAAC,GAAGqkB,CAAC,CAAC7pB,IAAI,CAACioB,KAAK,CAAC;gBACvBhoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE2pB,CAAC,CAAC,WAAW,CAAC,EAAC,oBAAoB,EAAC,OAAO,EAACrkB,CAAC,CAAC;gBAAA,IAClEA,CAAC,KAAK5K,SAAS,IAAI4K,CAAC,CAACjH,OAAO,KAAKksB,OAAO;kBACvCZ,CAAC,CAAC7pB,IAAI,CAACioB,KAAK,CAAC,CAAC1pB,OAAO,GAAGksB,OAAO;kBAC/BF,OAAO,GAAG,IAAI;;;cAZlB,IAAMI,SAAS,GAAGrxB,KAAK,IAAIA,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;cAAC,IAAAsxB,UAAA,GACnC5qB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7G,IAAI;cAAA,OAAA4V,OAAA,CAAAC,OAAA,CAAA4b,UAAA,GAAA7b,OAAA,CAAAC,OAAA,CAAWga,kBAAkB,CAAChpB,IAAI,CAAC7G,IAAI,CAAC,CAAC6G,IAAI,EAAE2qB,SAAS,CAAC,EAAA/Z,IAAA,CAAAF,MAAA,IAAAA,MAAA,CAAAka,UAAA;aA2BtF,QAAAxZ,CAAA;cAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;YAAC,EAAAR,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAiC,KAAA,IAAAA,KAAA,CAAAL,IAAA,GAAAK,KAAA,CAAAL,IAAA,CAAAE,MAAA,IAAAA,MAAA,CAAAG,KAAA;KAIT,QAAAG,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAEDnR,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE0oB,aAAW,EAAE,CAAC;EAEpD,OACKxvB,IAAI,MAAAiyB,UAAA,GAAIjyB,IAAI,CAACuyB,IAAI,cAAAN,UAAA,wBAAAC,gBAAA,GAATD,UAAA,CAAWnE,KAAK,cAAAoE,gBAAA,uBAAhBA,gBAAA,CAAkB1mB,GAAG,CAAC,UAAC3K,IAAI,EAAE6I,KAAK;IAAA,OAAK+nB,kBAAkB,CAAC5wB,IAAI,EAAEb,IAAI,EAAE;MAC3EusB,eAAe,EAAfA,eAAe;MACfwD,YAAY,EAAZA,YAAY;MACZtV,SAAS,EAATA,SAAS;MACT3U,MAAM,EAANA,MAAM;MACN4nB,oBAAoB,EAApBA,oBAAoB;MACpBC,UAAU,EAAVA,UAAU;MACVC,eAAe,EAAfA,eAAe;MACfpsB,SAAS,EAATA,SAAS;MACTgoB,WAAW,EAAXA,WAAW;MACX9f,KAAK,EAALA;KACH,CAAC;GACF,CAAC,KAAK,IAAI;AAsBlB,CAAC,CAAC;AAEFsoB,eAAe,CAACxD,eAAe,GAAG,IAAI;AACtCwD,eAAe,CAACvuB,WAAW,GAAG,iBAAiB;;AC12B/C,IAAMyU,gBAAc,GAAG;EACnBrH,IAAI,EAAExO,eAAe,CAACG,QAAQ;EAC9B2V,cAAc,EAAE9V,eAAe,CAACE,QAAQ;EACxC6V,gBAAgB,EAAE;AACtB,CAAC;AACD,IAAMC,mBAAiB,GAAG,OAAOrI,MAAM,KAAK,WAAW;AACvD,AAAO,SAASwiB,mBAAmBA,CAAC5uB,KAAK,EAAO;EAAA,IAAZA,KAAK;IAALA,KAAK,GAAG,EAAE;;EAC1C,IAAI2U,WAAW,GAAGlV,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4U,gBAAc,CAAC,EAAEtU,KAAK,CAAC;EACzEiD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyR,WAAW,EAAE,aAAa,CAAC;EAClD,IAAIC,cAAc;EAClB,IAAIlT,UAAU,GAAG;IACbG,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACfmP,WAAW,EAAE,KAAK;IAClB4D,WAAW,EAAE,CAAC;IACd9S,aAAa,EAAE,EAAE;IACjB+S,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzB9S,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAM7B,eAAe,GAAG;IACpBwB,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAI0B,OAAO,GAAG,EAAE;EAChB,IAAIT,WAAW,GAAG,EAAE;EACpB,IAAIC,cAAc,GAAGuR,WAAW,CAAChE,aAAa,IAAI,EAAE;EACpD,IAAIpM,WAAW,GAAG,KAAK;EACvB,IAAIyQ,UAAU,GAAG,KAAK;EACtB,IAAM5S,SAAS,GAAG;IACdgJ,KAAK,EAAE,IAAImD,OAAO,EAAE;IACpBlN,OAAO,EAAE,IAAIkN,OAAO,EAAE;IACtBjK,KAAK,EAAE,IAAIiK,OAAO,EAAE;IACpBlM,KAAK,EAAE,IAAIkM,OAAO;GACrB;EACD,IAAIlK,MAAM,GAAG;IACTP,KAAK,EAAE,IAAImR,GAAG,EAAE;IAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;IAClB3Q,KAAK,EAAE,IAAI2Q,GAAG,EAAE;IAChB7J,KAAK,EAAE,IAAI6J,GAAG,EAAE;IAChB9J,QAAQ,EAAE;GACb;EACD,IAAMgK,cAAc,GAAGC,kBAAkB,CAACT,WAAW,CAAC1H,IAAI,CAAC;EAC3D,IAAMoI,0BAA0B,GAAGV,WAAW,CAACxE,YAAY,KAAK1R,eAAe,CAACK,GAAG;EACnF,IAAMwW,cAAc,GAAG,SAAjBA,cAAcA,CAAIrY,IAAI;IAAA,OAAKoH,MAAM,CAAC8G,QAAQ,IAC5C9G,MAAM,CAAC+G,KAAK,CAACmK,GAAG,CAACtY,IAAI,CAAC,IACtBoH,MAAM,CAAC+G,KAAK,CAACmK,GAAG,CAAC,CAACtY,IAAI,CAACwW,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;;EAClD,IAAM+B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIvY,IAAI,EAAEkI,KAAK,EAAK;IACtCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC;IACnC/C,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAER,UAAU,CAACQ;KACtB,CAAC;GACL;EACD,IAAMuT,uBAAuB,YAAvBA,uBAAuBA,GAAe;IAAA,OAAA1D,OAAA,CAAAC,OAAA,CAClB0D,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAA3C3R,OAAO;MAAA,IACTA,OAAO,KAAKP,UAAU,CAACO,OAAO;QAC9BP,UAAU,CAACO,OAAO,GAAGA,OAAO;QAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBN,OAAO,EAAPA;SACH,CAAC;;;GAET;EACD,IAAM0T,uBAAuB,YAAvBA,uBAAuBA,CAAUC,gBAAgB,EAAE3Y,IAAI,EAAEkI,KAAK,EAAEH,UAAU,EAAE6Q,mBAAmB,EAAEC,SAAS;IAAA,IAAK;MACjH,IAAMC,aAAa,GAAGpV,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;MAClD,IAAMgF,OAAO,GAAG,CAAC,EAAE5B,eAAe,CAAC4B,OAAO,KACrC0S,WAAW,CAACqB,QAAQ,GAAGH,mBAAmB,GAAGJ,uBAAuB,EAAE,CAAC,CAAC;MAC7E,IAAIzV,KAAK,CAACiW,UAAU,IAAI9Q,KAAK,EAAE;QAC3ByP,cAAc,GACVA,cAAc,IAAIsB,QAAQ,CAACV,gBAAgB,EAAExV,KAAK,CAACiW,UAAU,CAAC;QAClErB,cAAc,CAAC3X,IAAI,EAAEkI,KAAK,CAAC;OAC9B,MACI;QACDA,KAAK,GACCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC,GACnC8D,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;MAExC,IAAI,CAAC6Y,SAAS,KACT3Q,KAAK,GAAG,CAACoH,SAAS,CAACwJ,aAAa,EAAE5Q,KAAK,CAAC,GAAG4Q,aAAa,CAAC,IAC1D,CAAChV,aAAa,CAACiE,UAAU,CAAC,IAC1BtD,UAAU,CAACO,OAAO,KAAKA,OAAO,KAC9B,CAAC2T,gBAAgB,EAAE;QACnB,IAAMO,gBAAgB,GAAG1W,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsF,UAAU,CAAC,EAAG3E,eAAe,CAAC4B,OAAO,IAAI0S,WAAW,CAACqB,QAAQ,GAAG;UAAE/T,OAAO,EAAPA;SAAS,GAAG,EAAG,CAAC,EAAE;UAAEC,MAAM,EAAER,UAAU,CAACQ,MAAM;UAAEjF,IAAI,EAAJA;SAAM,CAAC;QAC/LyE,UAAU,GAAGjC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgC,UAAU,CAAC,EAAEyU,gBAAgB,CAAC;QAE3E/T,SAAS,CAACC,KAAK,CAACE,IAAI,CAACuT,SAAS,GAAG;UAAE7Y,IAAI,EAAJA;SAAM,GAAGkZ,gBAAgB,CAAC;;MAEjE/T,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MAAC,OAAA+P,OAAA,CAAAC,OAAA;KACN,QAAAoC,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMgC,aAAa,GAAG,SAAhBA,aAAaA,CAAInZ,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAOsP,YAAY,EAAK;IAAA,IAA/BtP,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAC5C,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAEhC,IAAI0G,KAAK,EAAE;MACP,IAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,IAAIA,EAAE,EAAE;QAEJ+B,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEgT,eAAe,CAAC3T,KAAK,EAAEuH,EAAE,CAAC,CAAC;QAClD,IAAMyS,UAAU,GAAGC,KAAK,IAAIC,aAAa,CAAC3S,EAAE,CAACa,GAAG,CAAC,IAAIlI,iBAAiB,CAACF,KAAK,CAAC,GACvE,EAAE,GACFA,KAAK;QACX,IAAIoT,WAAW,CAAC7L,EAAE,CAACa,GAAG,CAAC,IAAI,CAACwM,QAAQ,CAACoF,UAAU,CAAC,EAAE;UAC9CzS,EAAE,CAACa,GAAG,CAACiL,KAAK,GAAG2G,UAAU;SAC5B,MACI,IAAIzG,gBAAgB,CAAChM,EAAE,CAACa,GAAG,CAAC,EAAE;UAC/B,GAAArH,MAAA,CAAIwG,EAAE,CAACa,GAAG,CAACqC,OAAO,EAAE0P,OAAO,CAAC,UAACC,SAAS;YAAA,OAAMA,SAAS,CAACrH,QAAQ,GAAGiH,UAAU,CAAC7T,QAAQ,CAACiU,SAAS,CAACpa,KAAK,CAAC;WAAC,CAAC;SAC1G,MACI,IAAIuH,EAAE,CAACiD,IAAI,EAAE;UACd,IAAI/J,eAAe,CAAC8G,EAAE,CAACa,GAAG,CAAC,EAAE;YACzBb,EAAE,CAACiD,IAAI,CAACjG,MAAM,GAAG,CAAC,GACZgD,EAAE,CAACiD,IAAI,CAAC2P,OAAO,CAAC,UAACE,WAAW;cAAA,OAAMA,WAAW,CAAC3Z,OAAO,GAAGP,KAAK,CAACC,OAAO,CAAC4Z,UAAU,CAAC,GAC7E,CAAC,CAACA,UAAU,CAACtV,IAAI,CAAC,UAAC5E,IAAI;gBAAA,OAAKA,IAAI,KAAKua,WAAW,CAACra,KAAK;gBAAC,GACvDga,UAAU,KAAKK,WAAW,CAACra,KAAK;aAAC,CAAC,GACrCuH,EAAE,CAACiD,IAAI,CAAC,CAAC,CAAC,CAAC9J,OAAO,GAAG,CAAC,CAACsZ,UAAW;WAC5C,MACI;YACDzS,EAAE,CAACiD,IAAI,CAAC2P,OAAO,CAAC,UAACG,QAAQ;cAAA,OAAMA,QAAQ,CAAC5Z,OAAO,GAAG4Z,QAAQ,CAACta,KAAK,KAAKga,UAAU;aAAC,CAAC;;SAExF,MACI;UACDzS,EAAE,CAACa,GAAG,CAACpI,KAAK,GAAGga,UAAU;;QAE7B,IAAID,YAAY,EAAE;UACdjU,SAAS,CAACf,OAAO,CAACkB,IAAI,CAAC;YACnB0B,MAAM,EAAE4S,SAAS,EAAE;YACnB5Z,IAAI,EAAJA;WACH,CAAC;;QAEN,CAAC8J,OAAO,CAAC+P,WAAW,IAAI/P,OAAO,CAACgQ,WAAW,KACvCC,wBAAwB,CAAC/Z,IAAI,EAAEqZ,UAAU,EAAEvP,OAAO,CAACgQ,WAAW,CAAC;QACnEhQ,OAAO,CAACkQ,cAAc,IAAIC,OAAO,CAACja,IAAI,CAAC;;;GAGlD;EACD,IAAM+Z,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAI/Z,IAAI,EAAEwU,UAAU,EAAE0F,gBAAgB,EAAEd,YAAY,EAAY;IAAA,IAAxBA,YAAY;MAAZA,YAAY,GAAG,IAAI;;IACrF,IAAMhU,KAAK,GAAG;MACVpF,IAAI,EAAJA;KACH;IACD,IAAIma,SAAS,GAAG,KAAK;IACrB,IAAI/W,eAAe,CAACwB,OAAO,EAAE;MACzB,IAAMwV,eAAe,GAAG3V,UAAU,CAACG,OAAO;MAC1CH,UAAU,CAACG,OAAO,GAAGyV,WAAW,EAAE;MAClCjV,KAAK,CAACR,OAAO,GAAGH,UAAU,CAACG,OAAO;MAClCuV,SAAS,GAAGC,eAAe,KAAKhV,KAAK,CAACR,OAAO;;IAEjD,IAAIxB,eAAe,CAACyB,WAAW,IAAI,CAACqV,gBAAgB,EAAE;MAClD,IAAMI,oBAAoB,GAAG5W,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;MAC9D,IAAMua,mBAAmB,GAAG,CAACjL,SAAS,CAAC5L,GAAG,CAACyC,cAAc,EAAEnG,IAAI,CAAC,EAAEwU,UAAU,CAAC;MAC7E+F,mBAAmB,GACb5R,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,IAAI,CAAC,GACvCgM,KAAK,CAACvH,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;MACzCoF,KAAK,CAACP,WAAW,GAAGJ,UAAU,CAACI,WAAW;MAC1CsV,SAAS,GACLA,SAAS,IAAIG,oBAAoB,KAAK5W,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;;IAE/E,IAAMwa,sBAAsB,GAAG9W,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;IAClE,IAAIka,gBAAgB,IAAI,CAACM,sBAAsB,EAAE;MAC7C7R,GAAG,CAAClE,UAAU,CAACK,aAAa,EAAE9E,IAAI,EAAEka,gBAAgB,CAAC;MACrD9U,KAAK,CAACN,aAAa,GAAGL,UAAU,CAACK,aAAa;MAC9CqV,SAAS,GACLA,SAAS,IACR/W,eAAe,CAAC0B,aAAa,IAC1B0V,sBAAsB,KAAKN,gBAAiB;;IAExDC,SAAS,IAAIf,YAAY,IAAIjU,SAAS,CAACC,KAAK,CAACE,IAAI,CAACF,KAAK,CAAC;IACxD,OAAO+U,SAAS,GAAG/U,KAAK,GAAG,EAAE;GAChC;EACD,IAAMqV,eAAe,YAAfA,eAAeA,CAAUza,IAAI;IAAA,IAAK;MAAA,IAAA0a,sBAAA,GAC7BhD,WAAW,CAACqB,QAAQ;MAAA,OAAAjE,OAAA,CAAAC,OAAA,CAAA2F,sBAAA,GACfhD,WAAW,CAACqB,QAAQ,CAACvW,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyD,WAAW,CAAC,EAAEwR,WAAW,CAACiD,OAAO,EAAEC,kBAAkB,CAAC5a,IAAI,IAAIoH,MAAM,CAACP,KAAK,EAAEF,OAAO,EAAE+Q,WAAW,CAACxE,YAAY,EAAEwE,WAAW,CAACvE,yBAAyB,CAAC,CAAC,GACnM,EAAE;KACX,QAAAgE,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM0D,yBAAyB,YAAzBA,yBAAyBA,CAAU1a,KAAK,EAAK;IAAA,OAAA2U,OAAA,CAAAC,OAAA,CACtB0F,eAAe,EAAE,EAAA9D,IAAA,WAAAzS,IAAA;MAAA,IAAlCe,MAAM,GAAAf,IAAA,CAANe,MAAM;MACd,IAAI9E,KAAK,EAAE;QACP,SAAAsJ,SAAA,GAAAC,+BAAA,CAAmBvJ,KAAK,GAAAwJ,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;UAAA,IAAf5J,IAAI,GAAA2J,KAAA,CAAAtK,KAAA;UACX,IAAM6I,KAAK,GAAGxE,GAAG,CAACuB,MAAM,EAAEjF,IAAI,CAAC;UAC/BkI,KAAK,GACCS,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEkI,KAAK,CAAC,GACnC8D,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;OAE3C,MACI;QACDyE,UAAU,CAACQ,MAAM,GAAGA,MAAM;;MAE9B,OAAOA,MAAM;;GAChB;EACD,IAAMwT,YAAY,YAAZA,YAAYA,CAAU9R,OAAO,EAAEmU,gBAAgB,EAAEH,OAAO,EAG3DiX,MAAM;IAAA,IAH8CjX,OAAO;MAAPA,OAAO,GAAG;QAC7DI,KAAK,EAAE,IAAI;QACX8W,UAAU,EAAE;OACf;;IAAA,IAAED,MAAM;MAANA,MAAM,GAAG,KAAK;;IAAA,IAAK;MAAA,IAAA/V,MAAA,YAAAA;QAuClB,OAAOlB,OAAO,CAACI,KAAK;;MAAC,IAAAhE,UAAA;MAAA,IAAAiE,MAAA,GAAA/D,MAAA,CArCFtQ,OAAO,YAAf3G,IAAI,EAAa;QACxB,IAAM0G,KAAK,GAAGC,OAAO,CAAC3G,IAAI,CAAC;QAAC,IAAAib,MAAA;UAAA,IAExBvU,KAAK;YAAA,IAAA+N,MAAA,YAAAA;cAAA,SAAAoC,OAAAqE,aAAA;gBA+BLA,aAAA;;cAA4D,OAA5Dxa,IAAG,GAAAoU,OAAA,CAAAC,OAAA,CAAW0D,YAAY,CAAC/X,IAAG,EAAEoa,gBAAgB,EAAEH,OAAO,CAAC,EAAAhE,IAAA,CAAAE,MAAA,IAAAA,MAAA,CAA1DnW,IAAG;;YA9BH,IAAMkG,EAAE,GAAGF,KAAK,CAACE,EAAE;YACnB,IAAMlG,IAAG,GAAGuC,IAAI,CAACyD,KAAK,EAAE,IAAI,CAAC;YAAC,IAAA+P,MAAA;cAAA,IAE1B7P,EAAE;gBAAA,IAAAoQ,KAAA;kBAAA,IAGEpQ,EAAE,CAACgrB,MAAM,KAAKA,MAAM,IAAIA,MAAM,KAAK,KAAK;oBAAA,OAAA9c,OAAA,CAAAC,OAAA,CACfoG,aAAa,CAACzU,KAAK,EAAEhD,GAAG,CAACwC,WAAW,EAAEU,EAAE,CAAC5G,IAAI,CAAC,EAAEoY,0BAA0B,EAAEV,WAAW,CAACvE,yBAAyB,CAAC,EAAAwD,IAAA,WAArIyE,UAAU;sBAAA,IAGZN,gBAAgB;wBAAA,IACZM,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC;0BACnB2a,OAAO,CAACI,KAAK,GAAG,KAAK;0BAAChE,UAAA;;;wBAK1B,IAAIqE,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,EAAE;0BACrB2a,OAAO,CAACI,KAAK,GAAG,KAAK;;wBAEzBK,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,GACb2I,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAE2B,EAAE,CAAC5G,IAAI,EAAEob,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,CAAC,GACpDgM,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAE2B,EAAE,CAAC5G,IAAI,CAAC;wBAAC,IAIpC2a,OAAO,CAACkX,UAAU,KAAK,KAAK,IAAIrvB,MAAM,CAACmB,IAAI,CAACc,UAAU,CAACQ,MAAM,CAAC,CAACrB,MAAM,IAAI,CAAC;0BAAAmT,UAAA;;;;;;gBAAA,IAAAC,KAAA,IAAAA,KAAA,CAAAL,IAAA,SAAAK,KAAA,CAAAL,IAAA;;;YAAA,OAAAF,MAAA,IAAAA,MAAA,CAAAE,IAAA,GAAAF,MAAA,CAAAE,IAAA,CAAAlC,MAAA,IAAAA,MAAA,CAAAgC,MAAA;;;QAAA,IAAAwE,MAAA,IAAAA,MAAA,CAAAtE,IAAA,SAAAsE,MAAA,CAAAtE,IAAA;OAMjG;QAAA,OAAAI,UAAA;;MAAA,OAAAjC,OAAA,CAAAC,OAAA,CAAAiG,MAAA,IAAAA,MAAA,CAAArE,IAAA,GAAAqE,MAAA,CAAArE,IAAA,CAAAkF,MAAA,IAAAA,MAAA,CAAAb,MAAA;KAEJ,QAAA7D,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM2a,sBAAsB,YAAtBA,sBAAsBA,CAAUnrB,OAAO,EAAEmU,gBAAgB,EAAEH,OAAO,EAErEiX,MAAM;IAAA,IAFwDjX,OAAO;MAAPA,OAAO,GAAG;QACvEI,KAAK,EAAE;OACV;;IAAA,IAAE6W,MAAM;MAANA,MAAM,GAAG,KAAK;;IAAA,IAAK;MAAA,IAAAG,WAAA;MAElB,IAAIC,WAAW,GAAG,EAAE;MAAC,IAAA7T,OAAA,GAAAlH,MAAA,CACFtQ,OAAO,YAAf3G,IAAI,EAAa;QACxB,IAAM0G,KAAK,GAAGC,OAAO,CAAC3G,IAAI,CAAC;QAAC,IAAAoe,OAAA;UAAA,IAExB1X,KAAK;YAAA,IAAAiX,OAAA,YAAAA;cAAA,SAAAG,OAAAmU,cAAA;gBA8BLA,cAAA;;cAA4D,OAA5DvxB,KAAG,GAAAoU,OAAA,CAAAC,OAAA,CAAW0D,YAAY,CAAC/X,KAAG,EAAEoa,gBAAgB,EAAEH,OAAO,CAAC,EAAAhE,IAAA,CAAAmH,MAAA,IAAAA,MAAA,CAA1Dpd,KAAG;;YA7BH,IAAMkG,EAAE,GAAGF,KAAK,CAACE,EAAE;YACnB,IAAMlG,KAAG,GAAGuC,IAAI,CAACyD,KAAK,EAAE,IAAI,CAAC;YAAC,IAAAkX,OAAA;cAAA,IAE1BhX,EAAE;gBAAA,IAAA4U,MAAA;kBAAA,IAGE5U,EAAE,CAACgrB,MAAM,KAAKA,MAAM,IAAIA,MAAM,KAAK,KAAK;oBAAA,OAAA9c,OAAA,CAAAC,OAAA,CACfoG,aAAa,CAACzU,KAAK,EAAEhD,GAAG,CAACwC,WAAW,EAAEU,EAAE,CAAC5G,IAAI,CAAC,EAAEoY,0BAA0B,EAAEV,WAAW,CAACvE,yBAAyB,CAAC,EAAAwD,IAAA,WAArIyE,UAAU;sBAAA,IAGZN,gBAAgB;wBAAA,IACZM,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC;0BACnB2a,OAAO,CAACI,KAAK,GAAG,KAAK;0BAACgX,WAAA;;;wBAK1B,IAAI3W,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,EAAE;0BACrB2a,OAAO,CAACI,KAAK,GAAG,KAAK;;wBAEzBK,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,GACb2I,GAAG,CAACqpB,WAAW,EAAEprB,EAAE,CAAC5G,IAAI,EAAEob,UAAU,CAACxU,EAAE,CAAC5G,IAAI,CAAC,CAAC,GAC9CgM,KAAK,CAACgmB,WAAW,EAAEprB,EAAE,CAAC5G,IAAI,CAAC;;;;;gBAAC,IAAAwb,MAAA,IAAAA,MAAA,CAAA7E,IAAA,SAAA6E,MAAA,CAAA7E,IAAA;;;YAAA,OAAAiH,OAAA,IAAAA,OAAA,CAAAjH,IAAA,GAAAiH,OAAA,CAAAjH,IAAA,CAAAgH,OAAA,IAAAA,OAAA,CAAAC,OAAA;;;QAAA,IAAAQ,OAAA,IAAAA,OAAA,CAAAzH,IAAA,SAAAyH,OAAA,CAAAzH,IAAA;OASrD;QAAA,OAAAob,WAAA;;MAAA,OAAAjd,OAAA,CAAAC,OAAA,CAAAoJ,OAAA,IAAAA,OAAA,CAAAxH,IAAA,GAAAwH,OAAA,CAAAxH,IAAA;QACD,OAAOqb,WAAW;WAAXA,WAAW;KACrB,QAAA7a,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMkE,YAAY,YAAZA,YAAYA,CAAAhJ,KAAA;IAAA,IAAYnT,IAAI,GAAAmT,KAAA,CAAJnT,IAAI;MAAEW,MAAM,GAAAwS,KAAA,CAANxS,MAAM;MAAAyb,YAAA,GAAAjJ,KAAA,CAAExS,MAAM;MAAIR,KAAK,GAAAic,YAAA,CAALjc,KAAK;MAAEW,IAAI,GAAAsb,YAAA,CAAJtb,IAAI;MAAQub,SAAS,GAAAD,YAAA,CAAfpc,IAAI;IAAA,IAAqB;MACxF,IAAIgJ,KAAK;MACT,IAAIlD,OAAO;MACX,IAAM0B,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;MAAC,OAAA8U,OAAA,CAAAC,OAAA;QAAA,IAE7BrO,KAAK;UAAA,IAAAyZ,OAAA,YAAAA;YAkDL,CAACpM,YAAW,IACR5O,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;cACjBtF,IAAI,EAAJA,IAAI;cACJd,IAAI,EAAJA,IAAI;cACJ8H,MAAM,EAAE4S,SAAS;aACpB,CAAC;YACNlB,uBAAuB,CAAC,KAAK,EAAE1Y,IAAI,EAAEkI,KAAK,EAAEH,WAAU,EAAE/C,OAAO,EAAE6T,UAAS,CAAC;;UAvD3E,IAAIrE,UAAU,GAAG+G,SAAS,GAAG/I,aAAa,CAAC9L,KAAK,CAAC,GAAG/F,SAAS;UAC7D6T,UAAU,GAAGpT,WAAW,CAACoT,UAAU,CAAC,GAAGnV,KAAK,GAAGmV,UAAU;UAEzD,IAAMT,YAAW,GAAG7U,IAAI,KAAKmC,MAAM,CAACC,IAAI;UACxC,IAAAma,mBAAA,GAA2EtD,kBAAkB,CAACT,WAAW,CAACJ,cAAc,CAAC;YAAvGzD,kBAAkB,GAAA4H,mBAAA,CAA5BvL,QAAQ;YAAkC4D,oBAAoB,GAAA2H,mBAAA,CAAhCtL,UAAU;UAChD,IAAMuL,oBAAoB,GAAI,CAACC,aAAa,CAACjV,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACE,EAAE,CAACC,KAAK,CAAC,IAClE,CAAC6Q,WAAW,CAACqB,QAAQ,IACrB,CAACrV,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,IAC7B4b,cAAc,CAACpZ,MAAM,CAACC,MAAM,CAAC;YACzBsR,WAAW,EAAXA,YAAW;YAAE9L,SAAS,EAAE,CAAC,CAACvE,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;YAAEgU,WAAW,EAAEvP,UAAU,CAACuP,WAAW;YAAEH,kBAAkB,EAAlBA,kBAAkB;YACtHC,oBAAoB,EAApBA;WACH,EAAEoE,cAAc,CAAC,CAAC;UACvB,IAAMW,UAAS,GAAG,CAAC9E,YAAW,IAAIsE,cAAc,CAACrY,IAAI,CAAC;UACtD,IAAI,CAACoB,WAAW,CAACoT,UAAU,CAAC,EAAE;YAC1B7L,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEwU,UAAU,CAAC;;UAEtC,IAAMzM,WAAU,GAAGgS,wBAAwB,CAAC/Z,IAAI,EAAEwU,UAAU,EAAET,YAAW,EAAE,KAAK,CAAC;UACjF,IAAMqF,YAAY,GAAG1S,KAAK,CAACE,EAAE,CAACuH,KAAK,IAAI,CAACrK,aAAa,CAACiE,WAAU,CAAC,IAAI8Q,UAAS;UAE9E7S,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmT,YAAY,uBAAqBpZ,IAAI,2BAAwB0G,KAAK,CAACE,EAAE,CAACuH,KAAK,EAAE,uBAAuB,EAAEuN,oBAAoB,EAAE,cAAc,EAAE3H,YAAW,EAAE,kCAAkC,EAAE8E,UAAS,CAAC;UAC9N,IAAI6C,oBAAoB,EAAE;YACtB,CAAC3H,YAAW,IACR5O,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;cACjBtF,IAAI,EAAJA,IAAI;cACJd,IAAI,EAAJA;aACH,CAAC;YACN,OAAQka,YAAY,IAChBjU,SAAS,CAACC,KAAK,CAACE,IAAI,CAACuT,UAAS,GAAG;cAAE7Y,IAAI,EAAJA;aAAM,GAAGwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsF,WAAU,CAAC,EAAE;cAAE/H,IAAI,EAAJA;aAAM,CAAC,CAAC;;UAE3GmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjBP,YAAY,EAAE;WACjB,CAAC;UAAC,IAAAmZ,OAAA;YAAA,IACCxG,WAAW,CAACqB,QAAQ;cAAA,OAAAjE,OAAA,CAAAC,OAAA,CACK0F,eAAe,CAAC,CAACza,IAAI,CAAC,CAAC,EAAA2W,IAAA,WAAAmF,KAAA;gBAAA,IAAxC7W,MAAM,GAAA6W,KAAA,CAAN7W,MAAM;gBACdiD,KAAK,GAAGxE,GAAG,CAACuB,MAAM,EAAEjF,IAAI,CAAC;gBACzB,IAAIF,eAAe,CAACD,MAAM,CAAC,IAAI,CAACqI,KAAK,EAAE;kBACnC,IAAM6T,cAAc,GAAGxb,iBAAiB,CAACP,IAAI,CAAC;kBAC9C,IAAMgc,QAAQ,GAAGtY,GAAG,CAACuB,MAAM,EAAE8W,cAAc,EAAE,EAAE,CAAC;kBAChDC,QAAQ,CAAC9c,IAAI,IAAI8c,QAAQ,CAACnU,OAAO,KAAKK,KAAK,GAAG8T,QAAQ,CAAC;kBACvD,IAAIA,QAAQ,IAAItY,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE8W,cAAc,CAAC,EAAE;oBACpD/b,IAAI,GAAG+b,cAAc;;;gBAG7B/W,OAAO,GAAGlB,aAAa,CAACmB,MAAM,CAAC;;;cAAC,OAAA6P,OAAA,CAAAC,OAAA,CAIjBoG,aAAa,CAACzU,KAAK,EAAEhD,GAAG,CAACwC,WAAW,EAAElG,IAAI,CAAC,EAAEoY,0BAA0B,EAAEV,WAAW,CAACvE,yBAAyB,CAAC,EAAAwD,IAAA,WAAAsF,cAAA;gBAA9H/T,KAAK,GAAG+T,cAAA,CAAwHjc,IAAI,CAAC;;;;UAAC,OAAAke,OAAA,IAAAA,OAAA,CAAAvH,IAAA,GAAAuH,OAAA,CAAAvH,IAAA,CAAAwJ,OAAA,IAAAA,OAAA,CAAAjC,OAAA;;;KAUjJ,QAAA/G,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM+E,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIlc,IAAI,EAAEyH,GAAG,EAAE0U,iBAAiB,EAAK;IAChE,IAAMzV,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAChCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjG,IAAI,EAACyH,GAAG,EAAE,2BAA2B,EAAEtB,cAAc,CAAC;IAC7E,IAAIO,KAAK,EAAE;MACP,IAAM2S,UAAU,GAAG3V,GAAG,CAACwC,WAAW,EAAElG,IAAI,CAAC;MACzC,IAAMoc,gBAAgB,GAAGhb,WAAW,CAACiY,UAAU,CAAC;MAChD,IAAMvY,YAAY,GAAGsb,gBAAgB,GAC/B1Y,GAAG,CAACyC,cAAc,EAAEnG,IAAI,CAAC,GACzBqZ,UAAU;MAChB,IAAIjY,WAAW,CAACN,YAAY,CAAC,IACxB2G,GAAG,IAAIA,GAAG,CAAC4U,cAAe,IAC3BF,iBAAiB,EAAE;QACnB1U,GAAG,IAAIA,GAAG,CAACnD,OAAO,IACdqE,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEmc,iBAAiB,GAAGrb,YAAY,GAAG0R,aAAa,CAAC9L,KAAK,CAAC,CAAC;OACtF,MACI;QACDyS,aAAa,CAACnZ,IAAI,EAAEc,YAAY,CAAC;;;IAGzCiX,UAAU,IAAI3U,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;GAC1D;EACD,IAAM8L,WAAW,GAAG,SAAdA,WAAWA,CAAIra,IAAI,EAAEb,IAAI,EAAK;IAChCa,IAAI,IAAIb,IAAI,IAAIwJ,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEb,IAAI,CAAC;IAC5C,OAAO,CAACmQ,SAAS,CAAC9M,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmX,SAAS,EAAE,CAAC,EAAEzT,cAAc,CAAC;GACpE;EACD,IAAMoI,YAAY,YAAZA,YAAYA;IAAA,IAAe;MAAA,IAAA+N,sBAAA,GACb5E,WAAW,CAACqB,QAAQ;MAAA,OAAAjE,OAAA,CAAAC,OAAA,CAAAuH,sBAAA,GACT7B,eAAe,EAAE,GAChChC,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAAA4F,gBAAA;QAFvC,IAAMvX,OAAO,GAAAuX,gBAE0B;QAAC,IACpCvX,OAAO,KAAKP,UAAU,CAACO,OAAO;UAC9BP,UAAU,CAACO,OAAO,GAAGA,OAAO;UAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjBN,OAAO,EAAPA;WACH,CAAC;;;KAET,QAAAmS,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMqF,SAAS,GAAG,SAAZA,SAASA,CAAIxc,IAAI,EAAEX,KAAK,EAAEyK,OAAO;IAAA,OAAKtH,MAAM,CAACia,OAAO,CAACpd,KAAK,CAAC,CAACma,OAAO,CAAC,UAAAkD,KAAA,EAA4B;MAAA,IAA1BC,QAAQ,GAAAD,KAAA;QAAErD,UAAU,GAAAqD,KAAA;MAC5F,IAAME,SAAS,GAAM5c,IAAI,SAAI2c,QAAU;MACvC,IAAMjW,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;MACrC,IAAMC,YAAY,GAAGzV,MAAM,CAACC,KAAK,CAACiR,GAAG,CAACtY,IAAI,CAAC;MAC3C,CAAC6c,YAAY,IAAI,CAACpN,WAAW,CAAC4J,UAAU,CAAC,IAAK3S,KAAK,IAAI,CAACA,KAAK,CAACE,EAAG,KAC7D,CAAClH,YAAY,CAAC2Z,UAAU,CAAC,GACvBmD,SAAS,CAACI,SAAS,EAAEvD,UAAU,EAAEvP,OAAO,CAAC,GACzCqP,aAAa,CAACyD,SAAS,EAAEvD,UAAU,EAAEvP,OAAO,EAAE,IAAI,CAAC;KAC5D,CAAC;;EACF,IAAMgT,SAAS,GAAG,SAAZA,SAASA,CAAIC,UAAU,EAAEjc,YAAY,EAAEkc,QAAQ,EAAK;IACtD,IAAMxQ,WAAW,GAAGhK,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGsV,UAAU,GAC3CvV,MAAM,CAACC,MAAM,CAAC,EAAE,EAAED,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0D,cAAc,CAAC,EAAED,WAAW,CAAC,CAAC,GAAG9E,WAAW,CAACN,YAAY,CAAC,GACxGqF,cAAc,GACdrF,YAAa,CAAC;IACxB,IAAI,CAACic,UAAU,EAAE;MACbC,QAAQ,KAAK5V,MAAM,CAAC8G,QAAQ,GAAG,IAAI,CAAC;MACpC,OAAO1B,WAAW;;IAEtB,IAAMyQ,aAAa,GAAG,EAAE;IACxB,IAAMlc,MAAM,GAAG,IAAImc,GAAG,EAAE;IACxB,SAAAzL,UAAA,GAAA/H,+BAAA,CAAwBnE,qBAAqB,CAACwX,UAAU,CAAC,GAAArL,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAA7H,IAAA,GAAE;MAAA,IAAhDgT,SAAS,GAAAlL,MAAA,CAAArS,KAAA;MAChB2d,QAAQ,IAAI5V,MAAM,CAAC+G,KAAK,CAACpB,GAAG,CAAC6P,SAAS,CAAC;MACvCK,aAAa,CAACnM,IAAI,CAACpN,GAAG,CAAC8I,WAAW,EAAEoQ,SAAS,CAAC,CAAC;MAC/C7b,MAAM,CAAC4H,GAAG,CAACiU,SAAS,EAAElZ,GAAG,CAAC8I,WAAW,EAAEoQ,SAAS,CAAC,CAAC;;IAEtD,OAAOpd,KAAK,CAACC,OAAO,CAACsd,UAAU,CAAC,GAC1B,CAACE,aAAa,EAAElc,MAAM,CAAC,GACvBnB,QAAQ,CAACmB,MAAM,CAAC,CAAC,CAAC,CAAC,GACfyB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE1B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGvB,KAAK,CAACC,OAAO,CAACsB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAAX,MAAA,CAC/CW,MAAM,CAAC,CAAC,CAAC,IACbA,MAAM,CAAC,CAAC,CAAC;GAC1B;EACD,IAAMoc,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIzJ,aAAa,EAAE1T,IAAI,EAAU;IAAA,IAAdA,IAAI;MAAJA,IAAI,GAAG,EAAE;;IAC/CgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyN,aAAa,EAAE,mBAAmB,CAAC;IAC1D,KAAK,IAAMvS,GAAG,IAAIuS,aAAa,EAAE;MAC7B,IAAMrU,KAAK,GAAGqU,aAAa,CAACvS,GAAG,CAAC;MAChC,IAAMyb,SAAS,GAAG5c,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGmB,GAAG;MAChD,IAAMuF,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;MACrC,IAAI,CAAClW,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,EAAE;QACrB,IAAIhH,QAAQ,CAACP,KAAK,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;UACzC8d,iBAAiB,CAAC9d,KAAK,EAAEud,SAAS,CAAC;SACtC,MACI,IAAI,CAAClW,KAAK,EAAE;UACbiC,GAAG,CAACzC,WAAW,EAAE0W,SAAS,EAAEvd,KAAK,CAAC;;;;GAIjD;EACD,IAAM8N,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIzC,OAAO,EAAE1K,IAAI,EAAEod,MAAM,EAAEpO,IAAI,EAAE/B,uBAAuB,EAAOoQ,SAAS,EAASC,eAAe,EAAY;IAAA,IAA3ErQ,uBAAuB;MAAvBA,uBAAuB,GAAG,EAAE;;IAAA,IAAEoQ,SAAS;MAATA,SAAS,GAAG,IAAI;;IAAA,IAAEC,eAAe;MAAfA,eAAe,GAAG,IAAI;;IAC9HhW,WAAW,GAAG,IAAI;IAClB,IAAIgW,eAAe,IAAI5Z,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,EAAE;MACvC,IAAMud,MAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MAC/D0P,SAAS,IAAI1U,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAEud,MAAM,CAAC;;IAE3C5U,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEiN,uBAAuB,CAAC;IAC/C,IAAIzN,KAAK,CAACC,OAAO,CAACiE,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,CAAC,EAAE;MAC7C,IAAMud,OAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MACzE0P,SAAS,IAAI1U,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEud,OAAM,CAAC;MACjDC,eAAe,CAAC/Y,UAAU,CAACQ,MAAM,EAAEjF,IAAI,CAAC;;IAE5C,IAAIoD,eAAe,CAAC0B,aAAa,IAAIpB,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC,EAAE;MACtE,IAAMud,QAAM,GAAGH,MAAM,CAAC1Z,GAAG,CAACe,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC,EAAEgP,IAAI,CAAC5B,IAAI,EAAE4B,IAAI,CAACrB,IAAI,CAAC;MAChF0P,SAAS,IAAI1U,GAAG,CAAClE,UAAU,CAACK,aAAa,EAAE9E,IAAI,EAAEud,QAAM,CAAC;MACxDC,eAAe,CAAC/Y,UAAU,CAACK,aAAa,EAAE9E,IAAI,CAAC;;IAEnD,IAAIoD,eAAe,CAACyB,WAAW,IAAIzB,eAAe,CAACwB,OAAO,EAAE;MACxD+D,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACnP,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,EAAEhH,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC5KiN,uBAAuB,IACnBtE,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACnP,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,EAAEhH,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAChLwd,eAAe,CAAC/Y,UAAU,CAACI,WAAW,EAAE7E,IAAI,CAAC;;IAEjDmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBV,OAAO,EAAEyV,WAAW,CAACra,IAAI,EAAEsO,OAAO,CAACrB,uBAAuB,EAAEvC,OAAO,CAAC,CAAC;MACrE7F,WAAW,EAAEJ,UAAU,CAACI,WAAW;MACnCI,MAAM,EAAER,UAAU,CAACQ,MAAM;MACzBD,OAAO,EAAEP,UAAU,CAACO;KACvB,CAAC;GACL;EACD,IAAM6H,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI7M,IAAI;IAAA,OAAK0D,GAAG,CAACqU,UAAU,GAAG7R,WAAW,GAAGC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC;;EAC9F,IAAM0d,QAAQ,GAAG,SAAXA,QAAQA,CAAI1d,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IACvC,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAChC,IAAM6c,YAAY,GAAGzV,MAAM,CAACC,KAAK,CAACiR,GAAG,CAACtY,IAAI,CAAC;IAC3C2I,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAEX,KAAK,CAAC;IAC7B,IAAIwd,YAAY,EAAE;MACd1X,SAAS,CAACkC,KAAK,CAAC/B,IAAI,CAAC;QACjB0B,MAAM,EAAE3H,KAAK;QACbW,IAAI,EAAJA,IAAI;QACJ0O,OAAO,EAAE;OACZ,CAAC;MACF,IAAI,CAACtL,eAAe,CAACwB,OAAO,IAAIxB,eAAe,CAACyB,WAAW,KACvDiF,OAAO,CAAC+P,WAAW,EAAE;QACrBlR,GAAG,CAAClE,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAEyd,wBAAwB,CAACpe,KAAK,EAAEqE,GAAG,CAACyC,cAAc,EAAEnG,IAAI,EAAE,EAAE,CAAC,EAAE0D,GAAG,CAACe,UAAU,CAACI,WAAW,EAAE7E,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxImF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBtF,IAAI,EAAJA,IAAI;UACJ6E,WAAW,EAAEJ,UAAU,CAACI,WAAW;UACnCD,OAAO,EAAEyV,WAAW,CAACra,IAAI,EAAEX,KAAK;SACnC,CAAC;;KAET,MACI;MACDqH,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,IAAI,CAACrH,iBAAiB,CAACF,KAAK,CAAC,GACzCmd,SAAS,CAACxc,IAAI,EAAEX,KAAK,EAAEyK,OAAO,CAAC,GAC/BqP,aAAa,CAACnZ,IAAI,EAAEX,KAAK,EAAEyK,OAAO,EAAE,IAAI,CAAC;;IAEnDuO,cAAc,CAACrY,IAAI,CAAC,IAAImF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IAChDH,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC;MACjBtF,IAAI,EAAJA;KACH,CAAC;GACL;EACD,IAAMia,OAAO,YAAPA,OAAOA,CAAUja,IAAI,EAAE8J,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAAA,IAAK;MAAA,IAAAmW,OAAA,YAAAA;QAwB1C9a,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC9C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGwR,QAAQ,CAACjU,IAAI,CAAC,GAAG;UAAEA,IAAI,EAAJA;SAAM,GAAG,EAAG,CAAC,EAAE;UAAEiF,MAAM,EAAER,UAAU,CAACQ,MAAM;UAAEF,YAAY,EAAE;SAAO,CAAC,CAAC;QAC5I,IAAI+E,OAAO,CAACC,WAAW,IAAI,CAAC/E,OAAO,EAAE;UACjCqE,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;YAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;aAAEnB,IAAI,GAAG+c,WAAU,GAAG3V,MAAM,CAACP,KAAK,CAAC;;QAEjGzD,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;QACzC,OAAOvJ,OAAO;;MA5Bd,IAAM+X,WAAU,GAAGxX,qBAAqB,CAACvF,IAAI,CAAC;MAC9C,IAAIgF,OAAO;MACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MAAC,IAAAsb,OAAA;QAAA,IACC3I,WAAW,CAACqB,QAAQ;UAAA,OAAAjE,OAAA,CAAAC,OAAA,CACO8F,yBAAyB,CAACzZ,WAAW,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG+c,WAAU,CAAC,EAAApG,IAAA,WAArFkH,YAAY;YAClB7Y,OAAO,GAAGhF,IAAI,GACR+c,WAAU,CAAC1I,KAAK,CAAC,UAACrU,IAAI;cAAA,OAAK,CAAC0D,GAAG,CAACma,YAAY,EAAE7d,IAAI,CAAC;cAAC,GACpD8D,aAAa,CAAC+Z,YAAY,CAAC;;;UAAC,IAAAqC,OAAA;YAAA,IAG9BlgB,IAAI;cAAA,OAAA8U,OAAA,CAAAC,OAAA,CACaD,OAAO,CAACjT,GAAG,CAACkb,WAAU,CAACpS,GAAG,WAAQiS,SAAS;gBAAA,IAAK;kBAAA,IAAAmB,KAAA;kBAC7D,IAAMrX,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;kBAAC,OAAA9H,OAAA,CAAAC,OAAA,CACzB0D,YAAY,CAAC/R,KAAK,CAACE,EAAE,IAAAmX,KAAA,OAAAA,KAAA,CAAMnB,SAAS,IAAGlW,KAAK,EAAAqX,KAAA,IAAKrX,KAAK,CAAC;iBACvE,QAAAyQ,CAAA;kBAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;gBAAC,CAAC,EAAAR,IAAA,WAAAqH,YAAA;gBAHHhZ,OAAO,GAAGgZ,YAAA,CAGL3J,KAAK,CAAC5T,OAAO,CAAC;;;cAAC,OAAAqU,OAAA,CAAAC,OAAA,CAGd0D,YAAY,CAAC9R,OAAO,CAAC,EAAAgQ,IAAA;gBAC3B3R,OAAO,GAAGlB,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC;;;;UAAC,IAAAib,OAAA,IAAAA,OAAA,CAAAvJ,IAAA,SAAAuJ,OAAA,CAAAvJ,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAsL,OAAA,IAAAA,OAAA,CAAA1J,IAAA,GAAA0J,OAAA,CAAA1J,IAAA,CAAAsJ,OAAA,IAAAA,OAAA,CAAAI,OAAA;KAStD,QAAAlJ,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM+a,aAAa,YAAbA,aAAaA,CAAUpoB,OAAO,EAA0B9J,IAAI;IAAA,IAArC8J,OAAO;MAAPA,OAAO,GAAG;QAAE+nB,UAAU,EAAE;OAAO;;IAAA,IAAW;MAAA,IAAAM,OAAA,YAAAA;QAwBnEhtB,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC9C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGwR,QAAQ,CAACjU,IAAI,CAAC,GAAG;UAAEA,IAAI,EAAJA;SAAM,GAAG,EAAG,CAAC,EAAE;UAAEiF,MAAM,EAAER,UAAU,CAACQ,MAAM;UAAEF,YAAY,EAAE;SAAO,CAAC,CAAC;QAC5I,IAAI+E,OAAO,CAACC,WAAW,IAAI,CAAC/E,OAAO,EAAE;UACjCqE,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;YAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;aAAEnB,IAAI,GAAG+c,YAAU,GAAG3V,MAAM,CAACP,KAAK,CAAC;;QAEjGzD,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;QACzC,OAAOvJ,OAAO;;MA5Bd,IAAM+X,YAAU,GAAGxX,qBAAqB,CAACvF,IAAI,CAAC;MAC9C,IAAIgF,OAAO;MACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MAAC,IAAAqtB,OAAA;QAAA,IACC1a,WAAW,CAACqB,QAAQ;UAAA,OAAAjE,OAAA,CAAAC,OAAA,CACO8F,yBAAyB,CAACzZ,WAAW,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG+c,YAAU,CAAC,EAAApG,IAAA,WAArFkH,YAAY;YAClB7Y,OAAO,GAAGhF,IAAI,GACR+c,YAAU,CAAC1I,KAAK,CAAC,UAACrU,IAAI;cAAA,OAAK,CAAC0D,GAAG,CAACma,YAAY,EAAE7d,IAAI,CAAC;cAAC,GACpD8D,aAAa,CAAC+Z,YAAY,CAAC;;;UAAC,IAAAwU,OAAA;YAAA,IAG9BryB,IAAI;cAAA,OAAA8U,OAAA,CAAAC,OAAA,CACaD,OAAO,CAACjT,GAAG,CAACkb,YAAU,CAACpS,GAAG,WAAQiS,SAAS;gBAAA,IAAK;kBAAA,IAAAyB,KAAA;kBAC7D,IAAM3X,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;kBAAC,OAAA9H,OAAA,CAAAC,OAAA,CACzB0D,YAAY,CAAC/R,KAAK,CAACE,EAAE,IAAAyX,KAAA,OAAAA,KAAA,CAAMzB,SAAS,IAAGlW,KAAK,EAAA2X,KAAA,IAAK3X,KAAK,CAAC;iBACvE,QAAAyQ,CAAA;kBAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;gBAAC,CAAC,EAAAR,IAAA,WAAA2H,aAAA;gBAHHtZ,OAAO,GAAGsZ,aAAA,CAGLjK,KAAK,CAAC5T,OAAO,CAAC;;;cAAC,OAAAqU,OAAA,CAAAC,OAAA,CAGd0D,YAAY,CAAC9R,OAAO,EAAE,KAAK,EAAE;gBAAEkrB,UAAU,EAAE/nB,OAAO,CAAC+nB;eAAY,CAAC,EAAAlb,IAAA;gBACtE3R,OAAO,GAAGlB,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC;;;;UAAC,IAAAotB,OAAA,IAAAA,OAAA,CAAA1b,IAAA,SAAA0b,OAAA,CAAA1b,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAqd,OAAA,IAAAA,OAAA,CAAAzb,IAAA,GAAAyb,OAAA,CAAAzb,IAAA,CAAAwb,OAAA,IAAAA,OAAA,CAAAC,OAAA;KAStD,QAAAjb,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAM8G,iBAAiB,YAAjBA,iBAAiBA,CAAUje,IAAI,EAAE8J,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAAA,IAAK;MAAA,IAAAwoB,OAAA,YAAAA;QA2BpD,IAAIxoB,OAAO,CAACC,WAAW,IAAI,CAAC/E,OAAO,EAAE;UACjCqE,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;YAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;aAAEnB,IAAI,GAAG+c,YAAU,GAAG3V,MAAM,CAACP,KAAK,CAAC;;QAEjGzD,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;QAEzC,OAAOvJ,OAAO;;MA/Bd,IAAM+X,YAAU,GAAGxX,qBAAqB,CAACvF,IAAI,CAAC;MAC9C,IAAIgF,OAAO;MAIXgB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAExB,UAAU,CAACQ,MAAM,CAAC;MAAC,IAAAstB,OAAA;QAAA,IACjD7a,WAAW,CAACqB,QAAQ;UAAA,OAAAjE,OAAA,CAAAC,OAAA,CACO8F,yBAAyB,CAACzZ,WAAW,CAACpB,IAAI,CAAC,GAAGA,IAAI,GAAG+c,YAAU,CAAC,EAAApG,IAAA,WAArFkH,YAAY;YAClB7Y,OAAO,GAAGhF,IAAI,GACR+c,YAAU,CAAC1I,KAAK,CAAC,UAACrU,IAAI;cAAA,OAAK,CAAC0D,GAAG,CAACma,YAAY,EAAE7d,IAAI,CAAC;cAAC,GACpD8D,aAAa,CAAC+Z,YAAY,CAAC;;;UAAC,IAAA2U,OAAA;YAAA,IAG9BxyB,IAAI;cAAA,OAAA8U,OAAA,CAAAC,OAAA,CACaD,OAAO,CAACjT,GAAG,CAACkb,YAAU,CAACpS,GAAG,WAAQiS,SAAS;gBAAA,IAAK;kBAAA,IAAAsT,KAAA;kBAC7D,IAAMxpB,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAEiW,SAAS,CAAC;kBAAC,OAAA9H,OAAA,CAAAC,OAAA,CAEzB0D,YAAY,CAAC/R,KAAK,CAACE,EAAE,IAAAspB,KAAA,OAAAA,KAAA,CAAMtT,SAAS,IAAGlW,KAAK,EAAAwpB,KAAA,IAAKxpB,KAAK,CAAC;iBACvE,QAAAyQ,CAAA;kBAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;gBAAC,CAAC,EAAAR,IAAA,WAAA8b,aAAA;gBAJHztB,OAAO,GAAGytB,aAAA,CAILpe,KAAK,CAAC5T,OAAO,CAAC;;;cAAC,OAAAqU,OAAA,CAAAC,OAAA,CAGJ0D,YAAY,CAAC9R,OAAO,EAAE,IAAI,CAAC,EAAAgQ,IAAA,WAAA+b,cAAA;gBAA3C1tB,OAAO,GAAA0tB,cAAoC;;;;UAAC,IAAAF,OAAA,IAAAA,OAAA,CAAA7b,IAAA,SAAA6b,OAAA,CAAA7b,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAwd,OAAA,IAAAA,OAAA,CAAA5b,IAAA,GAAA4b,OAAA,CAAA5b,IAAA,CAAA2b,OAAA,IAAAA,OAAA,CAAAC,OAAA;KAWvD,QAAApb,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EACD,IAAMwb,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIf,MAAM;IAAA,IAANA,MAAM;MAANA,MAAM,GAAG,KAAK;;IAAA,iBAAYgB,IAAI;MAAA,IAAJA,IAAI;QAAJA,IAAI,GAAG,KAAK;;MAAA,IAAK;QAAA,IAAAC,OAAA,YAAAA;UA0C3EzvB,eAAe,CAAC4B,OAAO,IAAIuJ,YAAY,EAAE;UAEzC,OAAOvJ,OAAO;;QA1Cd,IAAIA,OAAO;QAIXgB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,oCAAoC,EAAExB,UAAU,CAACQ,MAAM,CAAC;QAAC,IAAA6tB,OAAA;UAAA,IAC5Epb,WAAW,CAACqB,QAAQ;YAAA,OAAAjE,OAAA,CAAAC,OAAA,CAEO8F,yBAAyB,CAACkC,UAAU,CAAC,EAAApG,IAAA,WAA1DkH,YAAY;cAClB7Y,OAAO,GAIHlB,aAAa,CAAC+Z,YAAY,CAAC;;;YAAC,IAAAkV,OAAA;cAAA,IAW5BH,IAAI;gBAAA,OAAA9d,OAAA,CAAAC,OAAA,CACY+c,sBAAsB,CAACnrB,OAAO,EAAE,KAAK,EAAE;kBACnDoU,KAAK,EAAE;iBACV,CAAC,EAAApE,IAAA,WAAAqc,qBAAA;kBAFFhuB,OAAO,GAAAguB,qBAEL;;;gBAAC,OAAAle,OAAA,CAAAC,OAAA,CAEa0D,YAAY,CAAC9R,OAAO,EAAE,IAAI,EAAE;kBACxCoU,KAAK,EAAE;iBACV,EAAE6W,MAAM,CAAC,EAAAjb,IAAA,WAAAsc,cAAA;kBAFVjuB,OAAO,GAAAiuB,cAEG;;;;YAAC,IAAAF,OAAA,IAAAA,OAAA,CAAApc,IAAA,SAAAoc,OAAA,CAAApc,IAAA;;;QAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAA+d,OAAA,IAAAA,OAAA,CAAAnc,IAAA,GAAAmc,OAAA,CAAAnc,IAAA,CAAAkc,OAAA,IAAAA,OAAA,CAAAC,OAAA;OAatB,QAAA3b,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;;EACD,IAAMyC,SAAS,GAAG,SAAZA,SAASA,CAAImD,UAAU,EAAK;IAE9B,IAAM/V,MAAM,GAAGxE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0D,cAAc,CAAC,EAAED,WAAW,CAAC;IAC5E,OAAO9E,WAAW,CAAC2b,UAAU,CAAC,GACxB/V,MAAM,GACNiN,QAAQ,CAAC8I,UAAU,CAAC,GAChBrZ,GAAG,CAACsD,MAAM,EAAE+V,UAAU,CAAC,GACvBA,UAAU,CAACpS,GAAG,CAAC,UAAC3K,IAAI;MAAA,OAAK0D,GAAG,CAACsD,MAAM,EAAEhH,IAAI,CAAC;MAAC;GACxD;EACD,IAAMwe,WAAW,GAAG,SAAdA,WAAWA,CAAIxe,IAAI,EAAK;IAC1BA,IAAI,GACEuF,qBAAqB,CAACvF,IAAI,CAAC,CAACwZ,OAAO,CAAC,UAACiF,SAAS;MAAA,OAAKzS,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEwZ,SAAS,CAAC;MAAC,GACtFha,UAAU,CAACQ,MAAM,GAAG,EAAG;IAC9BE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAER,UAAU,CAACQ;KACtB,CAAC;GACL;EACD,IAAMyZ,QAAQ,GAAG,SAAXA,QAAQA,CAAI1e,IAAI,EAAEkI,KAAK,EAAE4B,OAAO,EAAK;IACvC,IAAMrC,GAAG,GAAG,CAAC/D,GAAG,CAACiD,OAAO,EAAE3G,IAAI,EAAE;MAAE4G,EAAE,EAAE;KAAI,CAAC,CAACA,EAAE,IAAI,EAAE,EAAEa,GAAG;IACzDkB,GAAG,CAAClE,UAAU,CAACQ,MAAM,EAAEjF,IAAI,EAAEwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyF,KAAK,CAAC,EAAE;MAAET,GAAG,EAAHA;KAAK,CAAC,CAAC;IAC9EtC,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBtF,IAAI,EAAJA,IAAI;MACJiF,MAAM,EAAER,UAAU,CAACQ,MAAM;MACzBD,OAAO,EAAE;KACZ,CAAC;IACF8E,OAAO,IAAIA,OAAO,CAACC,WAAW,IAAItC,GAAG,IAAIA,GAAG,CAACE,KAAK,IAAIF,GAAG,CAACE,KAAK,EAAE;GACpE;EACD,IAAMwG,KAAK,GAAG,SAARA,KAAKA,CAAIyO,SAAS,EAAE9b,YAAY;IAAA,OAAK4V,UAAU,CAACkG,SAAS,CAAC,GAC1DzX,SAAS,CAACgJ,KAAK,CAAC9I,SAAS,CAAC;MACxBC,IAAI,EAAE,SAAAA,KAACqZ,IAAI;QAAA,OAAK/B,SAAS,CAACE,SAAS,CAACnc,SAAS,EAAEG,YAAY,CAAC,EAAE6d,IAAI,CAAC;;KACtE,CAAC,GACA7B,SAAS,CAACF,SAAS,EAAE9b,YAAY,EAAE,IAAI,CAAC;;EAC9C,IAAMyG,UAAU,GAAG,SAAbA,UAAUA,CAAIvH,IAAI,EAAE8J,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAClC,SAAA8U,UAAA,GAAAlV,+BAAA,CAAwB1J,IAAI,GAAGuF,qBAAqB,CAACvF,IAAI,CAAC,GAAGoH,MAAM,CAACP,KAAK,GAAAgY,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAhV,IAAA,GAAE;MAAA,IAAhE6U,SAAS,GAAAI,MAAA,CAAAxf,KAAA;MAChB+H,MAAM,CAACP,KAAK,UAAO,CAAC4X,SAAS,CAAC;MAC9BrX,MAAM,CAACC,KAAK,UAAO,CAACoX,SAAS,CAAC;MAC9B,IAAI/a,GAAG,CAACiD,OAAO,EAAE8X,SAAS,CAAC,EAAE;QACzB,IAAI,CAAC3U,OAAO,CAACgV,SAAS,EAAE;UACpB9S,KAAK,CAACrF,OAAO,EAAE8X,SAAS,CAAC;UACzBzS,KAAK,CAAC9F,WAAW,EAAEuY,SAAS,CAAC;;QAEjC,CAAC3U,OAAO,CAACiV,SAAS,IAAI/S,KAAK,CAACvH,UAAU,CAACQ,MAAM,EAAEwZ,SAAS,CAAC;QACzD,CAAC3U,OAAO,CAACkV,SAAS,IAAIhT,KAAK,CAACvH,UAAU,CAACI,WAAW,EAAE4Z,SAAS,CAAC;QAC9D,CAAC3U,OAAO,CAACmV,WAAW,IAAIjT,KAAK,CAACvH,UAAU,CAACK,aAAa,EAAE2Z,SAAS,CAAC;QAClE,CAAC/G,WAAW,CAAC5R,gBAAgB,IACzB,CAACgE,OAAO,CAACoV,gBAAgB,IACzBlT,KAAK,CAAC7F,cAAc,EAAEsY,SAAS,CAAC;;;IAG5CtZ,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC,EAAE,CAAC;IACxBH,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC9C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgC,UAAU,CAAC,EAAG,CAACqF,OAAO,CAACkV,SAAS,GAAG,EAAE,GAAG;MAAEpa,OAAO,EAAEyV,WAAW;KAAK,CAAC,CAAC;IAC1H,CAACvQ,OAAO,CAACqV,WAAW,IAAI5Q,YAAY,EAAE;GACzC;EACD,IAAM6Q,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIpf,IAAI,EAAEqf,QAAQ,EAAEvV,OAAO,EAAK;IAClDxD,QAAQ,CAACtG,IAAI,EAAE8J,OAAO,CAAC;IACvB,IAAIpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAC9B,IAAMyH,GAAG,GAAGrG,WAAW,CAACie,QAAQ,CAAChgB,KAAK,CAAC,GACjCggB,QAAQ,CAACC,gBAAgB,GACrBD,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IACvDD,QAAQ,GACNA,QAAQ,GACZA,QAAQ;IACd,IAAMnK,iBAAiB,GAAGqK,yBAAyB,CAAC9X,GAAG,CAAC;IACxD,IAAIA,GAAG,KAAKf,KAAK,CAACE,EAAE,CAACa,GAAG,IACnByN,iBAAiB,IACdlU,OAAO,CAAC0F,KAAK,CAACE,EAAE,CAACiD,IAAI,IAAI,EAAE,CAAC,CAAC9F,IAAI,CAAC,UAAC+N,MAAM;MAAA,OAAKA,MAAM,KAAKrK,GAAG;MAAE,EAAE;MACpE;;IAEJf,KAAK,GAAG;MACJE,EAAE,EAAEsO,iBAAiB,GACf1S,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiE,KAAK,CAACE,EAAE,CAAC,EAAE;QACzCiD,IAAI,KAAAzJ,MAAA,CACGY,OAAO,CAAC0F,KAAK,CAACE,EAAE,CAACiD,IAAI,IAAI,EAAE,CAAC,CAACrJ,MAAM,CAAC,UAACiH,GAAG;UAAA,OAAK8R,aAAa,CAAC9R,GAAG,CAAC,IAAI+I,QAAQ,CAACgP,QAAQ,CAAC/X,GAAG,CAAC;UAAC,GAC7FA,GAAG,EACN;QAAEA,GAAG,EAAE;UAAEvI,IAAI,EAAEuI,GAAG,CAACvI,IAAI;UAAEc,IAAI,EAAJA;;OAC7B,CAAC,GAAGwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiE,KAAK,CAACE,EAAE,CAAC,EAAE;QAAEa,GAAG,EAAHA;OAAK;KAC9D;IACDkB,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAE0G,KAAK,CAAC;IACzBwV,yBAAyB,CAAClc,IAAI,EAAEyH,GAAG,CAAC;GACvC;EACD,IAAMnB,QAAQ,GAAG,SAAXA,QAAQA,CAAItG,IAAI,EAAE8J,OAAO,EAAU;IAAA,IAAjBA,OAAO;MAAPA,OAAO,GAAG,EAAE;;IAChC,IAAMpD,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;IAChCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,kBAAkB,EAAES,KAAK,EAAE1G,IAAI,EAAE2G,OAAO,CAAC;IAChEgC,GAAG,CAAChC,OAAO,EAAE3G,IAAI,EAAE;MACf4G,EAAE,EAAEpE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGiE,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;QAAEa,GAAG,EAAE;UAAEzH,IAAI,EAAJA;;OAAS,CAAC,EAAE;QAAEA,IAAI,EAAJA,IAAI;QAAE6G,KAAK,EAAE;OAAM,CAAC,EAAEiD,OAAO;KACzI,CAAC;IACF9D,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGiE,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;MAAEa,GAAG,EAAE;QAAEzH,IAAI,EAAJA;;KAAS,CAAC,EAAE;MAAEA,IAAI,EAAJA,IAAI;MAAE6G,KAAK,EAAE;KAAM,CAAC,EAAEiD,OAAO,CAAC,EAAE,wBAAwB,EAAEpD,KAAK,EAAE1G,IAAI,EAAE2G,OAAO,CAAC;IAC3M,IAAImD,OAAO,CAACzK,KAAK,EAAE;MACfsJ,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAE8J,OAAO,CAACzK,KAAK,CAAC;;IAEzC,IAAI,CAAC+B,WAAW,CAAC0I,OAAO,CAACzF,QAAQ,CAAC,IAC9BqC,KAAK,IACLA,KAAK,CAACE,EAAE,IACRF,KAAK,CAACE,EAAE,CAACa,GAAG,CAACpD,QAAQ,KAAKyF,OAAO,CAACzF,QAAQ,EAAE;MAC5CsE,GAAG,CAACzC,WAAW,EAAElG,IAAI,EAAE8J,OAAO,CAACzF,QAAQ,GAAG1D,SAAS,GAAG+F,KAAK,CAACE,EAAE,CAACa,GAAG,CAACpI,KAAK,CAAC;;IAE7E+H,MAAM,CAACP,KAAK,CAACkG,GAAG,CAAC/M,IAAI,CAAC;IACtB,CAAC0G,KAAK,IAAIwV,yBAAyB,CAAClc,IAAI,EAAEW,SAAS,EAAE,IAAI,CAAC;IAC1D,OAAO6W,mBAAiB,GAClB;MAAExX,IAAI,EAAEA;KAAM,GACdwC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;MAAEzC,IAAI,EAAJA;KAAM,EAAGoB,WAAW,CAAC0I,OAAO,CAACzF,QAAQ,CAAC,GAChE,EAAE,GACF;MAAEA,QAAQ,EAAEyF,OAAO,CAACzF;KAAW,CAAC,EAAE;MACpC3C,QAAQ,EAAE2Z,YAAY;MAAE5Z,MAAM,EAAE4Z,YAAY;MAAE5T,GAAG,EAAE,SAAAA,IAACA,KAAG,EAAK;QACxD,IAAIA,KAAG,EAAE;UACL2X,gBAAgB,CAACpf,IAAI,EAAEyH,KAAG,EAAEqC,OAAO,CAAC;SACvC,MACI;UACD,IAAMpD,MAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,EAAE,EAAE,CAAC;UACpC,IAAMkH,iBAAiB,GAAGwQ,WAAW,CAAC5R,gBAAgB,IAAIgE,OAAO,CAAChE,gBAAgB;UAClF,IAAIY,MAAK,CAACE,EAAE,EAAE;YACVF,MAAK,CAACE,EAAE,CAACC,KAAK,GAAG,KAAK;;UAE1BK,iBAAiB,IACb,EAAEC,kBAAkB,CAACC,MAAM,CAACC,KAAK,EAAErH,IAAI,CAAC,IAAIsH,WAAW,CAAC,IACxDF,MAAM,CAAC6Q,OAAO,CAAClL,GAAG,CAAC/M,IAAI,CAAC;;;KAGvC,CAAC;GACT;EACD,IAAMyf,YAAY,GAAG,SAAfA,YAAYA,CAAIC,OAAO,EAAEC,SAAS;IAAA,iBAAYxI,CAAC;MAAA,IAAK;QACtD,IAAIA,CAAC,EAAE;UACHA,CAAC,CAACyI,cAAc,IAAIzI,CAAC,CAACyI,cAAc,EAAE;UACtCzI,CAAC,CAAC0I,OAAO,IAAI1I,CAAC,CAAC0I,OAAO,EAAE;;QAE5B,IAAIC,iBAAiB,GAAG,IAAI;QAC5B,IAAItT,WAAW,GAAGhK,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyD,WAAW,CAAC;QAEhDf,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBuS,YAAY,EAAE;SACjB,CAAC;QAAC,OAAA/C,OAAA,CAAAC,OAAA,CAAAgL,gBAAA;UAAA,OAAAC,MAAA,aACC;YAAA,SAAAkT;cAAA,IAAAC,OAAA;gBAAA,IASIrvB,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC,IAChCzC,MAAM,CAACmB,IAAI,CAACc,UAAU,CAACQ,MAAM,CAAC,CAACoP,KAAK,CAAC,UAACrU,IAAI;kBAAA,OAAK0D,GAAG,CAAC8I,WAAW,EAAExM,IAAI,CAAC;kBAAC;kBACtEmF,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;oBACjBL,MAAM,EAAE,EAAE;oBACV4S,YAAY,EAAE;mBACjB,CAAC;kBAAC,OAAA/C,OAAA,CAAAC,OAAA,CACG2K,OAAO,CAAClT,WAAW,EAAE2K,CAAC,CAAC,EAAAR,IAAA;;kBAAA,IAAAyc,OAAA,YAAAA,QAAAhT,UAAA;oBAG7BA,UAAA;oBACA1I,WAAW,CAACH,gBAAgB,IACxBlO,YAAY,CAAC1C,OAAO,EAAE,UAACxF,GAAG;sBAAA,OAAKuC,GAAG,CAACe,UAAU,CAACQ,MAAM,EAAE9D,GAAG,CAAC;uBAAEiG,MAAM,CAACP,KAAK,CAAC;;kBAAC,OAF9E8Y,SAAS,GAAA7K,OAAA,CAAAC,OAAA,CAAW4K,SAAS,CAAClb,UAAU,CAACQ,MAAM,EAAEkS,CAAC,CAAC,EAAAR,IAAA,CAAAyc,OAAA,IAAAA,OAAA,CAAnDzT,SAAS;;;cAAA,IAAAwT,OAAA,IAAAA,OAAA,CAAAxc,IAAA,SAAAwc,OAAA,CAAAxc,IAAA;;YAAA,IAAA0c,OAAA;cAAA,IAjBT3b,WAAW,CAACqB,QAAQ;gBAAA,OAAAjE,OAAA,CAAAC,OAAA,CACa0F,eAAe,EAAE,EAAA9D,IAAA,WAAA6a,KAAA;kBAAA,IAA1CvsB,MAAM,GAAAusB,KAAA,CAANvsB,MAAM;oBAAE+B,MAAM,GAAAwqB,KAAA,CAANxqB,MAAM;kBACtBvC,UAAU,CAACQ,MAAM,GAAGA,MAAM;kBAC1BuH,WAAW,GAAGxF,MAAM;;;gBAAC,OAAA8N,OAAA,CAAAC,OAAA,CAGf0D,YAAY,CAAC9R,OAAO,CAAC,EAAAgQ,IAAA;;;YAAA,OAAA0c,OAAA,IAAAA,OAAA,CAAA1c,IAAA,GAAA0c,OAAA,CAAA1c,IAAA,CAAAuc,OAAA,IAAAA,OAAA,CAAAG,OAAA;WAelC,YACM9S,GAAG,EAAE;YACRT,iBAAiB,GAAG,KAAK;YACzB,MAAMS,GAAG;WACZ;qBAAAC,UAAA,EAAAC,QAAA;UAEGhc,UAAU,CAACuP,WAAW,GAAG,IAAI;UAC7B7O,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;YACjB0O,WAAW,EAAE,IAAI;YACjB6D,YAAY,EAAE,KAAK;YACnBC,kBAAkB,EAAEhU,aAAa,CAACW,UAAU,CAACQ,MAAM,CAAC,IAAI6a,iBAAiB;YACzElI,WAAW,EAAEnT,UAAU,CAACmT,WAAW,GAAG,CAAC;YACvC3S,MAAM,EAAER,UAAU,CAACQ;WACtB,CAAC;UAAC,IAAAub,UAAA,QAAAC,QAAA;UAAA,OAAAA,QAAA;;OAEV,QAAAtJ,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;;EACD,IAAMuJ,KAAK,GAAG,SAARA,KAAKA,CAAI1Z,MAAM,EAAE2Z,gBAAgB,EAAU;IAAA,IAA1BA,gBAAgB;MAAhBA,gBAAgB,GAAG,EAAE;;IACxC,IAAMC,aAAa,GAAG5Z,MAAM,IAAIb,cAAc;IAC9C,IAAImT,KAAK,IAAI,CAACqH,gBAAgB,CAACE,UAAU,EAAE;MACvC,SAAAC,UAAA,GAAApX,+BAAA,CAAmBtC,MAAM,CAACP,KAAK,GAAAka,MAAA,IAAAA,MAAA,GAAAD,UAAA,IAAAlX,IAAA,GAAE;QAAA,IAAtB5J,IAAI,GAAA+gB,MAAA,CAAA1hB,KAAA;QACX,IAAMqH,KAAK,GAAGhD,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC;QAChC,IAAI0G,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;UACnB,IAAMoO,QAAQ,GAAGxV,KAAK,CAACC,OAAO,CAACiH,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,GACvCnD,KAAK,CAACE,EAAE,CAACiD,IAAI,CAAC,CAAC,CAAC,GAChBnD,KAAK,CAACE,EAAE,CAACa,GAAG;UAClB,IAAI;YACA8R,aAAa,CAACvE,QAAQ,CAAC,IAAIA,QAAQ,CAACgM,OAAO,CAAC,MAAM,CAAC,CAACN,KAAK,EAAE;YAC3D;WACH,CACD,OAAOlN,EAAE,EAAE;;;;IAIvB,IAAI,CAACmN,gBAAgB,CAACM,iBAAiB,EAAE;MACrC9a,cAAc,GAAG3D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;MACjD1a,WAAW,GAAG1D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;;IAElD,IAAI,CAACD,gBAAgB,CAACE,UAAU,EAAE;MAC9Bla,OAAO,GAAG,EAAE;MACZT,WAAW,GAAG,EAAE;MAChBf,SAAS,CAACf,OAAO,CAACkB,IAAI,CAAC;QACnB0B,MAAM,EAAE2Z,gBAAgB,CAACM,iBAAiB,GACpC9a,cAAc,GACd3D,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa;OACxC,CAAC;MACFzb,SAAS,CAACgJ,KAAK,CAAC7I,IAAI,CAAC,EAAE,CAAC;MACxBH,SAAS,CAACkC,KAAK,CAAC/B,IAAI,CAAC;QACjB0B,MAAM,EAAExE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEme,aAAa,CAAC;QACxClS,OAAO,EAAE;OACZ,CAAC;;IAENtH,MAAM,GAAG;MACLP,KAAK,EAAE,IAAImR,GAAG,EAAE;MAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;MAClB3Q,KAAK,EAAE,IAAI2Q,GAAG,EAAE;MAChB7J,KAAK,EAAE,IAAI6J,GAAG,EAAE;MAChB9J,QAAQ,EAAE;KACb;IACD/I,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBsS,WAAW,EAAE+I,gBAAgB,CAACO,eAAe,GACvCzc,UAAU,CAACmT,WAAW,GACtB,CAAC;MACPhT,OAAO,EAAE+b,gBAAgB,CAAC3B,SAAS,GAC7Bva,UAAU,CAACG,OAAO,GAClB+b,gBAAgB,CAACM,iBAAiB,GAC9B3R,SAAS,CAACtI,MAAM,EAAEb,cAAc,CAAC,GACjC,KAAK;MACf6N,WAAW,EAAE2M,gBAAgB,CAACQ,eAAe,GACvC1c,UAAU,CAACuP,WAAW,GACtB,KAAK;MACXnP,WAAW,EAAE8b,gBAAgB,CAAC3B,SAAS,GAAGva,UAAU,CAACI,WAAW,GAAG,EAAE;MACrEC,aAAa,EAAE6b,gBAAgB,CAAC1B,WAAW,GACrCxa,UAAU,CAACK,aAAa,GACxB,EAAE;MACRG,MAAM,EAAE0b,gBAAgB,CAACS,UAAU,GAAG3c,UAAU,CAACQ,MAAM,GAAG,EAAE;MAC5D4S,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACvB,CAAC;IACFC,UAAU,GAAG,CAAC,CAAC4I,gBAAgB,CAACxB,WAAW;GAC9C;EACD,IAAMkC,QAAQ,GAAG,SAAXA,QAAQA,CAAIrhB,IAAI;IAAA,OAAK0D,GAAG,CAACiD,OAAO,EAAE3G,IAAI,CAAC,CAAC4G,EAAE,CAACa,GAAG,CAACE,KAAK,EAAE;;EAC5D,OAAO;IACHvD,OAAO,EAAE;MACLkC,QAAQ,EAARA,QAAQ;MACRiB,UAAU,EAAVA,UAAU;MACV8S,WAAW,EAAXA,WAAW;MACXyC,SAAS,EAATA,SAAS;MACTvO,YAAY,EAAZA,YAAY;MACZ4O,iBAAiB,EAAjBA,iBAAiB;MACjBhQ,qBAAqB,EAArBA,qBAAqB;MACrBN,mBAAmB,EAAnBA,mBAAmB;MACnB1H,SAAS,EAATA,SAAS;MACT+B,iBAAiB,EAAEwQ,WAAW,CAAC5R,gBAAgB;MAC/Ca,OAAO,EAAPA,OAAO;MACPvD,eAAe,EAAfA,eAAe;MACf,IAAI8C,WAAWA,GAAG;QACd,OAAOA,WAAW;OACrB;MACD,IAAIA,WAAWA,CAAC7G,KAAK,EAAE;QACnB6G,WAAW,GAAG7G,KAAK;OACtB;MACD,IAAI0Y,UAAUA,GAAG;QACb,OAAOA,UAAU;OACpB;MACD,IAAIA,UAAUA,CAAC1Y,KAAK,EAAE;QAClB0Y,UAAU,GAAG1Y,KAAK;OACrB;MACD,IAAI8G,cAAcA,GAAG;QACjB,OAAOA,cAAc;OACxB;MACD,IAAIA,cAAcA,CAAC9G,KAAK,EAAE;QACtB8G,cAAc,GAAG9G,KAAK;OACzB;MACD,IAAI+H,MAAMA,GAAG;QACT,OAAOA,MAAM;OAChB;MACD,IAAIA,MAAMA,CAAC/H,KAAK,EAAE;QACd+H,MAAM,GAAG/H,KAAK;OACjB;MACDiI,WAAW,EAAE;QACT,IAAI5G,GAAGA,GAAG;UACN,OAAO4G,WAAW;SACrB;QACD,IAAI5G,GAAGA,CAACrB,KAAK,EAAE;UACXiI,WAAW,GAAGjI,KAAK;;OAE1B;MACDoF,UAAU,EAAE;QACR,IAAI/D,GAAGA,GAAG;UACN,OAAO+D,UAAU;SACpB;QACD,IAAI/D,GAAGA,CAACrB,KAAK,EAAE;UACXoF,UAAU,GAAGpF,KAAK;;OAEzB;MACDiiB,YAAY,EAAE,SAAAA,aAACxX,OAAO,EAAK;QACvB4N,WAAW,GAAGlV,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4U,gBAAc,CAAC,EAAEvN,OAAO,CAAC;;KAE9E;IACDmQ,OAAO,EAAPA,OAAO;IACPgE,iBAAiB,EAAjBA,iBAAiB;IACjB0U,0BAA0B,EAA1BA,0BAA0B;IAC1BT,aAAa,EAAbA,aAAa;IACb5rB,QAAQ,EAARA,QAAQ;IACRmZ,YAAY,EAAZA,YAAY;IACZtR,KAAK,EAALA,KAAK;IACLuP,QAAQ,EAARA,QAAQ;IACR9D,SAAS,EAATA,SAAS;IACT8G,KAAK,EAALA,KAAK;IACLlC,WAAW,EAAXA,WAAW;IACXjX,UAAU,EAAVA,UAAU;IACVmX,QAAQ,EAARA,QAAQ;IACR2C,QAAQ,EAARA;GACH;AACL;;ACv8BO,SAASE,SAAOA,CAACxe,KAAK,EAAO;EAAA,IAAZA,KAAK;IAALA,KAAK,GAAG,EAAE;;EAC9B,IAAMye,YAAY,GAAG7e,YAAY,EAAE;EACnC,IAAA6B,eAAA,GAAqC7B,cAAc,CAAC;MAChDiC,OAAO,EAAE,KAAK;MACdG,YAAY,EAAE,KAAK;MACnBF,WAAW,EAAE,EAAE;MACfmP,WAAW,EAAE,KAAK;MAClB4D,WAAW,EAAE,CAAC;MACd9S,aAAa,EAAE,EAAE;MACjB+S,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE,KAAK;MACzB9S,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;KACX,CAAC;IAXK9B,SAAS,GAAAqB,eAAA;IAAEE,eAAe,GAAAF,eAAA;EAYjC,IAAIgd,YAAY,CAAClhB,OAAO,EAAE;IACtBkhB,YAAY,CAAClhB,OAAO,CAAC8D,OAAO,CAACkd,YAAY,CAACve,KAAK,CAAC;GACnD,MACI;IACDye,YAAY,CAAClhB,OAAO,GAAGkC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEkvB,mBAAmB,CAAC5uB,KAAK,CAAC,CAAC,EAAE;MAAEI,SAAS,EAATA;KAAW,CAAC;;EAEtG,IAAMiB,OAAO,GAAGod,YAAY,CAAClhB,OAAO,CAAC8D,OAAO;EAC5CzB,eAAe,CAAC,YAAM;IAClB,IAAMuC,qBAAqB,GAAGd,OAAO,CAACe,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAI,WAAAA,KAACnC,SAAS,EAAE;QAEZ,IAAIsC,qBAAqB,CAACtC,SAAS,EAAEiB,OAAO,CAAChB,eAAe,EAAE,IAAI,CAAC,EAAE;UACjEgB,OAAO,CAACK,UAAU,CAAC/D,GAAG,GAAG8B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE2B,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC,EAAEyC,SAAS,CAAC;UAC5FuB,eAAe,CAAClC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE2B,OAAO,CAACK,UAAU,CAAC/D,GAAG,CAAC,CAAC;;;KAGrE,CAAC;IACF,IAAMghB,yBAAyB,GAAGtd,OAAO,CAACe,SAAS,CAACkC,KAAK,CAAChC,SAAS,CAAC;MAChEC,IAAI,WAAAA,KAACF,KAAK,EAAE;QACR,IAAIA,KAAK,CAAC4B,MAAM,IAAI5B,KAAK,CAACpF,IAAI,IAAIoE,OAAO,CAAChB,eAAe,CAAC4B,OAAO,EAAE;UAC/D2D,GAAG,CAACvE,OAAO,CAAC8B,WAAW,EAAEd,KAAK,CAACpF,IAAI,EAAEoF,KAAK,CAAC4B,MAAM,CAAC;UAClD5C,OAAO,CAACmK,YAAY,EAAE;;;KAGjC,CAAC;IACF,OAAO,YAAM;MACTrJ,qBAAqB,CAACQ,WAAW,EAAE;MACnCgc,yBAAyB,CAAChc,WAAW,EAAE;KAC1C;GACJ,EAAE,CAACtB,OAAO,CAAC,CAAC;EACbzB,eAAe,CAAC,YAAM;IAClB,IAAMgf,oBAAoB,GAAG,EAAE;IAC/B,IAAI,CAACvd,OAAO,CAAC2T,UAAU,EAAE;MACrB3T,OAAO,CAAC2T,UAAU,GAAG,IAAI;MACzB3T,OAAO,CAAChB,eAAe,CAAC4B,OAAO,IAAIZ,OAAO,CAACmK,YAAY,EAAE;MACzD,CAACxL,KAAK,CAAC+C,gBAAgB,IACnB1B,OAAO,CAAC+Y,iBAAiB,CAAC/Y,OAAO,CAAC+B,cAAc,CAAC;;IAEzD,SAAAsD,SAAA,GAAAC,+BAAA,CAAmBtF,OAAO,CAACgD,MAAM,CAAC6Q,OAAO,GAAAtO,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;MAAA,IAAhC5J,IAAI,GAAA2J,KAAA,CAAAtK,KAAA;MACX,IAAMqH,KAAK,GAAGhD,GAAG,CAACU,OAAO,CAACuC,OAAO,EAAE3G,IAAI,CAAC;MACxC0G,KAAK,KACAA,KAAK,CAACE,EAAE,CAACiD,IAAI,GAAGnD,KAAK,CAACE,EAAE,CAACiD,IAAI,CAACwK,KAAK,CAACuN,IAAI,CAAC,GAAGA,IAAI,CAAClb,KAAK,CAACE,EAAE,CAACa,GAAG,CAAC,CAAC,IAChEka,oBAAoB,CAAC7Q,IAAI,CAAC9Q,IAAI,CAAC;;IAEvCgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE0b,oBAAoB,EAAC,sBAAsB,EAACvd,OAAO,CAACgD,MAAM,EAAChD,OAAO,CAAC;IAC1Fud,oBAAoB,CAAC/d,MAAM,IACvB4d,YAAY,CAAClhB,OAAO,CAACiH,UAAU,CAACoa,oBAAoB,CAAC;IACzDvd,OAAO,CAACgD,MAAM,CAAC6Q,OAAO,GAAG,IAAID,GAAG,EAAE;GACrC,CAAC;EACFwJ,YAAY,CAAClhB,OAAO,CAAC6C,SAAS,GAAGwC,iBAAiB,CAACxC,SAAS,EAAEiB,OAAO,CAAChB,eAAe,CAAC;EACtF,OAAOoe,YAAY,CAAClhB,OAAO;AAC/B;;AC/CA,IAAMswB,oBAAkB,GAAG,SAArBA,kBAAkBA,CAAI5wB,IAAI,EAAEb,IAAI,EAAA+E,IAAA,EAcjC;EAAA,IAdqCwnB,eAAe,GAAAxnB,IAAA,CAAfwnB,eAAe;IACrDwD,YAAY,GAAAhrB,IAAA,CAAZgrB,YAAY;IACZtV,SAAS,GAAA1V,IAAA,CAAT0V,SAAS;IACT3U,MAAM,GAAAf,IAAA,CAANe,MAAM;IACN4nB,oBAAoB,GAAA3oB,IAAA,CAApB2oB,oBAAoB;IACpBC,UAAU,GAAA5oB,IAAA,CAAV4oB,UAAU;IACVC,eAAe,GAAA7oB,IAAA,CAAf6oB,eAAe;IACfpsB,WAAS,GAAAuD,IAAA,CAATvD,SAAS;IACTgoB,WAAW,GAAAzkB,IAAA,CAAXykB,WAAW;IACX9f,KAAK,GAAA3E,IAAA,CAAL2E,KAAK;IACLglB,MAAM,GAAA3pB,IAAA,CAAN2pB,MAAM;IAAAgD,cAAA,GAAA3sB,IAAA,CACN4sB,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAGlwB,WAAS,GAAAkwB,cAAA;IACrBpI,eAAe,GAAAvkB,IAAA,CAAfukB,eAAe;EAIf,IAAMsI,iBAAiB,GAAAxqB,QAAA,KAAQpH,IAAI,CAACa,IAAI,CAAC;IAAE8wB,SAAS,EAATA;IAAW;EAKtD,IAAIC,iBAAiB,KAAKpwB,WAAS,EAAE,OAAO,IAAI;EAIhD,IAAMupB,YAAY,GAAG;IACjBxmB,GAAG,WAAAA,IAAC7D,MAAM,EAAE2D,IAAI,EAAE2mB,QAAQ,EAAE;MACxB,IAAI,OAAOtqB,MAAM,CAAC2D,IAAI,CAAC,KAAK,QAAQ,IAAI3D,MAAM,CAAC2D,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3DwC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpG,MAAM,CAAC2D,IAAI,CAAC,EAAE,0BAA0B,CAAC;QAChE,OAAO,IAAI4mB,KAAK,CAACvqB,MAAM,CAAC2D,IAAI,CAAC,EAAE0mB,YAAY,CAAC;;MAEhD,OAAOzB,eAAe,CAAC5oB,MAAM,CAAC2D,IAAI,CAAC,EAAEA,IAAI,EAAE3D,MAAM,CAAC,CAAA0G,QAAA,KAC3CoiB,WAAW,CAACkC,aAAa;QAC5BlC,WAAW,EAAApiB,QAAA,KACJoiB,WAAW;UACd9f,KAAK,EAALA;;QAGP,CAAC;;GAET;EAED,IAAMyqB,SAAS,GAAG,IAAIlJ,KAAK,CAAA7jB,QAAA,KACpBwqB,iBAAiB;IACpBpI,WAAW,EAAEA;MACduB,YAAY,CAAC;EAIhB,IAAI,CAAAoJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEhvB,OAAO,MAAK,KAAK,EAAE,OAAO,IAAI;EAE7C,OAAO0sB,qBAAmB,CACtBsC,SAAS,EACT5H,eAAe,EACfwD,YAAY,EACZtV,SAAS,EAAArT,QAAA,KACJtB,MAAM,GACX4nB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfpsB,WAAS,EACTgoB,WAAW,EACX9f,KAAK,EACL1J,IAAI,EACJ0uB,MAAM,EACNpF,eACJ,CAAC;AACL,CAAC;AAED,IAAI8K,MAAM,GAAG,EAAE;AAEf,IAAMvC,qBAAmB,GAAG,SAAtBA,mBAAmBA,CACrBjrB,IAAI,EACJ2lB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACRqE,OAAO,EACPpE,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfnZ,UAAU,EACV+U,WAAW,EACX9f,KAAK,EACL1J,IAAI,EACJ0uB,MAAM,EACNpF,eAAe,EACd;EACDziB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgrB,OAAO,EAAE,YAAY,CAAC;EAO7C,IAIIhsB,MAAM,GASN0jB,WAAW,CATX1jB,MAAM;IACNb,OAAO,GAQPukB,WAAW,CARXvkB,OAAO;IACP6V,AAIAxN,aAAa,GAGbkc,WAAW,CAHXlc,aAAa;EAMjB,IAAMzM,IAAI,GAAG4T,UAAU,IAAOA,UAAU,SAAI7N,IAAI,CAAC/F,IAAM,IAAI+F,IAAI,CAAC+qB,SAAS,IAAI/qB,IAAI,CAAC+qB,SAAS,IAAI/qB,IAAI,CAAC/F,IAAI;EAExG,IAAIe,MAAM,GAAG,IAAI;EACjB,IAAIisB,KAAK,GAAG,EAAE;EACd,IAAIjnB,IAAI,CAACknB,KAAK,EAAE;IACZD,KAAK,GAAGjnB,IAAI,CAACknB,KAAK,CAACtiB,GAAG,CAAC,UAAC3K,IAAI,EAAEkxB,GAAG;MAAA,OAAKN,oBAAkB,CAAC5wB,IAAI,EAAEb,IAAI,EAAE;QACjEusB,eAAe,EAAfA,eAAe;QACfiB,SAAS,EAATA,SAAS;QACTC,QAAQ,EAARA,QAAQ;QACR3nB,MAAM,EAANA,MAAM;QACN4nB,oBAAoB,EAApBA,oBAAoB;QACpBC,UAAU,EAAVA,UAAU;QACVC,eAAe,EAAfA,eAAe;QACfnZ,UAAU,EAAE,CAAA7N,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS;QAC5CgoB,WAAW,EAAXA,WAAW;QACX9f,KAAK,EAAEqoB,GAAG;QACV/xB,IAAI,EAAJA,IAAI;QACJ0uB,MAAM,EAAE;UAAE7tB,IAAI,EAAE+F,IAAI,CAAC/F,IAAI;UAAE6I,KAAK,EAALA,KAAK;UAAEuc,EAAE,EAAErf,IAAI,CAACqf;SAAI;QAC/C2I,QAAQ,EAAE/tB,IAAI;QACdyoB,eAAe,EAAfA;OACH,CAAC;MAAC;;EAiBP,IAAMyE,UAAU,GAAG;IACfjrB,SAAS,EAAE8D,IAAI,CAAC9D,SAAS,IAAI8D,IAAI,CAAC9D,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC9D,SAAS,IAAItB,SAAS;IACvFuB,SAAS,EAAE6D,IAAI,CAAC7D,SAAS,IAAI6D,IAAI,CAAC7D,SAAS,CAAC7C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC7D,SAAS,IAAIvB,SAAS;IACvFoB,GAAG,EAAEgE,IAAI,CAAChE,GAAG,IAAIgE,IAAI,CAAChE,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAChE,GAAG,IAAIpB,SAAS;IAC/DqB,GAAG,EAAE+D,IAAI,CAAC/D,GAAG,IAAI+D,IAAI,CAAC/D,GAAG,CAAC3C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC/D,GAAG,IAAIrB,SAAS;IAC/DwB,OAAO,EAAE4D,IAAI,CAAC5D,OAAO,IAAI4D,IAAI,CAAC5D,OAAO,CAAC9C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC5D,OAAO,IAAIxB,SAAS;IAC/EyB,QAAQ,EAAE2D,IAAI,CAAC3D,QAAQ,IAAI2D,IAAI,CAAC3D,QAAQ,CAAC/C,KAAK,KAAK,EAAE,IAAI0G,IAAI,CAAC3D,QAAQ,IAAIzB;GAC7E;EAED,IAAA0R,KAAA,GAA0B,CAAAtM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEonB,IAAI,KAAI;MAAE9qB,QAAQ,EAAE;KAAI;IAAAmxB,cAAA,GAAAnhB,KAAA,CAAhDhQ,QAAQ;IAARA,QAAQ,GAAAmxB,cAAA,cAAG,EAAE,GAAAA,cAAA;EAErB,IAAIztB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEonB,IAAI,EAAE;IACZnnB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5D,QAAQ,EAAE,WAAW,EAAEsmB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkC,aAAa,CAAC;IACzEroB,MAAM,CAACmB,IAAI,CAACtB,QAAQ,CAAC,CAACmX,OAAO,CAAC,UAAArY,GAAG,EAAI;MACjC,IAAI,OAAOkB,QAAQ,CAAClB,GAAG,CAAC,KAAK,UAAU,EAAE;MACzCkB,QAAQ,CAAClB,GAAG,CAAC,GAAGwnB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkC,aAAa,CAAC1pB,GAAG,CAAC,CAACkB,QAAQ,CAAClB,GAAG,CAAC,CAAC,CAAAoF,QAAA,KAAMoiB,WAAW;QAAE8K,OAAO,EAAE,SAAAA;UAAA,OAAM1tB,IAAI;;QAAE,CAAC;MACvGC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5D,QAAQ,EAAE,kBAAkB,EAAEA,QAAQ,CAAClB,GAAG,CAAC,CAAC;KACtE,CAAC;IACF6E,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5D,QAAQ,EAAE,iBAAiB,CAAC;;EAwBvDtB,MAAM,gBACF4B,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;IACPhH,GAAG,EAAE4E,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;IACzDA,IAAI,EAAE+F,IAAI,CAACtG,OAAO,KAAK,IAAI,IAAOO,IAAI,cAAW,IAAIA,IAAK;IAC1DoE,OAAO,EAAEA,OAAQ;IACjB2B,IAAI,EAAAQ,QAAA,KAAOR,IAAI;MAAE8C,KAAK,EAALA;MAAQ;IACzBrC,KAAK,EAAED,QAAA,KAAKR,IAAI,CAAConB,IAAI,KAAMD,UAAW;IAEtC9kB,MAAM,EAAE,SAAAA,OAAA0T,KAAA,EAAe;MAAA,IAAZpV,KAAK,GAAAoV,KAAA,CAALpV,KAAK;MAEZ,IAAIX,IAAI,CAACtG,OAAO,EAAE;QACd,IAAA2tB,cAAA,GAAmC3gB,aAAa,CAAC;YAC7CrI,OAAO,EAAPA,OAAO;YACPpE,IAAI,EAAEA,IAAI;YACVwG,KAAK,EAAED,QAAA,KAAKR,IAAI,CAAConB,IAAI,KAAMD;WAC9B,CAAC;UAJM5jB,MAAM,GAAA8jB,cAAA,CAAN9jB,MAAM;UAAEuB,MAAM,GAAAuiB,cAAA,CAANviB,MAAM;UAAE2C,OAAM,GAAA4f,cAAA,CAAN5f,MAAM;QAM9BxH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEjG,IAAI,EAAE+F,IAAI,CAACknB,KAAK,EAAE,eAAe,EAAE3jB,MAAM,CAAC;QAGjEiqB,MAAM,GAAG;UACLjqB,MAAM,EAANA,MAAM;UACNuB,MAAM,EAANA,MAAM;UACN2C,MAAM,EAANA;SACH;QAmBDwf,KAAK,gBACDrqB,cAAA,CAAAkpB,aAAA,CAAClpB,cAAK,CAAC0qB,QAAQ,QAEV/jB,MAAM,CAACqB,GAAG,CAAC,UAACggB,EAAE,EAAE9hB,KAAK;UAAA,oBAClBlG,cAAA,CAAAkpB,aAAA;YAAK6H,KAAK,EAAE/K,WAAW,CAAC+K,KAAM;YAACvyB,GAAG,EAAEwpB,EAAE,CAACvF;aAClCrf,IAAI,CAACknB,KAAK,CAACtiB,GAAG,CAAC,UAAC1L,OAAO,EAAEquB,IAAI;YAAA,oBAC1B3qB,cAAA,CAAAkpB,aAAA,CAAC1jB,UAAU;cACPhH,GAAG,EAAKnB,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe,IAAO;cAC9CA,IAAI,EAAKA,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe,IAAO;cAC/CoE,OAAO,EAAEA,OAAQ;cACjBgE,MAAM,EAAE,SAAAA,OAAAsU,KAAA,EAAe;gBAAA,IAAZhW,KAAK,GAAAgW,KAAA,CAALhW,KAAK;gBACZV,OAAO,CAACC,GAAG,CAACS,KAAK,EAAE,eAAe,EAAEikB,EAAE,CAACvF,EAAE,EAAKplB,IAAI,SAAI6I,KAAK,SAAI5J,OAAO,EAAI,+BAA+B,CAAC;gBAqD1G,OAAO2xB,oBAAkB,CAAC3xB,OAAO,EAAAsH,QAAA,KAAOpH,IAAI;kBAAE0J,KAAK,EAALA;oBAAS;kBACnD6iB,eAAe,EAAfA,eAAe;kBACfiB,SAAS,EAATA,SAAS;kBACTC,QAAQ,EAARA,QAAQ;kBACR3nB,MAAM,EAANA,MAAM;kBACN4nB,oBAAoB,EAApBA,oBAAoB;kBACpBC,UAAU,EAAVA,UAAU;kBACVC,eAAe,EAAfA,eAAe;kBACfnZ,UAAU,EAAE,CAAA7N,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEknB,KAAK,KAAIjtB,IAAI,IAAIW,SAAS;kBAC5CgoB,WAAW,EAAApiB,QAAA,KACJoiB,WAAW;oBACdkC,aAAa,EAAAtkB,QAAA,KACNoiB,WAAW,CAACkC,aAAa;sBAC5BhgB,MAAM,EAANA,MAAM;sBAEN2C,MAAM,EAAE,SAAAA,OAACjC,CAAC;wBAAA,OAAKiC,OAAM,CAACjC,CAAC,CAAC;;;oBAO/B;kBACD1C,KAAK,EAAEA,KAAK;kBACZ1J,IAAI,EAAJA,IAAI;kBACJ0uB,MAAM,EAAE;oBAAE7tB,IAAI,EAAE+F,IAAI,CAAC/F,IAAI;oBAAE6I,KAAK,EAALA,KAAK;oBAAEuc,EAAE,EAAErf,IAAI,CAACqf;mBAAI;kBAC/C0L,SAAS,EAAK9wB,IAAI,SAAI6I,KAAK,SAAI1J,IAAI,CAACF,OAAO,CAAC,CAACe,IAAM;kBACnDyoB,eAAe,EAAfA;iBACH,CAAC;;aAaT,CAAC;WACL,CACA,CAAC;SACT,CAUW,CAAC;;MA2BzBziB,OAAO,CAACC,GAAG,CAACjG,IAAI,EAAEuzB,MAAM,EAAE,cAAc,CAAC;MACzC,IAAMhG,SAAS,GAAGT,UAAU,CAAC/mB,IAAI,CAAC7G,IAAI,EAAE;QACpCwH,KAAK,EAALA,KAAK;QAELX,IAAI,EAAJA,IAAI;QACJ/F,IAAI,EAAJA,IAAI;QACJ6I,KAAK,EAALA,KAAK;QACLkkB,eAAe,EAAfA,eAAe;QACfC,KAAK,EAALA,KAAK;QACLvgB,aAAa,EAAbA,aAAa;QACbvE,KAAK,EAAEjD,MAAM;QAIb0jB,WAAW,EAAApiB,QAAA,KACJoiB,WAAW;UACdkC,aAAa,EAAAtkB,QAAA,KACNoiB,WAAW,CAACkC,aAAa,EACzB0I,MAAM;WAEVA,MAAM,CACZ;QACD1F,MAAM,EAANA;OACH,CAAC;MAEF,OAAON,SAAS;;GAGvB,CACJ;EAKD,OAAOxsB,MAAM;AACjB,CAAC;AAED,AAoLA,IAAM6sB,gBAAc,GAAG,SAAjBA,cAAcA,CAAIvmB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAEpuB,OAAO,EAAK;EAG1D,IAAMsB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAqI,SAAA;IAErD,IAAMC,QAAQ,GAAGtuB,OAAO,KAAKkB,SAAS,IAAIoF,IAAI,CAAC5E,GAAG,CAAC,IAAO0sB,MAAM,WAAM9nB,IAAI,CAAC5E,GAAG,CAAG;IAGjF,IAAM6sB,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAktB,SAAA,OAAAA,SAAA,CAELC,QAAQ,IAAAxnB,QAAA,KACFR,IAAI;MACP/F,IAAI,EAAE+tB,QAAQ;MACdC,KAAK,EAALA;OACIH,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAC,SAAA,GAGxB/nB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,cAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,EAAE4E,IAAI,CAACtG,OAAO,CAAC;GAEzG,EAAE,IAAIyd,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,IAAMktB,YAAU,GAAG,SAAbA,UAAUA,CAAI5mB,KAAK,EAAElG,GAAG,EAAEnB,IAAI,EAAE6tB,MAAM,EAAK;EAG7C,IAAM9sB,MAAM,GAAGsG,KAAK,CAACnG,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAE0f,YAAY,EAAK;IAAA,IAAAyI,SAAA;IAGrD,IAAMF,KAAK,GAAIhuB,IAAI,IAAOA,IAAI,eAAUylB,YAAY,MAAG,UAASA,YAAY,MAAG;IAC/E,OAAAlf,QAAA,KACO3F,GAAG,GAAAstB,SAAA,OAAAA,SAAA,CAELnoB,IAAI,CAAC5E,GAAG,CAAC,IAAAoF,QAAA,KACHR,IAAI;MACPioB,KAAK,EAALA,KAAK;MACL3uB,KAAK,EAAE;OACHwuB,MAAM,IAAI;MAAEA,MAAM,EAANA;KAAQ,GAAAK,SAAA,GAGxBnoB,IAAI,CAACknB,KAAK,KAAKtsB,SAAS,IAAIitB,gBAAc,CAAC7nB,IAAI,CAACknB,KAAK,EAAE,MAAM,EAAEe,KAAK,EAAEjoB,IAAI,CAAC5E,GAAG,CAAC,CAAC;GAE3F,EAAE,IAAI+b,GAAG,EAAE,CAAC;EAEb,OAAOnc,MAAM;AACjB,CAAC;AAED,AAmBA,IAAMotB,0BAAwB,GAAG,SAA3BA,wBAAwBA,CAAIlB,KAAK,EAAE9rB,GAAG,EAAK;EAG7C,IAAMitB,YAAY,GAAG,IAAIlR,GAAG,EAAE;EAE9B1a,MAAM,CAACmB,IAAI,CAACspB,KAAK,CAAC,CAACzT,OAAO,CAAC,UAACrY,GAAG,EAAK;IAChC,IAAI8rB,KAAK,CAAC9rB,GAAG,CAAC,CAACgN,KAAK,EAAE;MAClBigB,YAAY,CAACzlB,GAAG,CAACskB,KAAK,CAAC9rB,GAAG,CAAC,CAACnB,IAAI,CAAC;;IAErC,IAAIitB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE;MACzB,IAAMC,eAAe,GAAGC,sBAAoB,CAACtB,KAAK,CAAC9rB,GAAG,CAAC,CAACktB,YAAY,EAAE,OAAO,CAAC;MAM9E,IAAM1qB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAAC2qB,eAAe,CAAC;MACzC,KAAK,IAAIzlB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlF,IAAI,CAACC,MAAM,EAAEiF,KAAK,EAAE,EAAE;QAC9C,IAAM2lB,YAAY,GAAGF,eAAe,CAAC3qB,IAAI,CAACkF,KAAK,CAAC,CAAC;QACjD7C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEgnB,KAAK,CAAC9rB,GAAG,CAAC,EAAE,YAAY,CAAC;QAChDitB,YAAY,CAACzlB,GAAG,CAAC6lB,YAAY,CAACxuB,IAAI,KAAAI,MAAA,CACzBguB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAIouB,YAAY,CAAC1qB,GAAG,CAAC8qB,YAAY,CAACxuB,IAAI,CAAC,IAAK,EAAE,GAAAuG,QAAA;UACpFynB,KAAK,EAAEf,KAAK,CAAC9rB,GAAG,CAAC,CAACikB;WAAOoJ,YAAY,GAC1C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAED,IAAMG,sBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIlnB,KAAK,EAAElG,GAAG,EAAE9B,KAAK,EAAK;EAChD,IAAM+uB,YAAY,GAAG,EAAE;EACvB,IAAI,CAAC5uB,KAAK,CAACC,OAAO,CAAC4H,KAAK,CAAC,EAAE;EAC3B,IAAMonB,UAAU,GAAGpnB,KAAK,CAACjH,MAAM,EAAE;EACjC,OAAOquB,UAAU,CAACvtB,MAAM,CAAC,UAACN,GAAG,EAAEmF,IAAI,EAAK;IAAA,IAAA2oB,SAAA;IACpC,OAAAnoB,QAAA,KACO3F,GAAG,GAAA8tB,SAAA,OAAAA,SAAA,CACL3oB,IAAI,CAAC5E,GAAG,CAAC,IAAI9B,KAAK,IAAI0G,IAAI,CAAC1G,KAAK,CAAC,IAAMA,KAAK,KAAKsB,SAAS,IAAIoF,IAAK,IAAI,EAAE,EAAA2oB,SAAA;GAEjF,EAAEN,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,aAAW,GAAG,CAAC;AAMnB,SAASgF,oBAAoBA,CAAC/yB,GAAG,EAAE;EAC/B,IAAMG,MAAM,GAAG,EAAE;EAEjB,SAAS6yB,WAAWA,CAAChzB,GAAG,EAAEC,IAAI,EAAE;IAC5B,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;MACzB,IAAIpB,KAAK,CAACC,OAAO,CAACmB,GAAG,CAAC,EAAE;QACpBA,GAAG,CAAC4Y,OAAO,CAAC,UAACzT,IAAI,EAAE8C,KAAK,EAAK;UACzB+qB,WAAW,CAAC7tB,IAAI,EAAKlF,IAAI,SAAIgI,KAAK,MAAG,CAAC;SACzC,CAAC;OACL,MAAM;QACH,IAAGjI,GAAG,IAAID,SAAS,IAAIC,GAAG,IAAI,IAAI,EAAC;UAC/B4B,MAAM,CAACmB,IAAI,CAAC/C,GAAG,CAAC,CAAC4Y,OAAO,CAAC,UAAArY,GAAG,EAAI;YAC5B,IAAM0yB,OAAO,GAAGhzB,IAAI,GAAMA,IAAI,SAAIM,GAAG,GAAKA,GAAG;YAC7CyyB,WAAW,CAAChzB,GAAG,CAACO,GAAG,CAAC,EAAE0yB,OAAO,CAAC;WACjC,CAAC;;;KAGb,MAAM,IAAI,OAAOjzB,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAAC4E,QAAQ,CAAC,IAAI,CAAC,EAAE;MACtDzE,MAAM,CAAC+P,IAAI,CAACjQ,IAAI,CAAC;;;EAIzB+yB,WAAW,CAAChzB,GAAG,EAAE,EAAE,CAAC;EAEpB,OAAOG,MAAM;AACjB;AAEA,IAAMowB,iBAAe,GAAGxuB,cAAK,CAACksB,UAAU,CAAC,UAAAqB,KAAA,EActCzoB,GAAG,EAAK;EAAA,IAAAqsB,YAAA,EAAA1C,UAAA,EAAAC,gBAAA;EAAA,IAdiCpE,KAAK,GAAAiD,KAAA,CAALjD,KAAK;IAC7C8B,kBAAkB,GAAAmB,KAAA,CAAlBnB,kBAAkB;IAElBlC,oBAAoB,GAAAqD,KAAA,CAApBrD,oBAAoB;IACpBC,UAAU,GAAAoD,KAAA,CAAVpD,UAAU;IACVC,eAAe,GAAAmD,KAAA,CAAfnD,eAAe;IACflC,aAAa,GAAAqF,KAAA,CAAbrF,aAAa;IAAAkJ,AACUC,mBAAA,GAAA9D,KAAA,CACvBxc,aAAa;IAAbA,aAAa,GAAAsgB,mBAAA,cAAG,EAAE,GAAAA,mBAAA;IAAAC,aAAA,GAAA/D,KAAA,CAClBgE,OAAO;IAAPA,OAAO,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,qBAAA,GAAAjE,KAAA,CACfzH,eAAe;IAAfA,iBAAe,GAAA0L,qBAAA,cAAGC,eAAsB,GAAAD,qBAAA;IACxCvL,SAAS,GAAAsH,KAAA,CAATtH,SAAS;IAAAyL,WAAA,GAAAnE,KAAA,CACTwD,KAAK;IAALA,KAAK,GAAAW,WAAA,cAAG,EAAE,GAAAA,WAAA;EAIV,IAAI,CAACH,OAAO,EAAE;IACVluB,OAAO,CAACC,GAAG,GAAI,YAAY;MACvB,IAAMA,GAAG,GAAGD,OAAO,CAACC,GAAG;MAEvB,OAAO,YAAY;QACf,IAAM+I,IAAI,GAAGxP,KAAK,CAACyL,IAAI,CAAC8D,SAAS,CAAC;QAClC,IAAI,CAACC,IAAI,CAACxJ,QAAQ,CAAC,SAAS,CAAC,EAAE;UAC3BS,GAAG,CAACoJ,KAAK,CAACrJ,OAAO,EAAEgJ,IAAI,CAAC;;OAE/B;KACJ,EAAG;;EAGR,IAAMslB,UAAU,GAAGX,oBAAoB,CAACjgB,aAAa,CAAC;EACtD1N,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEquB,UAAU,EAAE,cAAc,EAAE5gB,aAAa,CAAC;EAIjE,IAAMwW,YAAY,GAAG;IACjBxmB,GAAG,WAAAA,IAAC7D,MAAM,EAAE2D,IAAI,EAAE2mB,QAAQ,EAAE;MACxB,IAAImK,UAAU,CAAC9uB,QAAQ,CAAChC,IAAI,CAAC,EAAE;QAC3B,IAAI,OAAO3D,MAAM,CAAC2D,IAAI,CAAC,KAAK,QAAQ,IAAI3D,MAAM,CAAC2D,IAAI,CAAC,KAAK,IAAI,EAAE;UAC3DwC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEpG,MAAM,CAAC2D,IAAI,CAAC,EAAE,6BAA6B,CAAC;UACnE,OAAO,IAAI4mB,KAAK,CAACvqB,MAAM,CAAC2D,IAAI,CAAC,EAAE0mB,YAAY,CAAC;;QAEhD,OAAOzB,iBAAe,CAAC5oB,MAAM,CAAC2D,IAAI,CAAC,EAAEA,IAAI,EAAE3D,MAAM,CAAC,CAAA0G,QAAA,KAC3CskB,aAAa;UAChBlC,WAAW,EAAE;YAAEC,SAAS,EAATA;;UAElB,CAAC;;MAEN,OAAO/oB,MAAM,CAAC2D,IAAI,CAAC;;GAE1B;EAED,IAAM+wB,kBAAkB,GAAG,IAAInK,KAAK,CAAA7jB,QAAA,KAC7BmN,aAAa,GACjBwW,YAAY,CAAC;EAMhBlkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyN,aAAa,EAAE,eAAe,EAAAnN,QAAA,KAAOguB,kBAAkB,GAAI3L,SAAS,CAAC;EAG5F,IAAAqG,QAAA,GAiBI1N,SAAO,CAAC;MACRvR,IAAI,EAAE,UAAU;MAChBlK,gBAAgB,EAAE,IAAI;MACtBwR,cAAc,EAAE,UAAU;MAoB1B5D,aAAa,EAAAnN,QAAA,KAAOguB,kBAAkB;KACzC,CAAC;IAxCEjuB,QAAQ,GAAA2oB,QAAA,CAAR3oB,QAAQ;IACRmZ,YAAY,GAAAwP,QAAA,CAAZxP,YAAY;IACZtR,KAAK,GAAA8gB,QAAA,CAAL9gB,KAAK;IAAAqmB,kBAAA,GAAAvF,QAAA,CACL9rB,SAAS;IAAI8B,MAAM,GAAAuvB,kBAAA,CAANvvB,MAAM;IAAEL,AACrBR,OAAO,GAAA6qB,QAAA,CAAP7qB,OAAO;IACP6V,OAAO,GAAAgV,QAAA,CAAPhV,OAAO;IACPoH,QAAQ,GAAA4N,QAAA,CAAR5N,QAAQ;IACRzH,SAAS,GAAAqV,QAAA,CAATrV,SAAS;IACT8D,QAAQ,GAAAuR,QAAA,CAARvR,QAAQ;IACRO,iBAAiB,GAAAgR,QAAA,CAAjBhR,iBAAiB;IACjB0U,2BAA0B,GAAA1D,QAAA,CAA1B0D,0BAA0B;IAC1BT,aAAa,GAAAjD,QAAA,CAAbiD,aAAa;IACb3qB,UAAU,GAAA0nB,QAAA,CAAV1nB,UAAU;IACViX,WAAW,GAAAyQ,QAAA,CAAXzQ,WAAW;IACXE,QAAQ,GAAAuQ,QAAA,CAARvQ,QAAQ;IACRgC,KAAK,GAAAuO,QAAA,CAALvO,KAAK;EA2BT/d,cAAK,CAACgjB,SAAS,CAAC,YAAM;IAClBjF,KAAK,CAAAna,QAAA,KAAMguB,kBAAkB,CAAE,CAAC;GACnC,EAAE,CAAC7gB,aAAa,CAAC,CAAC;EAGnB,IAAMiV,WAAW,GAAG;IAChB+K,KAAK,EAALA,KAAK;IACLptB,QAAQ,EAARA,QAAQ;IACRmZ,YAAY,EAAZA,YAAY;IACZtR,KAAK,EAALA,KAAK;IACLlJ,MAAM,EAANA,MAAM;IACNb,OAAO,EAAPA,OAAO;IACP6V,OAAO,EAAPA,OAAO;IACPoH,QAAQ,EAARA,QAAQ;IACRzH,SAAS,EAATA,SAAS;IACT8D,QAAQ,EAARA,QAAQ;IACRjR,aAAa,EAAbA,aAAa;IACboV,QAAQ,EAARA,QAAQ;IACR5D,iBAAiB,EAAjBA,iBAAiB;IACjB0U,0BAA0B,EAA1BA,2BAA0B;IAC1BprB,UAAU,EAAVA,UAAU;IACVsjB,aAAa,EAAAtkB,QAAA,KACNskB,aAAa;MAChBnK,KAAK,EAAEA,KAAK;MACZzC,iBAAiB,EAAE,SAAAA;QAAA,OAAM,CAACqF,CAAC,CAACnO,OAAO,CAAClQ,MAAM,CAAC;;MAC3C2U,SAAS,EAATA,SAAS;MACT+Y,0BAA0B,EAAE,SAAAA,2BAACf,MAAM,EAAK;QAEpC,IAAM7wB,MAAM,GAAG4xB,2BAA0B,CAACf,MAAM,CAAC,EAAE,CAACjb,IAAI,CAAC,UAAArM,CAAC;UAAA,OAAIA,CAAC;UAAC;QAChEtE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAElF,MAAM,CAAC;QAC9B,OAAOA,MAAM;OAChB;MACD0zB,YAAY,YAASC,SAAS;QAAA,IAAK;UAAA,OAAA5f,OAAA,CAAAC,OAAA,CACL4d,2BAA0B,EAAE,CAAC,IAAI,CAAC,EAAAhc,IAAA,WAAtDqb,WAAW;YASjB,IAAIjxB,MAAM,GAAG,IAAI;YACjB,KAAK,IAAIwK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmpB,SAAS,CAAC9wB,MAAM,EAAE2H,CAAC,EAAE,EAAE;cACvC,IAAMxF,IAAI,GAAG2uB,SAAS,CAACnpB,CAAC,CAAC;cACzB,IAAMopB,WAAW,GAAG3C,WAAW,CAACjsB,IAAI,CAAC;cACrC,IAAI4uB,WAAW,EAAE;gBAEb5zB,MAAM,GAAG,KAAK;gBACd;;;YAIR,OAAOA,MAAM;;SAChB,QAAAoW,CAAA;UAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;MACJ;IACDyR,SAAS,EAATA,SAAS;IAETpK,WAAW,EAAXA,WAAW;IACXE,QAAQ,EAARA;GACH;EAGD,IAAMwQ,YAAY,GAAGvsB,cAAK,CAACwsB,MAAM,EAAE;EAEnC,IAAMC,kBAAkB,GAAGzsB,cAAK,CAACwsB,MAAM,EAAE;EACzC,IAAME,iBAAiB,GAAG1sB,cAAK,CAACwsB,MAAM,EAAE;EAGxC,IAAA5M,SAAA,GAAwBC,cAAQ,EAAE;IAA3BrjB,IAAI,GAAAojB,SAAA;IAAE+M,OAAO,GAAA/M,SAAA;EAEpB5f,cAAK,CAACgjB,SAAS,CAAC,YAAM;IAClB,IAAIsH,KAAK,KAAKtsB,SAAS,EAAE;IAUzBuuB,YAAY,CAAC5uB,OAAO,GAAG2sB,KAAK;IAE5BmC,kBAAkB,CAAC9uB,OAAO,GAAG6tB,0BAAwB,CAACe,YAAY,CAAC5uB,OAAO,CAAC;IAC3E0F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEipB,YAAY,EAAE,0BAA0B,CAAC;IAChElpB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmpB,kBAAkB,EAAE,0BAA0B,KAAAhvB,MAAA,CAAMgvB,kBAAkB,CAAC9uB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,IAAMuN,YAAY,GAAG/C,KAAK,WAAQ9O,KAAK,EAAAihB,KAAA;MAAA,IAAItgB,IAAI,GAAAsgB,KAAA,CAAJtgB,IAAI;QAAEd,IAAI,GAAAohB,KAAA,CAAJphB,IAAI;MAAA,IAAO;QAAA,OAAA4V,OAAA,CAAAC,OAAA;UAAA,IAOpDqa,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;YACpC,IAAM40B,SAAS,GAAGpyB,MAAM,CAACC,MAAM,CAACpD,KAAK,EAAEupB,SAAS,CAAC;YACjD5iB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,8CAA8C,EAAE5G,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE8tB,KAAK,CAAC;YAAA,OAAAnY,OAAA,CAAAC,OAAA,CAEjFwa,iBAAiB,CAACvvB,IAAI,EAAE40B,SAAS,CAAC50B,IAAI,CAAC,EAAEitB,KAAK,CAAC,EAAAtW,IAAA,WAAA6a,KAAA;cAAA,IAA7D9lB,CAAC,GAAA8lB,KAAA;gBAAE7lB,CAAC,GAAA6lB,KAAA;cAAA,IAEP,CAACliB,SAAS,CAACnQ,IAAI,EAAEwM,CAAC,CAAC,IAAID,CAAC;gBACxB4jB,OAAO,CAAA/oB,QAAA,KAAMoF,CAAC,CAAE,CAAC;;;iBAGlB,IAAIyjB,kBAAkB,CAAC9uB,OAAO,CAACgY,GAAG,CAACtY,IAAI,CAAC,EAAE;YAC7CgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEmpB,kBAAkB,CAAC9uB,OAAO,CAACgY,GAAG,CAACtY,IAAI,CAAC,EAAE,+CAA+C,EAAEX,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAE;cAAEC,IAAI,EAAJA;aAAM,EAAE8tB,KAAK,CAAC;YACjJqC,OAAO,CAAA/oB,QAAA,KAAM0mB,KAAK,CAAE,CAAC;YACrB;;;OAEP,QAAA9V,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;MAAC;IAEFmY,OAAO,CAACrC,KAAK,CAAC;GACjB,EAAE,CAACA,KAAK,CAAC,CAAC;EAMX,IAAMuC,WAAW,GAAG,SAAdA,WAAWA,GAAS;IACtBN,YAAY,CAAC5uB,OAAO,GAAG2tB,YAAU,CAAChB,KAAK,EAAE,MAAM,CAAC;IAChDqC,OAAO,CAACrC,KAAK,CAAC;GACjB;EAmBD,IAAMwC,YAAY,YAAZA,YAAYA,CAAU3lB,OAAO;IAAA,IAAPA,OAAO;MAAPA,OAAO,GAAG;QAAE+nB,UAAU,EAAE;OAAO;;IAAA,IAAK;MAE5D,IAAIrvB,MAAM,CAACmB,IAAI,CAACsB,MAAM,CAAC,CAACrB,MAAM,GAAG,CAAC,EAAE,OAAAkR,OAAA,CAAAC,OAAA,CAAO,KAAK;MAAC,OAAAD,OAAA,CAAAC,OAAA,CAC5Bmd,aAAa,CAACpoB,OAAO,CAAC,EAAA6M,IAAA,WAArC5V,MAAM;QACZiF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAElF,MAAM,EAAEkE,MAAM,EAAE6E,OAAO,CAAC;QAAA,IACnF/I,MAAM,KAAK,IAAI;UAAA,OAAA+T,OAAA,CAAAC,OAAA,CACF6E,SAAS,EAAE;;UAExB,OAAO,KAAK;;;KAEnB,QAAAzC,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAMD1P,GAAG,CAACnH,OAAO,IAAAwzB,YAAA;IACPtV,WAAW,EAAXA,WAAW;IACXE,QAAQ,EAARA,QAAQ;IACRmW,gBAAgB,WAAAA,iBAAS9xB,KAAK;MAAA,IAAK;QAAA,OAAA+R,OAAA,CAAAC,OAAA,CACX4T,WAAW,CAACkC,aAAa,CAAC4J,YAAY,CAAC1xB,KAAK,CAAC,EAAA4T,IAAA,WAA3DoE,KAAK;UAAA,IAAApG,KAAA;UAAA,IAAAqC,KAAA;YAAA,IACP+D,KAAK;cAAA,OAAAjG,OAAA,CAAAC,OAAA,CACgB6E,SAAS,EAAE,EAAAjD,IAAA,WAA1B5V,MAAM;gBAAA4T,KAAA;gBAAA,OACL5T,MAAM;;;;UAAA,OAAAiW,KAAA,IAAAA,KAAA,CAAAL,IAAA,GAAAK,KAAA,CAAAL,IAAA,WAAA8J,QAAA;YAAA,OAAA9L,KAAA,GAAA8L,QAAA,GAEV1F,KAAK;eAAApG,KAAA,GAAAqC,KAAA,GAAL+D,KAAK;;OAEf,QAAA5D,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;IACDyC,SAAS,EAAE,SAAAA,UAAC9P,OAAO;MAAA,OAAK2lB,YAAY,CAAC3lB,OAAO,CAAC;;IAC7CgrB,wBAAwB,WAAAA,yBAAS/xB,KAAK;MAAA,IAAK;QAAA,IAAAkY,MAAA,YAAAA,OAAAvG,QAAA;UAAA,OAAAqgB,MAAA,GAAArgB,QAAA,GAUhC+a,YAAY,EAAE;;QAAA,IAAAsF,MAAA;QATrB/uB,OAAO,CAACC,GAAG,CAAClD,KAAK,EAAE,2DAA2D,CAAC;QAAA,IAAA0R,MAAA;UAAA,IAC3EjV,KAAK,CAACC,OAAO,CAACsD,KAAK,CAAC;YAAA,OAAA+R,OAAA,CAAAC,OAAA,CACA4T,WAAW,CAACkC,aAAa,CAAC4J,YAAY,CAAC1xB,KAAK,CAAC,EAAA4T,IAAA,WAA3DoE,KAAK;cAAA,IAAAia,MAAA;cAAA,SAAAve,OAAAwe,QAAA;gBAAA,IAAAD,MAAA,SAAAC,QAAA;gBAAAF,MAAA;gBAAA,OAKJha,KAAK;;cAAA,IAAAlE,MAAA;gBAAA,IAJRkE,KAAK;kBAAA,OAAAjG,OAAA,CAAAC,OAAA,CACgB6E,SAAS,EAAE,EAAAjD,IAAA,WAA1B5V,MAAM;oBAAAg0B,MAAA;oBAAA,OACLh0B,MAAM;;;;cAAA,OAAA8V,MAAA,IAAAA,MAAA,CAAAF,IAAA,GAAAE,MAAA,CAAAF,IAAA,CAAAF,MAAA,IAAAA,MAAA,CAAAI,MAAA;;;;QAAA,OAAA/B,OAAA,CAAAC,OAAA,CAAAN,MAAA,IAAAA,MAAA,CAAAkC,IAAA,GAAAlC,MAAA,CAAAkC,IAAA,CAAAsE,MAAA,IAAAA,MAAA,CAAAxG,MAAA;OAKxB,QAAA0C,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;IACD+d,mBAAmB,WAAAA,oBAAShI,UAAU;MAAA,IAAVA,UAAU;QAAVA,UAAU,GAAG,IAAI;;MAAA,IAAK;QAAA,IAAArR,MAAA,YAAAA,OAAAsZ,QAAA;UAAA,OAAAC,MAAA,GAAAD,QAAA,GAAArgB,OAAA,CAAAC,OAAA,CAWzB6E,SAAS,EAAE;;QAAA,IAAAwb,MAAA;QAAA,IAAApa,MAAA;UAAA,IAV5BkS,UAAU;YACV,IAAI1qB,MAAM,CAACmB,IAAI,CAACsB,MAAM,CAAC,CAACrB,MAAM,GAAG,CAAC;cAAAwxB,MAAA;cAAA,OAAS,KAAK;;YAAC,OAAAtgB,OAAA,CAAAC,OAAA,CAC5B4d,2BAA0B,EAAE,CAAC,IAAI,CAAC,EAAAhc,IAAA,WAAjD5V,MAAM;cACZiF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAElF,MAAM,EAAEkE,MAAM,CAAC;cAAA,IAC1Eqe,CAAC,CAACnO,OAAO,CAACpU,MAAM,CAAC;gBAAA,OAAA+T,OAAA,CAAAC,OAAA,CACJ6E,SAAS,EAAE,EAAAjD,IAAA,WAAA0e,gBAAA;kBAAAD,MAAA;kBAAA,OAAAC,gBAAA;;;gBAAAD,MAAA;gBAAA,OAEjB,KAAK;;;;;QAAA,OAAAtgB,OAAA,CAAAC,OAAA,CAAAiG,MAAA,IAAAA,MAAA,CAAArE,IAAA,GAAAqE,MAAA,CAAArE,IAAA,CAAAkF,MAAA,IAAAA,MAAA,CAAAb,MAAA;OAKvB,QAAA7D,CAAA;QAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;IACDqY,WAAW,EAAEA,WAAW;IACxB9R,QAAQ,EAAEA,QAAQ;IAClBzY,MAAM,EAAEA,MAAM;IACdyb,KAAK,EAALA;KAAKoT,YAAA,kBACLtV,WAAW,EAAAsV,YAAA,CACXjJ,aAAa,GAAAtkB,QAAA,KAAOoiB,WAAW,CAACkC,aAAa,EAAK0I,MAAM,GAAAO,YAAA,CAC3D;EAED,IAAMpE,cAAc,YAAdA,cAAcA,CAAU1vB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAElD,IAAM4uB,aAAa,GAAGT,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC;MAChD,IAAI4vB,CAAC,GAAG7uB,MAAM;MACd,IAAM8uB,cAAc,GAAGtpB,QAAA,KAAKtB,MAAM,CAAC3E,OAAO,KAAM,EAAE;MAClD,IAAMwvB,SAAS,GAAG7qB,MAAM,CAAC3E,OAAO,IAAI,EAAE;MAEtC,IAAI4H,KAAK,GAAG,KAAK;MAGjB,IAAI7I,KAAK,KAAK,EAAE,EAAE;QACd,IAAM6I,MAAK,GAAG7I,KAAK,KAAK,KAAK;QAC7B,IAAI6I,MAAK,EAAE;UACP4nB,SAAS,CAAC9vB,IAAI,CAAC,GAAG;YACdkI,KAAK,EAALA,MAAK;YACL6nB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;WACjE;SACJ,MAAM;UACH,OAAOD,SAAS,CAAC9vB,IAAI,CAAC;;OAI7B,MAAM;QACH,OAAO8vB,SAAS,CAAC9vB,IAAI,CAAC;;MAI1BiF,MAAM,CAAC3E,OAAO,GAAAiG,QAAA,KAAQupB,SAAS,CAAE;MAEjC9pB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEhB,MAAM,EAAE,aAAa,EAAE6qB,SAAU,CAAC;MACzD,IAAI5nB,KAAK,CAAC5H,OAAO,KAAKuvB,cAAc,EAAE;MAetC,OAAA/a,OAAA,CAAAC,OAAA,CAAO,CAAC,CAACuO,CAAC,CAACI,OAAO,CAACmM,cAAc,EAAEC,SAAS,CAAC,KAAA1vB,MAAA,CAAMwvB,CAAC,GAAGE,SAAS,CAAC9vB,IAAI,CAAC,CAAC;KAC1E,QAAAmX,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMuU,eAAe,YAAfA,eAAeA,CAAUrsB,KAAK,EAAEW,IAAI;IAAA,IAAK;MAG3CkvB,YAAY,CAAC5uB,OAAO,CAACN,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;MAAA,IAAA2wB,qBAAA,GAGjBd,YAAY,CAAC5uB,OAAO;MAAA,OAAAwU,OAAA,CAAAC,OAAA,CAAqB0a,YAAY,EAAE,EAAA9Y,IAAA,WAAAsZ,aAAA;QAA9EjqB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAA+pB,qBAAA,EAAwB,WAAW,EAAAC,aAAsB,CAAC;QAAA,OAAAnb,OAAA,CAAAC,OAAA,CAG3B2a,cAAc,CAAC1vB,IAAI,EAAEX,KAAK,EAAAkH,QAAA,KAAOpH,IAAI,CAAE,CAAC,EAAAwX,IAAA,WAAA8a,MAAA;UAAA,IAArFtB,oBAAoB,GAAAsB,MAAA;YAAE1wB,MAAM,GAAA0wB,MAAA;YAAEvpB,KAAK,GAAAupB,MAAA;UAAA,OAAA3c,OAAA,CAAAC,OAAA,CACQwa,iBAAiB,CAACvvB,IAAI,EAAEX,KAAK,EAAEF,IAAI,CAAC,EAAAwX,IAAA,WAAA2e,MAAA;YAAA,IAA/ElF,sBAAsB,GAAAkF,MAAA;cAAEjF,SAAS,GAAAiF,MAAA;YAAA,IAGpCnF,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI;cAGhEpqB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5BkqB,oBAAoB,EACpBC,sBAAsB,EACtBnrB,MACJ,CAAC;cACDqqB,OAAO,CAAA/oB,QAAA,KAAM8pB,SAAS,CAAE,CAAC;;;;;KAMhC,QAAAlZ,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAED,IAAMoY,iBAAiB,YAAjBA,iBAAiBA,CAAUvvB,IAAI,EAAEX,KAAK,EAAE0B,MAAM;IAAA,IAAK;MAAA,IAAA+c,MAAA,YAAAA;QAsDrD,OAAO,CAACwS,OAAO,EAAEV,CAAC,CAAC;QACnB,OAAO,CAACU,OAAO,EAAA/pB,QAAA,KAAOqpB,CAAC,EAAG;;MArD1B,IAAMW,YAAY,GAAGnB,kBAAkB,CAAC9uB,OAAO,CAACoD,GAAG,CAAC1D,IAAI,CAAC;MAEzDgG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9G,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEkvB,YAAY,CAAC5uB,OAAO,EAAEiwB,YAAY,EAAEnB,kBAAkB,CAAC9uB,OAAO,CAAC;MAO7H,IAAIsvB,CAAC,GAAArpB,QAAA,KAAQxF,MAAM,CAAE;MAErB,IAAIuvB,OAAO,GAAG,KAAK;MAAA,IAAA9U,MAAA;QAAA,IAEf+U,YAAY,KAAK5vB,SAAS;UAAA,OAAAmU,OAAA,CAAAC,OAAA,CAQpBwb,YAAY,CAAC5lB,GAAG,WAAQ5E,IAAI;YAAA,IAAK;cAAA,IAAA6X,OAAA,YAAAA,QAE7B4S,OAAO;gBAOb,IAAMjlB,CAAC,GAAGqkB,CAAC,CAAC7pB,IAAI,CAACioB,KAAK,CAAC;gBACvBhoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE2pB,CAAC,CAAC,WAAW,CAAC,EAAE,oBAAoB,EAAE,OAAO,EAAErkB,CAAC,CAAC;gBAAA,IACpEA,CAAC,KAAK5K,SAAS,IAAI4K,CAAC,CAACjH,OAAO,KAAKksB,OAAO;kBACxCZ,CAAC,CAAC7pB,IAAI,CAACioB,KAAK,CAAC,CAAC1pB,OAAO,GAAGksB,OAAO;kBAC/BF,OAAO,GAAG,IAAI;;;cAZlB,IAAMI,SAAS,GAAGrxB,KAAK,IAAIA,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;cAAC,IAAAsxB,UAAA,GACnC5qB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE7G,IAAI;cAAA,OAAA4V,OAAA,CAAAC,OAAA,CAAA4b,UAAA,GAAA7b,OAAA,CAAAC,OAAA,CAAWga,kBAAkB,CAAChpB,IAAI,CAAC7G,IAAI,CAAC,CAAC6G,IAAI,EAAE2qB,SAAS,CAAC,EAAA/Z,IAAA,CAAAiH,OAAA,IAAAA,OAAA,CAAA+S,UAAA;aA2BtF,QAAAxZ,CAAA;cAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;YAAC,EAAAR,IAAA;;;MAAA,OAAA7B,OAAA,CAAAC,OAAA,CAAAyG,MAAA,IAAAA,MAAA,CAAA7E,IAAA,GAAA6E,MAAA,CAAA7E,IAAA,CAAAmH,MAAA,IAAAA,MAAA,CAAAtC,MAAA;KAIT,QAAArE,CAAA;MAAA,OAAArC,OAAA,CAAAsC,MAAA,CAAAD,CAAA;;;EAEDnR,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE0oB,aAAW,EAAE,CAAC;EAEpD,OACKxvB,IAAI,MAAAiyB,UAAA,GAAIjyB,IAAI,CAACuyB,IAAI,cAAAN,UAAA,wBAAAC,gBAAA,GAATD,UAAA,CAAWnE,KAAK,cAAAoE,gBAAA,uBAAhBA,gBAAA,CAAkB1mB,GAAG,CAAC,UAAC3K,IAAI,EAAE6I,KAAK;IAAA,OAAK+nB,oBAAkB,CAAC5wB,IAAI,EAAEb,IAAI,EAAE;MAC3EusB,eAAe,EAAfA,eAAe;MACfwD,YAAY,EAAZA,YAAY;MACZtV,SAAS,EAATA,SAAS;MACT3U,MAAM,EAANA,MAAM;MACN4nB,oBAAoB,EAApBA,oBAAoB;MACpBC,UAAU,EAAVA,UAAU;MACVC,eAAe,EAAfA,eAAe;MACfpsB,SAAS,EAATA,SAAS;MACTgoB,WAAW,EAAXA,WAAW;MACX9f,KAAK,EAALA,KAAK;MACL4f,eAAe,EAAfA;KACH,CAAC;GACF,CAAC,KAAK,IAAI;AAsBlB,CAAC,CAAC;AAEF0I,iBAAe,CAACxD,eAAe,GAAG,IAAI;AACtCwD,iBAAe,CAACvuB,WAAW,GAAG,iBAAiB;;;;;;;;;;;;;;;;;;;;;;"}