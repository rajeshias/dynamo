{"version":3,"file":"index.js","sources":["../src/utils/isCheckBoxInput.js","../src/utils/isDateObject.js","../src/utils/isNullOrUndefined.js","../src/utils/isObject.js","../src/logic/getControllerValue.js","../src/logic/getNodeParentName.js","../src/logic/isNameInFieldArray.js","../src/utils/compact.js","../src/utils/isUndefined.js","../src/utils/get.js","../src/constants.js","../src/utils/omit.js","../src/useFormContext.js","../src/logic/getProxyFormState.js","../src/utils/isEmptyObject.js","../src/logic/shouldRenderFormState.js","../src/utils/convertToArrayPayload.js","../src/useFormState.js","../src/useController.js","../src/controller.js","../src/logic/appendErrors.js","../src/utils/isKey.js","../src/utils/stringToPath.js","../src/utils/set.js","../src/logic/focusFieldBy.js","../src/logic/getFocusFieldName.js","../src/logic/generateId.js","../src/logic/mapId.js","../src/utils/append.js","../src/utils/fillEmptyArray.js","../src/utils/insert.js","../src/utils/move.js","../src/utils/omitKeys.js","../src/utils/prepend.js","../src/utils/remove.js","../src/utils/swap.js","../src/utils/isBoolean.js","../src/utils/unset.js","../src/utils/update.js","../src/useFieldArray.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/utils/debounce.js","../src/utils/isPrimitive.js","../src/utils/deepEqual.js","../src/utils/getValidationModes.js","../src/utils/isFileInput.js","../src/utils/isFunction.js","../src/utils/isHTMLElement.js","../src/utils/isMultipleSelect.js","../src/utils/isRadioInput.js","../src/utils/isRadioOrCheckbox.js","../src/utils/isString.js","../src/utils/isWeb.js","../src/utils/Subject.js","../src/logic/getCheckboxValue.js","../src/logic/getFieldValueAs.js","../src/logic/getMultipleSelectValue.js","../src/logic/getRadioValue.js","../src/logic/getFieldValue.js","../src/logic/getResolverOptions.js","../src/logic/hasValidation.js","../src/utils/deepMerge.js","../src/logic/setFieldArrayDirtyFields.js","../src/logic/skipValidation.js","../src/logic/unsetEmptyArray.js","../src/utils/isMessage.js","../src/utils/isRegex.js","../src/logic/getValidateError.js","../src/logic/getValueAndMessage.js","../src/logic/validateField.js","../src/logic/createFormControlV3.js","../src/utils/live.js","../src/useForm.js","../src/useWatch.js","../src/tools/useHistory.js","../src/middleware/dataTransformer.js","../src/middleware/schemaTransformer.js","../src/utils/flattenObject.js","../src/middleware/schemaProxy.js","../src/middleware/setupProxy.js","../src/utils/defaultValidationResolver.js","../src/builder/FormBuilderV1.js","../src/builder/FormBuilderV2.js","../src/logic/createFormControlV4.js","../src/useFormV1.js","../src/builder/FormBuilderV4.js"],"sourcesContent":["export default (element) => element.type === 'checkbox';\n","export default (data) => data instanceof Date;","export default (value) => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\nexport const isObjectType = (value) => typeof value === 'object';\nexport default (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\nexport default (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;","export default (name) => name.substring(0, name.search(/.\\d/)) || name;\n","import getNodeParentName from './getNodeParentName';\nexport default (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n","export default (value) => value.filter(Boolean);\n","export default (val) => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nexport default (obj, path, defaultValue) => {\n    if (isObject(obj) && path) {\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\n        return isUndefined(result) || result === obj\n            ? isUndefined(obj[path])\n                ? defaultValue\n                : obj[path]\n            : result;\n    }\n    return undefined;\n};","export const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};","export default (source, key) => {\n  const copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};","import * as React from 'react';\nimport omit from './utils/omit';\nconst FormContext = React.createContext(null);\nFormContext.displayName = 'RHFContext';\nexport const useFormContext = () => React.useContext(FormContext);\nexport const FormProvider = (props) => (React.createElement(FormContext.Provider, { value: omit(props, 'children') }, props.children));\n","import { VALIDATION_MODE } from '../constants';\n\nexport default (\n  formState,\n  _proxyFormState,\n  localProxyFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {};\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key),\n    });\n  }\n\n  return result;\n};\n","import isObject from './isObject';\nexport default (value) => isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\nexport default (formStateData, _proxyFormState, isRoot) => {\n    const formState = omit(formStateData, 'name');\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};","export default (value) => Array.isArray(value) ? value : [value];\n","import * as React from 'react';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport { useFormContext } from './useFormContext';\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, visible, name } = props || {};\n    const nameRef = React.useRef(name);\n    const [formState, updateFormState] = React.useState(control._formState.val);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    nameRef.current = name;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next: (formState) => (!nameRef.current ||\n                !formState.name ||\n                convertToArrayPayload(nameRef.current).includes(formState.name)) &&\n                shouldRenderFormState(formState, _localProxyFormState.current) &&\n                updateFormState(Object.assign(Object.assign({}, control._formState.val), formState)),\n        });\n        disabled && formStateSubscription.unsubscribe();\n        //Yasser ;)\n        // !visible && formStateSubscription.unsubscribe();\n        return () => formStateSubscription.unsubscribe();\n    }, [disabled, control]);\n    return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\nexport { useFormState };\n","import * as React from 'react';\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nexport function useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister, item } = props;\n    console.log(\"dyno ;)\", item, \"useController\");\n    const [value, setInputStateValue] = React.useState(get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)));\n    const formState = useFormState({\n        control: control || methods.control,\n        name,\n    });\n    // WTACHME: disable bug ;)\n    // TODO: move item from ref into item object seperately \n    // to prevent disable reaction about validation and submission\n    const registerProps = control.register(name, Object.assign(Object.assign({}, {...props.rules, item: {...item} }), { value }));\n    // console.log(\"dyno ;)\", registerProps,\"useController\")\n\n    const updateMounted = React.useCallback((name, value) => {\n        const field = get(control._fields, name);\n        if (field) {\n            field._f.mount = value;\n        }\n    }, [control]);\n    React.useEffect(() => {\n        const controllerSubscription = control._subjects.control.subscribe({\n            next: (data) => (!data.name || name === data.name) &&\n                setInputStateValue(get(data.values, name)),\n        });\n        updateMounted(name, true);\n        return () => {\n            controllerSubscription.unsubscribe();\n            const _shouldUnregisterField = control._shouldUnregister || shouldUnregister;\n            if (isNameInFieldArray(control._names.array, name)\n                ? _shouldUnregisterField && !control._isInAction.val\n                : _shouldUnregisterField) {\n                control.unregister(name);\n            }\n            else {\n                updateMounted(name, false);\n            }\n        };\n    }, [name, control, shouldUnregister, updateMounted]);\n    return {\n        field: {\n            onChange: (event) => {\n                const value = getControllerValue(event);\n                setInputStateValue(value);\n                registerProps.onChange({\n                    target: {\n                        value,\n                        name: name,\n                    },\n                    type: EVENTS.CHANGE,\n                });\n            },\n            onBlur: () => {\n                registerProps.onBlur({\n                    target: {\n                        name: name,\n                    },\n                    type: EVENTS.BLUR,\n                });\n            },\n            name,\n            value,\n            ref: (elm) => elm &&\n                registerProps.ref({\n                    //todo item ;)\n                    // ...(props.item && props.item || {}),\n                    focus: () => elm.focus && elm.focus(),\n                    setCustomValidity: (message) => elm.setCustomValidity(message),\n                    reportValidity: () => elm.reportValidity(),\n                }),\n        },\n        formState,\n        fieldState: {\n            invalid: !!get(formState.errors, name),\n            isDirty: !!get(formState.dirtyFields, name),\n            isTouched: !!get(formState.touchedFields, name),\n            error: get(formState.errors, name),\n        },\n    };\n}","import { useController } from './useController';\nconst Controller = (props) => props.render(useController(props));\nexport { Controller };","export default (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n  ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n","export default (value) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input) =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\nexport default function set(object, path, value) {\n  let index = -1;\n  // console.log(\"dyno ;)\", isKey(path),stringToPath(path), \"setset\", object)\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const _f = field._f;\n            const current = omit(field, '_f');\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n                    break;\n                }\n                else if (_f.refs) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(current)) {\n                focusFieldBy(current, callback);\n            }\n        }\n    }\n};\nexport default focusFieldBy;","export default (name, index, options) => options && !options.shouldFocus\n    ? options.focusName || `${name}.${options.focusIndex}.`\n    : `${name}.${index}.`;","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import generateId from './generateId';\nexport default (values = [], keyName) => values.map((value) => (Object.assign({ [keyName]: (value && value[keyName]) || generateId() }, value)));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function append(data, value) {\n    return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}","export default (value) =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}","import isUndefined from './isUndefined';\n\nexport default (\n  data,\n  from,\n  to,\n) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import omit from './omit';\nexport default (fields, keyName) => fields.map((field = {}) => omit(field, keyName));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\n\nexport default (data, index) =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n      data,\n      (convertToArrayPayload(index)).sort((a, b) => a - b),\n    );\n","export default (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default (value) => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nexport default function unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}","export default (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import * as React from 'react';\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKey from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { useFormContext } from './useFormContext';\nexport const useFieldArray = (props) => {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const _focusName = React.useRef('');\n    const [fields, setFields] = React.useState(mapIds(control._getFieldArrayValue(name), keyName));\n    control._names.array.add(name);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(value);\n        const updatedFieldArrayValues = appendAt(control._getFieldArrayValue(name), appendValue);\n        control._bathFieldArrayUpdate(keyName, name, appendAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, updatedFieldArrayValues.length - appendValue.length, options);\n    };\n    const prepend = (value, options) => {\n        const updatedFieldArrayValues = prependAt(control._getFieldArrayValue(name), convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, prependAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, 0, options);\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArrayValue(name), index);\n        control._bathFieldArrayUpdate(keyName, name, removeArrayAt, {\n            argA: index,\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    const insert = (index, value, options) => {\n        const updatedFieldArrayValues = insertAt(control._getFieldArrayValue(name), index, convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, insertAt, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, index, options);\n    };\n    const swap = (indexA, indexB) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        swapArrayAt(fieldValues, indexA, indexB);\n        control._bathFieldArrayUpdate(keyName, name, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const move = (from, to) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        moveArrayAt(fieldValues, from, to);\n        control._bathFieldArrayUpdate(keyName, name, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const update = (index, value) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        const updatedFieldArrayValues = updateAt(fieldValues, index, value);\n        control._bathFieldArrayUpdate(keyName, name, updateAt, {\n            argA: index,\n            argB: value,\n        }, fieldValues, true, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    React.useEffect(() => {\n        control._isInAction.val = false;\n        if (control._names.watchAll) {\n            control._subjects.state.next({});\n        }\n        else {\n            for (const watchField of control._names.watch) {\n                if (name.startsWith(watchField)) {\n                    control._subjects.state.next({});\n                    break;\n                }\n            }\n        }\n        control._subjects.watch.next({\n            name,\n            values: control._formValues,\n        });\n        _focusName.current &&\n            focusFieldBy(control._fields, (key) => key.startsWith(_focusName.current));\n        _focusName.current = '';\n        control._subjects.array.next({\n            name,\n            values: omitKey([...fields], keyName),\n        });\n        control._proxyFormState.isValid && control._updateValid();\n    }, [fields, name, control, keyName]);\n    React.useEffect(() => {\n        const fieldArraySubscription = control._subjects.array.subscribe({\n            next(payload) {\n                if (payload.isReset) {\n                    unset(control._fields, payload.name || name);\n                    unset(control._formValues, payload.name || name);\n                    payload.name\n                        ? set(control._formValues, payload.name, payload.values)\n                        : payload.values && (control._formValues = payload.values);\n                    setFields(mapIds(get(control._formValues, name), keyName));\n                }\n            },\n        });\n        !get(control._formValues, name) && set(control._formValues, name, []);\n        return () => {\n            fieldArraySubscription.unsubscribe();\n            if (control._shouldUnregister || shouldUnregister) {\n                control.unregister(name);\n                unset(control._formValues, name);\n            }\n            else {\n                const fieldArrayValues = get(control._formValues, name);\n                fieldArrayValues && set(control._formValues, name, fieldArrayValues);\n            }\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [name, control, keyName]),\n        move: React.useCallback(move, [name, control, keyName]),\n        prepend: React.useCallback(prepend, [name, control, keyName]),\n        append: React.useCallback(append, [name, control, keyName]),\n        remove: React.useCallback(remove, [name, control, keyName]),\n        insert: React.useCallback(insert, [name, control, keyName]),\n        update: React.useCallback(update, [name, control, keyName]),\n        fields: fields,\n    };\n};","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export default (callback, wait) => {\n  let timer = 0;\n  return (...args) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n  };\n};","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nexport default (value) => isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\nexport default function deepEqual(object1, object2) {\n    if (isPrimitive(object1) ||\n        isPrimitive(object2) ||\n        isDateObject(object1) ||\n        isDateObject(object2)) {\n        return object1 === object2;\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isObject(val1) || Array.isArray(val1)) &&\n                (isObject(val2) || Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","import { VALIDATION_MODE } from '../constants';\nexport default (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});","export default (element) => element.type === 'file';\n","export default (value) => typeof value === 'function';\n","export default (value) => value instanceof HTMLElement;\n","export default (element) => element.type === `select-multiple`;\n","export default (element) => element.type === 'radio';\n","import isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\nexport default (ref) => isRadioInput(ref) || isCheckBoxInput(ref);","export default (value) => typeof value === 'string';\n","export default typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n","export class Subscription {\n  constructor() {\n      this.tearDowns = [];\n  }\n  add(tearDown) {\n      this.tearDowns.push(tearDown);\n  }\n  unsubscribe() {\n      for (const teardown of this.tearDowns) {\n          teardown();\n      }\n      this.tearDowns = [];\n  }\n}\nclass Subscriber {\n  constructor(observer, subscription) {\n      this.observer = observer;\n      this.closed = false;\n      subscription.add(() => (this.closed = true));\n  }\n  next(value) {\n      if (!this.closed) {\n          this.observer.next(value);\n      }\n  }\n}\nexport default class Subject {\n  constructor() {\n      this.observers = [];\n  }\n  next(value) {\n      for (const observer of this.observers) {\n          observer.next(value);\n      }\n  }\n  subscribe(observer) {\n      const subscription = new Subscription();\n      const subscriber = new Subscriber(observer, subscription);\n      this.observers.push(subscriber);\n      return subscription;\n  }\n  unsubscribe() {\n      this.observers = [];\n  }\n}","import isUndefined from '../utils/isUndefined';\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nexport default (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n","import isUndefined from '../utils/isUndefined';\nexport default (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : +value\n        : valueAsDate\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;","export default (options) => [...options]\n    .filter(({ selected }) => selected)\n    .map(({ value }) => value);","const defaultReturn = {\n  isValid: false,\n  value: null,\n};\nexport default (options) => Array.isArray(options)\n  ? options.reduce((previous, option) => option && option.checked && !option.disabled\n      ? {\n          isValid: true,\n          value: option.value,\n      }\n      : previous, defaultReturn)\n  : defaultReturn;","import isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\nexport default function getFieldValue(field) {\n    if (field && field._f) {\n        const ref = field._f.ref;\n        //TODO: findout why it is here ;) thanks to Edward ;)\n        // if (field._f.refs ? field._f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        //     return;\n        // }\n        if (isFileInput(ref)) {\n            return ref.files;\n        }\n        if (isRadioInput(ref)) {\n            return getRadioValue(field._f.refs).value;\n        }\n        if (isMultipleSelect(ref)) {\n            return getMultipleSelectValue(ref.options);\n        }\n        if (isCheckBox(ref)) {\n            return getCheckboxValue(field._f.refs).value;\n        }\n        return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\n    }\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\n\nexport default (\n  fieldsNames,\n  _fieldss,\n  criteriaMode,\n  shouldUseNativeValidation,\n) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fieldss, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (options, mounted) => mounted &&\n    options &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\nexport function deepMerge(target, source) {\n    if (isPrimitive(target) || isPrimitive(source)) {\n        return source;\n    }\n    for (const key in source) {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        try {\n            target[key] =\n                (isObject(targetValue) && isObject(sourceValue)) ||\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\n                    ? deepMerge(targetValue, sourceValue)\n                    : sourceValue;\n        }\n        catch (_a) { }\n    }\n    return target;\n}","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n    let index = -1;\n    while (++index < values.length) {\n        for (const key in values[index]) {\n            if (Array.isArray(values[index][key])) {\n                !dirtyFields[index] && (dirtyFields[index] = {});\n                dirtyFields[index][key] = [];\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n            }\n            else {\n                !isNullOrUndefined(defaultValues) &&\n                    deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n                    ? set(dirtyFields[index] || {}, key)\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\n            }\n        }\n        parentNode &&\n            !dirtyFields.length &&\n            delete parentNode[parentName];\n    }\n    return dirtyFields;\n}\nexport default (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n","export default ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\n  if (isOnAll) {\n      return false;\n  }\n  else if (!isSubmitted && isOnTouch) {\n      return !(isTouched || isBlurEvent);\n  }\n  else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n      return !isBlurEvent;\n  }\n  else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n      return isBlurEvent;\n  }\n  return true;\n};","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default (ref, name) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\nimport isString from './isString';\nexport default (value) => isString(value) || React.isValidElement(value);\n","export default (value) => value instanceof RegExp;\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nexport default function getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\nexport default async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    if (!mount) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidty = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n    };\n    if (required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n            (isBoolean(inputValue) && !inputValue) ||\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\n            (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: inputRef }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            if (isString(maxOutput.value)) {\n                exceedMax = valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value)) {\n                exceedMin = valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        console.log(\"dyno ;)\", isRegex(new RegExp(patternValue)), !inputValue.match(patternValue), patternValue, \"patternValue\")\n        if (isRegex(new RegExp(patternValue)) && !inputValue.match(patternValue)) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n                if (!validateAllFieldCriteria) {\n                    setCustomValidty(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n                if (validateError) {\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n                    setCustomValidty(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = Object.assign({ ref: inputRef }, validationResult);\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidty(true);\n    return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV3(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                    (_proxyFormState.touchedFields &&\n                        isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }) => {\n        // console.log(\"dyno ;)\", \"SUBMITFORM here\", _fields)\n        for (const name in _fields) {\n            const field = _fields[name];\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    console.log(\"dyno ;)\", fieldError,\"fieldError\")\n                    if (shouldCheckValid) {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                            break;\n                        }\n                    }\n                    else {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                        }\n                        fieldError[_f.name]\n                            ? set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name);\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({ isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n            ? _defaultValues\n            : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges,result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                ? [...result[0]]\n                : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues,\"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors, \"end\");\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        console.log(\"dyno ;)\", _formValues, _fields, \"fdfdfdfdfdfd\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                    fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), { refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name } }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), { onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                } });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import isHTMLElement from './isHTMLElement';\nexport default (ref) => !isHTMLElement(ref) || !document.contains(ref);\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV3 as createFormControlV2 } from './logic/createFormControlV3';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV2(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import * as React from 'react';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport isUndefined from './utils/isUndefined';\nimport { useFormContext } from './useFormContext';\nexport function useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\n        ? control._getWatch(name)\n        : defaultValue);\n    React.useEffect(() => {\n        const watchSubscription = control._subjects.watch.subscribe({\n            next: ({ name }) => {\n                console.log(\"dyno ;)\", \"##1 watchSubscription\", name)\n                return(!_name.current ||\n                !name ||\n                convertToArrayPayload(_name.current).some((fieldName) => name &&\n                    fieldName &&\n                    (fieldName.startsWith(name) ||\n                        name.startsWith(fieldName)))) &&\n                updateValue(control._getWatch(_name.current, defaultValue))},\n        });\n        disabled && watchSubscription.unsubscribe();\n        return () => watchSubscription.unsubscribe();\n    }, [disabled, control, defaultValue]);\n    return value;\n}","import { useMemo, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst rebuildHistory = (history = {}, to = 0, from = 0) => {\n    const newHistory = [...history].slice(from, to);\n    console.log(\"dyno ;)\", 'rebuildHistory', newHistory, to)\n    return new Set(newHistory);\n}\n\nexport default function useHistory(init = { name: \"\" }) {\n\n    const [states, setStates] = useState(init);\n\n    //history\n    const [history, updateHistory] = useState(new Set());\n    const [index, setIndex] = useState(0);\n    const [currentPage, updateCurrentPage] = useState(init?.name);\n\n    const state = useMemo(() => states[currentPage], [index, currentPage]);\n    // const state = useMemo(() => states[init?.name], [states, init.name]);\n\n    // {\n    //     \"dashboard\": { }\n    // }\n\n    const setState = (value) => {\n        if (value === undefined || value === null || value === {}) return;\n        // check the existing one with name\n        // { name: \"pageName\" }\n        const pageName = value.name;\n\n        const existing = _.get(states, pageName);\n\n        // check whether equal or it changed ;)\n        if (history.has(pageName)) {\n            // if (_.isEqual(existing, value)) {\n            // const existingPage = _.get(states,pageName);\n            // const newHistory = [...history].slice(0,existing[\"x-index\"]);\n            const newHistory = rebuildHistory(history, existing[\"x-index\"]);\n            updateHistory(newHistory)\n\n            const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": existing[\"x-index\"] }));\n            setStates(copy);\n\n            // updateHistory(new Set(newHistory));\n            setIndex(existing[\"x-index\"])\n            updateCurrentPage(pageName);\n\n            console.log(\"dyno ;)\", \"lolllllllllllllllllll\", history, '99999', existing[\"x-index\"], newHistory);\n            return;\n        }\n        console.log(\"dyno ;)\", \"histlori\", value, _.set(states, pageName, value), state, history.size)\n        const newIndex = index + 1;\n        const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": newIndex }));\n        // setIndex(pageName);\n        setIndex(newIndex);\n        // copy = _.set(copy,value.name, value);\n        updateHistory(history.add(pageName));\n        setStates(copy);\n        updateCurrentPage(pageName);\n        console.log(\"dyno ;)\", 'hissssstory', history)\n        console.log(\"dyno ;)\", value, 'drooooomemppppppphistlori', existing)\n        console.log(\"dyno ;)\", states, '31231232323132', state, currentPage, _.isEqual(existing, value))\n    }\n\n    const setStateOld = (value) => {\n        if (_.isEqual(state, value)) {\n            return;\n        }\n        const copy = _.cloneDeep(states);\n        copy.length = index + 1;\n        copy.push(value);\n        setStates(copy);\n        setIndex(copy.length - 1);\n        console.log(\"dyno ;)\", states, 'drooooomemppppppp', _.isEqual(state, value), copy, index)\n    };\n\n    const resetState = (init = { name: \"\" }) => {\n        setIndex(0);\n        setStates({});\n        updateHistory([])\n        console.log(\"dyno ;)\", \":::::resetState\", history, states, index)\n    };\n\n    const goBack = (steps = 1, reset = false) => {\n        if(Number(steps)){\n            goBackByIndex(steps, reset);\n            return;\n        }\n        console.log(\"dyno ;)\", 'gobackbyname', steps)\n        if(!states[steps]){\n            throw \"gobackbyname is not available ;)\";\n        }\n        goBackByName(steps, reset);\n    }\n\n\n    const goBackByIndex = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goBackByName = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const existingPage = _.get(states, steps);\n\n\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goForward = (steps = 1) => {\n        setIndex(Math.min(states.length - 1, Number(index) + (Number(steps) || 1)));\n    };\n\n    const updatePage = (value) => {\n        const existing = _.get(states, currentPage);\n        existing.defaultValues = { ...value };\n        console.log(\"dyno ;)\", value, 'updatePage youuuuupppp', existing)\n    }\n\n    return {\n        state: state,\n        setState: setState,\n        resetState: resetState,\n        currentPage,\n        index: index,\n        lastIndex: states?.length - 1 || 0,\n        goBack: goBack,\n        goForward: goForward,\n        updatePage: updatePage,\n        history\n    };\n}","import _ from \"lodash\";\n\nconst dataTransformer = (data, name, obj) => (local) => {\n    // const { getValues, dataStore } = obj.sharedItems || { getValues: undefined };\n    // const values = { ...dataStore, ...(getValues() || {}) };\n    // console.log(\"dyno ;)\", data, values, 'getValues()()()')\n    //\n\n    const { getValues, dataStore } = local.sharedItems || { getValues: undefined };\n    const values = { ...dataStore, ...(getValues && getValues() || {}) };\n    console.log(\"dyno ;)\", data, values, 'getValues()()()')\n\n\n    //Need to check later ;)\n    // if (typeof data === 'function') {\n    //     return data()(values)\n    // }\n\n    if (typeof data === \"string\") {\n        if (data !== undefined && data.includes(\"$$\")) {\n            console.log(\"dyno ;)\", \"blaherebla\", data, values)\n            return _.get(values, data.substring(2));\n        }\n        // check fx first \n        if (data !== undefined && data.includes(\"fx\")) {\n            console.log(\"dyno ;)\", data.slice(2), 'sliceeeeeee')\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`local.${data.slice(2)}`);\n\n                console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt')\n                if (typeof result === 'function') {\n                    return result(values);\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, 'rrrrrrrsulttttttttt errorororrororor')\n            }\n        };\n\n        let patternResult = data;\n\n        if (data !== undefined && data.includes(\"dx\")) {\n            patternResult = patternResult.replace(/dx.*?\\(.*?\\)/g, (_, name) => {\n\n                try {\n                    console.log(\"dyno ;)\", _, name, 'pattern waaaaaalalala 2nd', patternResult)\n                    const result = eval(`local.${_}`);\n                    if (typeof result === 'function') {\n                        return result(values);\n                    }\n                    return result;\n                } catch (error) {\n                    console.log(\"dyno ;)\", error, 'dxxxxxxxxxxxxdxdxxdxdxx')\n                    return _;\n                }\n            });\n        }\n\n        patternResult = patternResult.replace(/\\$\\{(.*?)\\}/g, (_, name) => {\n\n            const result = values[name] || ''; //_.get(values, name);\n            console.log(\"dyno ;)\", values, 'valuesssssssssssssssssRGEX')\n            console.log(\"dyno ;)\", name, '------>>>>>>------', result, 'pattern waaaaaalalala only', patternResult)\n\n            return result !== undefined && result//\"\";//field[name];\n        });\n\n        return patternResult;\n\n    };\n\n    return data;\n}\n\nexport { dataTransformer };","import _ from \"lodash\";\n\nconst schemaTransformation = (data, name, obj) => (local) => {\n    const values = { ...obj.sharedItems };\n    if (data === undefined || data === null) return data;\n\n    if (typeof data === \"string\") {\n        // check fx first\n        if (data !== undefined && data.includes(\"fx\")) {\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`extraFunctions.${data.slice(2)}`);\n                if (typeof result === \"function\") {\n                    return result(values);\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, \"rrrrrrrsulttttttttt errorororrororor\");\n            }\n        }\n\n        if (data !== \"\") {\n            const result = _.get(values, data.substring(2)) ?? data; // values[data] || data;\n            // if(result!== undefined) return result;\n            return result;\n        }\n    }\n\n    return data;\n};\n\nexport default schemaTransformation;","const flattenHelper = (currentObject, newObject, previousKeyName) => {\n    for (let key in currentObject) {\n        let value = currentObject[key];\n\n        if (value?.constructor !== Object) {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                newObject[key] = value;\n            } else {\n                if (key == null || key == \"\") {\n                    newObject[previousKeyName] = value;\n                } else {\n                    newObject[previousKeyName + \".\" + key] = value;\n                }\n            }\n        } else {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                flattenHelper(value, newObject, key);\n            } else {\n                flattenHelper(value, newObject, previousKeyName + \".\" + key);\n            }\n        }\n    }\n};\n\nconst flattenObject = (oldObject) => {\n    const newObject = {};\n\n    flattenHelper(oldObject, newObject, \"\");\n\n    return newObject;\n};\n\nexport default flattenObject\n","import flattenObject from \"../utils/flattenObject\";\nimport schemaTransformation from \"./schemaTransformer\";\n\nconst schemaProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    if (item === undefined) return {};\n\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            } else {\n                return schemaTransformation(\n                    target[prop],\n                    prop,\n                    target\n                )({\n                    ...extraFunctions\n                });\n            }\n        }\n    };\n\n    const proxySchema = new Proxy(\n        {\n            ...flattenObject({\n                ...item.action.schema\n            }),\n            sharedItems: { ...extraValues, ...item }\n        },\n        proxyHandler\n    );\n    return proxySchema\n}\n\nexport default schemaProxy;\n\n\n","import _ from \"lodash\";\nimport schemaProxy from \"./schemaProxy\";\n\nconst setupProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    const proxyItems = schemaProxy(item, extraValues, extraFunctions);\n\n    let newSchema = {};\n    const y = Object.keys(proxyItems).map((el) => {\n        if (el === \"sharedItems\") return;\n        newSchema = _.set(newSchema, el, proxyItems[el]);\n        console.log(\"dyno ;)\", el, \"flattttttttten\");\n    });\n\n    return _.cloneDeep(newSchema);\n}\n\nexport default setupProxy;\n","const defaultValidationResolver = {\n    noteq: async (item, value) => {\n        return (value !== '' && !item.value.includes(value)) || false;\n    },\n    eq: async (item, value) => {\n        return value?.toString() === item.value;\n    },\n    notEmptyAndEqual: async (item, value) => {\n        return (value !== '' && item.value.includes(value)) || false;\n    },\n};\n\nexport {\n    defaultValidationResolver\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\n// import { Subject, AsyncSubject } from 'rxjs'\n// import pubsub from \"./pubsub\";\nimport _ from 'lodash'\n// import { unitDependencies } from 'mathjs'\n// import { getResetValue } from './utils/methods'\n// import { JsonEditor } from 'jsoneditor-react/es'\n// import { namespace } from 'store/dist/store.legacy'\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// const subject = new Subject()\n\n// export const pubsub = {\n//     publish: (name, message) => subject.next(name, message),\n//     clearMessages: () => subject.next(),\n//     getMessage: () => subject.asObservable(),\n// }\n\nconst useStateWithPromise = (initialState) => {\n    const [state, setState] = useState(initialState)\n    const resolverRef = useRef(null)\n\n    useEffect(() => {\n        if (resolverRef.current) {\n            resolverRef.current(state)\n            resolverRef.current = null\n        }\n        /**\n         * Since a state update could be triggered with the exact same state again,\n         * it's not enough to specify state as the only dependency of this useEffect.\n         * That's why resolverRef.current is also a dependency, because it will guarantee,\n         * that handleSetState was called in previous render\n         */\n    }, [resolverRef.current, state])\n\n    const handleSetState = useCallback(\n        (stateAction) => {\n            setState(stateAction)\n            return new Promise((resolve) => {\n                resolverRef.current = resolve\n            })\n        },\n        [setState],\n    )\n\n    return [state, handleSetState]\n}\n\nexport const ControlledComponentsV2 = (props) => {\n    // console.log(\"dyno ;)\", 'current', props.control.current);\n    // if(props.control.current === undefined) return;\n    const [field, setField] = useState(props.control.current && props.control.current[props.name])\n\n    // console.log(\"dyno ;)\", props.name, \"ControlledComponentsV2 renderrrrrrrrrr <1>\", field, props.errors, props?.errors?.current && props?.errors?.current[props.name], props.name)\n    console.log(\"dyno ;)\", \n        props.name,\n        'ControlledComponentsV2 renderrrrrrrrrr <1>',\n        field,\n        props.errors,\n        props.name,\n    )\n\n    const titlellll = props.control.current['textbox-5'].value\n    const error = props.errors && props.errors.current && props.errors?.current[props.name]\n\n    const [fields, setFields] = useState('')\n\n\n\n    const onChange = (value) => {\n        // messageService.sendMessage(`${props.name}`);\n        // pubsub.publish(\"anEvent\", props.name);\n        console.log(\"dyno ;)\", 'valuelavue', value)\n        // const [newValue, error] = props.updateReference(value.target.value, props.name);\n\n        // update(value);\n\n        props.updateReference(value, props.name)\n        setField({ ...field, value: value })\n        // subscription(props)\n    }\n\n    // const subscription = pubsub.getMessage().subscribe((data) => {\n    //     // console.log(\"dyno ;)\", `${props.name}, ControlledTextInput, message was published with this data: \"${data}\"`);\n\n    //     if (props.name === 'textbox-0') {\n    //         setFields(data)\n    //     }\n    // })\n\n    return props.render({ onChange, value: field.value, field, error, index: props.index })\n}\n\nconst IINNOMEMO = (props) => <ControlledComponentsV2 {...props} />\n\nconst IIN = React.memo(\n    (props) => <ControlledComponentsV2 {...props} />,\n    (prevProps, nextProps) => {\n        // if (prevProps === nextProps) {\n        const oldE = (prevProps.errors?.current && prevProps.errors?.current[prevProps.name]) || {}\n        const newE = nextProps.errors?.current[nextProps.name] || {}\n\n        const errror = _.isEqual(oldE, newE)\n        const errrorlol = nextProps.errors?.current[prevProps.name]\n\n        console.log(\"dyno ;)\", \n            prevProps,\n            nextProps,\n            prevProps.name + ' ControlledComponentsV2 renderrrrrrrrrr <2>',\n            errror,\n            'is===',\n            errrorlol,\n            prevProps.name,\n        )\n        // if(!errror) return false;\n        // return errror;\n        // return errror;\n        if (JSON.stringify(nextProps) === JSON.stringify(prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\n\nconst createValidationObject = (item) => {\n\n\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n                        // child && child;\n                        // const { useFieldArray } = useFormContext()\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\nconst SimpleRender = props => renderForm({ ...props });\nconst MemoRenderForm = props => SimpleRender(props) //React.memo(renderForm, (prev, next)=>{\n// console.log(\"dyno ;)\", prev,next,\"memoRenderForm\");\n// })\n\n\n\nconst RenderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    control,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    if (data === undefined) return null;\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = RenderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    control,\n                    setValue\n                )\n            }\n            // if (!item.visible) return null\n\n\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={name}\n                    name={name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || {}}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n                        // if (item.name === \"textbox-0\") {\n                        //     const { fields, append, remove } = useFieldArray({\n                        //         control,\n                        //         name: \"textbox-0.test\"\n                        //     });\n\n                        //     // const myaCondition = useWatch({\n                        //     //     control,\n                        //     //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     //     defaultValue: undefined // default value before the render\n                        //     // });\n                        //     // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                        //     return (\n                        //         <>\n                        //             {/* <>\n                        //                 {`${item.name}`}\n                        //                 <br />\n                        //                 <input {...field} />\n                        //                 {errors && errors[item.name] && `${item.name} errororrr`}\n                        //                 {child && child}\n                        //                 <br />\n                        //                 <br />\n                        //                 <br />\n                        //             </> */}\n                        //             <ul>\n                        //                 {fields.map((el, index) => (\n                        //                     <li key={el.id}>\n                        //                         <input {...control.register(`textbox-0.test.${index}.firstName`)} />\n                        //                         {<Controller\n                        //                             render={({ field }) => <input {...field} />}\n                        //                             name={`textbox-0.test.${index}.lastName`}\n                        //                             control={control}\n                        //                         />}\n                        //                         <button type=\"button\" onClick={() => remove(index)}>Delete</button>\n                        //                     </li>\n                        //                 ))}\n                        //             </ul>\n                        //             {JSON.stringify(getValue(\"textbox-3\"))}\n                        //             <button type=\"button\" onClick={() => {\n                        //                 control.unregister(\"textbox-10\")\n                        //                 console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                        //             }}> unregister 10 now ;) </button>\n\n                        //             <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button>\n                        //             <button\n                        //                 type=\"button\"\n                        //                 onClick={() => append({ firstName: \"bill\", lastName: \"luo\" })}\n                        //             >\n                        //                 append\n                        //             </button>\n                        //         </>\n                        //     )\n                        // }\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback\n                        })\n                        // console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', field.name)\n                        return Component\n                    }}\n\n                />\n                // <ControlledComponents\n                //     managedCallback={managedCallback}\n                //     updateReference={updateReference}\n                //     // key={item.name}\n                //     name={name}\n                //     control={myControl}\n                //     errors={errors}\n                //     formName={'formName'}\n                //     index={index}\n                //     child={child}\n                //     render={({ onUpdate, value, fields, field, error, index, child, managedCallback }) => {\n                //         const Component = components(item.type, {\n                //             onUpdate,\n                //             value,\n                //             fields,\n                //             field,\n                //             error,\n                //             child,\n                //             errors,\n                //             item,\n                //             index,\n                //             managedCallback\n                //         })\n                //         console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', error, field.name)\n                //         // return Component\n                //         // return (\n                //         //     <Component\n                //         //         {...{ onUpdate, value, fields, field, error, child, errors, item, index }}\n                //         //     />\n                //         // )\n\n                //         return <>\n                //             <br />\n                //             <div style={{ backgroundColor: child.length > 0 && \"blanchedalmond\" || \"whitesmoke\", padding: 11 }}>\n                //                 <Input onChange={(e) => onUpdate(e.target.value)} defaultValue={value} value={value} />------{fields && fields.value}\n                //                 {field.name}\n                //                 {error && error.error && \"Hiiiii i am here\" || \"no way ;)\"}\n                //             </div>\n                //             {child.length > 0 && <div style={{ backgroundColor: \"blanchedalmond\", padding: 11 }}>\n                //                 child ;)\n                //                 {child && child}\n                //             </div>}\n                //         </>\n                //     }}\n                // />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\nconst InRenderform = React.memo(props => RenderForm(props),\n    (prevProps, nextProps) => {\n        if (!deepEqual(nextProps, prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\nInRenderform.displayName = \"RenderForm\"\nInRenderform.whyDidYouRender = true\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].refId, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\n// const convertArrayToObject = (array, key) => {\n//     const initialValue = {};\n//     return array.reduce((obj, item) => {\n//         return {\n//             ...obj,\n//             [item[key]]: item,\n//         };\n//     }, initialValue);\n// };\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderV1 = React.forwardRef(({ items,\n    validationResolver = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground\n    } = useForm({\n        mode: 'onChange',\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData([...b])\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n\n            }\n        });\n\n        setData(items)\n    }, items)\n\n    // const watchingList = watch(\"textbox-2\");\n\n    // const watchingList = useWatch({\n    //     control,\n    //     name: \"textbox-2\", // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n    //     // defaultValue: 'default' // default value before the render\n    //   });\n    // const watchingList = \"\"//watchingComponents.current && watch([...watchingComponents.current.keys()]);\n    // const watchingList = watchingComponents.current && watch([...watchingComponents.current.keys()]);\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, [...data])\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, result)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData([...preResult])\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        let n = [...result]\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                    // myComponents.current[item.name].visible = touched;\n                    n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                    updated = true\n                    console.log(\"dyno ;)\", \n                        'hashas',\n                        await _.get({ a: n }, `a${item.refId}.visible`),\n                        await touched,\n                        hasCondition,\n                        updated,\n                    )\n                }\n\n                // }\n            })\n        }\n        return [updated, [...n]]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderV1.whyDidYouRender = true\nFormBuilderV1.displayName = \"FormBuilderV1\"\n\nexport default FormBuilderV1\n","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\n// import {\n//     useWatch\n// } from \"../useWatch\"\n// import {\n//     useFieldArray\n// } from \"../useFieldArray\"\n// import {\n//     FormProvider,\n//     useFormContext\n// } from \"../useFormContext\"\n// import {\n//     useForm\n// } from \"../useForm\"\n// import {\n//     Controller\n// } from \"../Controller\"\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined\n}\n) => {\n\n    const selectedComponent = {...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name,idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n   \n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={item.rule || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name,item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`,'`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </>\n                }\n\n                const Component = components(item.type, {\n                    field,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    shouldUnregister = true,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        unregister\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        unregister\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n        \n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n        \n        const subscription = watch(async (value, { name, type }) => {\n            // const [a, b] = await checkPreCondition(name, value[name], items);\n            // setData({ ...b });\n            // console.log(\"dyno ;)\", \"watchhhhhhh\", name, value)\n// return;\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    // setData([...b]);\n                    setData({ ...b });\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = {...result}\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"],\"accountNoaccountNo\",'-----',i)\n                if(i !== undefined && i.visible !== touched ){\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV4(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    console.log(\"dyno ;)\", formOptions,'formOptions')\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                (_proxyFormState.touchedFields &&\n                    isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }) => {\n        // console.log(\"dyno ;)\", \"SUBMITFORM here\", _fields)\n        for (const name in _fields) {\n            const field = _fields[name];\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    console.log(\"dyno ;)\", fieldError, \"fieldError\")\n                    if (shouldCheckValid) {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                            break;\n                        }\n                    }\n                    else {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                        }\n                        fieldError[_f.name]\n                            ? set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name);\n                            //Added to stop at first error\n                            //TODO: enhance as parameter \n                            if (Object.keys(_formState.errors).length == 1) break;\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({\n                    isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange\n                }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = field._f.watch || !isEmptyObject(fieldState) || isWatched;\n            // const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            console.log(\"dyno ;)\", shouldRender,`heyyyyyyyyyyy { ${name} } watch me or not?!`,field._f.watch, \"shouldSkipValidation:\", shouldSkipValidation, \"isBlurEvent:\", isBlurEvent, '------;)---- is watching hahaha:', isWatched)\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                    set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n                ? _defaultValues\n                : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges, result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                    ? [...result[0]]\n                    : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues, \"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors, \"end\");\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        console.log(\"dyno ;)\", _formValues, _fields, \"getValuesgetValues\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), {\n                    refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name }\n                }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options), \"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), {\n                    onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                        if (ref) {\n                            registerFieldRef(name, ref, options);\n                        }\n                        else {\n                            const field = get(_fields, name, {});\n                            const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                            if (field._f) {\n                                field._f.mount = false;\n                            }\n                            _shouldUnregister &&\n                                !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                                _names.unMount.add(name);\n                        }\n                    }\n            });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV4 } from './logic/createFormControlV4';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV4(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useFormV1\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\nimport { dataTransformer as defaultDataTransformer } from '../middleware/dataTransformer'\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined,\n    dataTransformer\n}\n) => {\n\n    const selectedComponent = { ...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent,\n        dataTransformer\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent,\n    dataTransformer\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name, idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name,\n            dataTransformer\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n    const { validate = {} } = item?.rule || { validate: {} };\n\n    if (item?.rule) {\n        console.log(\"dyno ;)\", validate, 'validate[', sharedItems?.localFunction)\n        Object.keys(validate).forEach(key => {\n            if (typeof validate[key] === \"function\") return;\n            validate[key] = sharedItems?.localFunction[key](validate[key])({ ...sharedItems, getItem: () => item });\n            console.log(\"dyno ;)\", validate, 'validate[ within', validate[key])\n        });\n        console.log(\"dyno ;)\", validate, 'validate[ after')\n    }\n\n\n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={{ ...item.rule } || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name, item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <div>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`, '`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`,\n                                                        dataTransformer\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </div>\n                }\n\n                //proxy here ;)\n                const proxyHandler = {\n                    get(target, prop, receiver) {\n                        if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                            console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                            return new Proxy(target[prop], proxyHandler);\n                        }\n                        return dataTransformer(target[prop], prop, target)({\n                            ...sharedItems.localFunction,\n                            sharedItems: sharedItems,\n                            // ...sharedItems\n                        });\n                    }\n                };\n\n                const proxyItem = new Proxy({\n                    ...item,\n                    sharedItems: sharedItems\n                }, proxyHandler);\n\n\n                //end of proxy\n\n\n                const Component = components(item.type, {\n                    field,\n                    item: proxyItem,//item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <div>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </div>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].watch) {\n            initialValue.set(items[key].name);//POC only\n        }\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    localFunction,\n    shouldUnregister = true,\n    defaultValues = {},\n    devMode = false,\n    dataTransformer = defaultDataTransformer,\n    dataStore\n}, ref) => {\n\n    // if (devMode) {\n    //     console.log = () => { };\n    // }\n    console.log = (function() {\n        const log = console.log;\n    \n        return function() {\n            const args = Array.from(arguments);\n            if (!args.includes(\"dyno ;)\") || devMode) {\n                log.apply(console, args);\n            } \n        }\n    })();\n    \n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        unregister,\n        clearErrors,\n        reset\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        reValidateMode: 'onSubmit',\n        // resolver: async (data, context) => {\n        //     const { error, value: values } = validationSchema.validate(data, {\n        //         abortEarly: false,\n        //     });\n\n        //     if (!error) return { values: values, errors: {} };\n\n        //     return {\n        //         values: {},\n        //         errors: error.details.reduce(\n        //             (previous, currentError) => ({\n        //                 ...previous,\n        //                 [currentError.path[0]]: currentError,\n        //             }),\n        //             {},\n        //         ),\n        //     };\n        // },,\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    React.useEffect(() => {\n        reset({...defaultValues})\n    }, [defaultValues]);\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        unregister,\n        localFunction: { ...localFunction, triggerBackground: () => !_.isEmpty(errors), getValues },\n        dataStore,\n        clearErrors\n    }\n\n    // console.log(\"dyno ;)\", typeof errors, 'hereeeeeeeeeerroooooors')\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            //  For watch items\n            //  Re-render watch items\n\n\n            // has better than get ;)\n            // if (watchingComponents.current.get(name)) {\n            if (watchingComponents.current.get(name)) {\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData({ ...b });\n                    return;\n                }\n            } else if (watchingComponents.current.has(name)) {\n                console.log(\"dyno ;)\", watchingComponents.current.has(name), \"before checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                setData({ ...items });\n                return;\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue,\n        errors: errors,\n        reset\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = { ...result }\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"], \"accountNoaccountNo\", '-----', i)\n                if (i !== undefined && i.visible !== touched) {\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index,\n            dataTransformer\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n"],"names":["element","type","data","Date","value","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","some","current","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","source","copy","Object","assign","FormContext","React","displayName","useFormContext","FormProvider","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","createGetter","prop","defineProperty","get","keys","length","formStateData","isEmptyObject","find","useFormState","methods","control","disabled","visible","nameRef","_formState","updateFormState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","formStateSubscription","_subjects","state","subscribe","next","convertToArrayPayload","includes","shouldRenderFormState","unsubscribe","getProxyFormState","useController","shouldUnregister","item","console","log","_formValues","_defaultValues","setInputStateValue","registerProps","register","rules","updateMounted","field","_fields","_f","mount","controllerSubscription","values","_shouldUnregisterField","_shouldUnregister","isNameInFieldArray","_names","array","_isInAction","unregister","getControllerValue","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","Controller","render","validateAllFieldCriteria","types","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","refs","options","shouldFocus","focusName","focusIndex","d","performance","now","c","r","Math","random","toString","keyName","map","generateId","append","fill","insert","slice","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","sort","a","b","indexA","indexB","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","isBoolean","fieldValues","useFieldArray","_focusName","mapIds","_getFieldArrayValue","setFields","add","appendValue","updatedFieldArrayValues","appendAt","_bathFieldArrayUpdate","argA","fillEmptyArray","getFocusFieldName","prependAt","remove","removeArrayAt","insertAt","argB","swap","swapArrayAt","move","moveArrayAt","update","updateAt","watchAll","watch","watchField","startsWith","omitKey","_updateValid","fieldArraySubscription","payload","isReset","fieldArrayValues","wait","timer","args","clearTimeout","window","setTimeout","deepEqual","object1","object2","isPrimitive","keys1","keys2","val1","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","isRadioInput","document","Subscription","tearDowns","tearDown","push","teardown","Subscriber","observer","subscription","closed","Subject","observers","subscriber","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","selected","defaultReturn","previous","getFieldValue","isFileInput","files","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","getFieldValueAs","_fieldss","criteriaMode","shouldUseNativeValidation","mounted","deepMerge","targetValue","sourceValue","_a","setDirtyFields","defaultValues","parentNode","parentName","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isString","RegExp","getValidateError","isMessage","every","validationData","isRegex","inputValue","setCustomValidty","inputRef","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","defaultOptions","reValidateMode","shouldFocusError","isWindowUndefined","createFormControlV3","formOptions","_delayCallback","submitCount","isSubmitting","isSubmitSuccessful","_isMounted","Set","unMount","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","updateErrorState","shouldRenderBaseOnValid","validateForm","shouldRenderBaseOnError","shouldSkipRender","isValidFromResolver","isWatched","previousError","resolver","delayError","debounce","updatedFormState","setFieldValue","shouldRender","fieldValue","isWeb","isHTMLElement","forEach","selectRef","checkboxRef","radioRef","getValues","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","isCurrentTouched","isChanged","previousIsDirty","_getIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeResolver","context","getResolverOptions","executeResolverValidation","shouldCheckValid","valid","validateField","fieldError","handleChange","inputType","shouldSkipValidation","hasValidation","skipValidation","parentNodeName","valError","_updateValidAndInputValue","shouldSkipValueAs","isValueUndefined","defaultChecked","setValues","entries","fieldKey","fieldName","isFieldArray","_getWatch","fieldNames","isGlobal","resultChanges","Map","_updateFormValues","method","shouldSet","shouldSetFields","output","unsetEmptyArray","setFieldArrayDirtyFields","setValue","schemaResult","Promise","triggerBackground","clearErrors","inputName","setError","info","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","fieldRef","querySelectorAll","isRadioOrCheckboxFunction","contains","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","reset","keepStateOptions","updatedValues","keepValues","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","_updateProps","useForm","_formControl","createFormControlV2","useFieldArraySubscription","unregisterFieldNames","live","useWatch","_name","updateValue","watchSubscription","rebuildHistory","history","newHistory","useHistory","init","useState","states","setStates","updateHistory","setIndex","currentPage","updateCurrentPage","useMemo","setState","pageName","existing","_","cloneDeep","size","newIndex","isEqual","resetState","goBack","steps","Number","goBackByIndex","goBackByName","previousPageName","existingPage","goForward","updatePage","dataTransformer","local","sharedItems","dataStore","eval","patternResult","schemaTransformation","flattenHelper","currentObject","newObject","previousKeyName","constructor","flattenObject","oldObject","schemaProxy","extraValues","extraFunctions","proxyHandler","receiver","Proxy","proxySchema","action","schema","setupProxy","proxyItems","newSchema","y","el","defaultValidationResolver","noteq","eq","notEmptyAndEqual","ControlledComponentsV2","setField","updateReference","IIN","memo","prevProps","nextProps","oldE","newE","errror","errrorlol","JSON","stringify","renderForm","myControl","getValue","ControlledComponents","components","managedCallback","child","items","validation","rule","id","indx","Component","RenderForm","InRenderform","whyDidYouRender","convertIdToRef","parent","currentIndex","itemName","refId","resetItems","prepareWtchingComponents","initialValue","preCondition","preConditionObj","convertArrayToObject","internalItem","givenArray","concat","renderCount","FormBuilderV1","forwardRef","validationResolver","myComponents","useRef","watchingComponents","preConditionItems","setData","useEffect","checkPreCondition","resetValues","getValuesPOC","validationOnce","validatedItem","n","originalErrors","newErrors","errorMsg","hasValidationChanged","hasPreconditionChanged","preResult","updated","hasCondition","touched","realValue","renderComponentInd","givenName","selectedComponent","renderComponentForm","errorss","idx","FormBuilderNext","root","createFormControlV4","localFunction","getItem","proxyItem","devMode","defaultDataTransformer","arguments","apply"],"mappings":"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"}