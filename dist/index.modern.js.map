{"version":3,"file":"index.modern.js","sources":["../src/utils/isCheckBoxInput.js","../src/utils/isDateObject.js","../src/utils/isNullOrUndefined.js","../src/utils/isObject.js","../src/logic/getControllerValue.js","../src/logic/getNodeParentName.js","../src/logic/isNameInFieldArray.js","../src/utils/compact.js","../src/utils/isUndefined.js","../src/utils/get.js","../src/constants.js","../src/utils/omit.js","../src/useFormContext.js","../src/logic/getProxyFormState.js","../src/utils/isEmptyObject.js","../src/logic/shouldRenderFormState.js","../src/utils/convertToArrayPayload.js","../src/useFormState.js","../src/useController.js","../src/controller.js","../src/logic/appendErrors.js","../src/utils/isKey.js","../src/utils/stringToPath.js","../src/utils/set.js","../src/logic/focusFieldBy.js","../src/logic/getFocusFieldName.js","../src/logic/generateId.js","../src/logic/mapId.js","../src/utils/append.js","../src/utils/fillEmptyArray.js","../src/utils/insert.js","../src/utils/move.js","../src/utils/omitKeys.js","../src/utils/prepend.js","../src/utils/remove.js","../src/utils/swap.js","../src/utils/isBoolean.js","../src/utils/unset.js","../src/utils/update.js","../src/useFieldArray.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/utils/debounce.js","../src/utils/isPrimitive.js","../src/utils/deepEqual.js","../src/utils/getValidationModes.js","../src/utils/isFileInput.js","../src/utils/isFunction.js","../src/utils/isHTMLElement.js","../src/utils/isMultipleSelect.js","../src/utils/isRadioInput.js","../src/utils/isRadioOrCheckbox.js","../src/utils/isString.js","../src/utils/isWeb.js","../src/utils/Subject.js","../src/logic/getCheckboxValue.js","../src/logic/getFieldValueAs.js","../src/logic/getMultipleSelectValue.js","../src/logic/getRadioValue.js","../src/logic/getFieldValue.js","../src/logic/getResolverOptions.js","../src/logic/hasValidation.js","../src/utils/deepMerge.js","../src/logic/setFieldArrayDirtyFields.js","../src/logic/skipValidation.js","../src/logic/unsetEmptyArray.js","../src/utils/isMessage.js","../src/utils/isRegex.js","../src/logic/getValidateError.js","../src/logic/getValueAndMessage.js","../src/logic/validateField.js","../src/logic/createFormControlV3.js","../src/utils/live.js","../src/useForm.js","../src/useWatch.js","../src/tools/useHistory.js","../src/middleware/dataTransformer.js","../src/middleware/schemaTransformer.js","../src/utils/flattenObject.js","../src/middleware/schemaProxy.js","../src/middleware/setupProxy.js","../src/utils/defaultValidationResolver.js","../src/builder/FormBuilderV1.js","../src/builder/FormBuilderV2.js","../src/logic/createFormControlV4.js","../src/useFormV1.js","../src/builder/FormBuilderV4.js"],"sourcesContent":["export default (element) => element.type === 'checkbox';\n","export default (data) => data instanceof Date;","export default (value) => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\nexport const isObjectType = (value) => typeof value === 'object';\nexport default (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\nexport default (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;","export default (name) => name.substring(0, name.search(/.\\d/)) || name;\n","import getNodeParentName from './getNodeParentName';\nexport default (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n","export default (value) => value.filter(Boolean);\n","export default (val) => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nexport default (obj, path, defaultValue) => {\n    if (isObject(obj) && path) {\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\n        return isUndefined(result) || result === obj\n            ? isUndefined(obj[path])\n                ? defaultValue\n                : obj[path]\n            : result;\n    }\n    return undefined;\n};","export const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};","export default (source, key) => {\n  const copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};","import * as React from 'react';\nimport omit from './utils/omit';\nconst FormContext = React.createContext(null);\nFormContext.displayName = 'RHFContext';\nexport const useFormContext = () => React.useContext(FormContext);\nexport const FormProvider = (props) => (React.createElement(FormContext.Provider, { value: omit(props, 'children') }, props.children));\n","import { VALIDATION_MODE } from '../constants';\n\nexport default (\n  formState,\n  _proxyFormState,\n  localProxyFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {};\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key),\n    });\n  }\n\n  return result;\n};\n","import isObject from './isObject';\nexport default (value) => isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\nexport default (formStateData, _proxyFormState, isRoot) => {\n    const formState = omit(formStateData, 'name');\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};","export default (value) => Array.isArray(value) ? value : [value];\n","import * as React from 'react';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport { useFormContext } from './useFormContext';\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, visible, name } = props || {};\n    const nameRef = React.useRef(name);\n    const [formState, updateFormState] = React.useState(control._formState.val);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    nameRef.current = name;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next: (formState) => (!nameRef.current ||\n                !formState.name ||\n                convertToArrayPayload(nameRef.current).includes(formState.name)) &&\n                shouldRenderFormState(formState, _localProxyFormState.current) &&\n                updateFormState(Object.assign(Object.assign({}, control._formState.val), formState)),\n        });\n        disabled && formStateSubscription.unsubscribe();\n        //Yasser ;)\n        // !visible && formStateSubscription.unsubscribe();\n        return () => formStateSubscription.unsubscribe();\n    }, [disabled, control]);\n    return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\nexport { useFormState };\n","import * as React from 'react';\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nexport function useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister, item } = props;\n    console.log(\"dyno ;)\", item, \"useController\");\n    const [value, setInputStateValue] = React.useState(get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)));\n    const formState = useFormState({\n        control: control || methods.control,\n        name,\n    });\n    // WTACHME: disable bug ;)\n    // TODO: move item from ref into item object seperately \n    // to prevent disable reaction about validation and submission\n    const registerProps = control.register(name, Object.assign(Object.assign({}, {...props.rules, item: {...item} }), { value }));\n    // console.log(\"dyno ;)\", registerProps,\"useController\")\n\n    const updateMounted = React.useCallback((name, value) => {\n        const field = get(control._fields, name);\n        if (field) {\n            field._f.mount = value;\n        }\n    }, [control]);\n    React.useEffect(() => {\n        const controllerSubscription = control._subjects.control.subscribe({\n            next: (data) => (!data.name || name === data.name) &&\n                setInputStateValue(get(data.values, name)),\n        });\n        updateMounted(name, true);\n        return () => {\n            controllerSubscription.unsubscribe();\n            const _shouldUnregisterField = control._shouldUnregister || shouldUnregister;\n            if (isNameInFieldArray(control._names.array, name)\n                ? _shouldUnregisterField && !control._isInAction.val\n                : _shouldUnregisterField) {\n                control.unregister(name);\n            }\n            else {\n                updateMounted(name, false);\n            }\n        };\n    }, [name, control, shouldUnregister, updateMounted]);\n    return {\n        field: {\n            onChange: (event) => {\n                const value = getControllerValue(event);\n                setInputStateValue(value);\n                registerProps.onChange({\n                    target: {\n                        value,\n                        name: name,\n                    },\n                    type: EVENTS.CHANGE,\n                });\n            },\n            onBlur: () => {\n                registerProps.onBlur({\n                    target: {\n                        name: name,\n                    },\n                    type: EVENTS.BLUR,\n                });\n            },\n            name,\n            value,\n            ref: (elm) => elm &&\n                registerProps.ref({\n                    //todo item ;)\n                    // ...(props.item && props.item || {}),\n                    focus: () => elm.focus && elm.focus(),\n                    setCustomValidity: (message) => elm.setCustomValidity(message),\n                    reportValidity: () => elm.reportValidity(),\n                }),\n        },\n        formState,\n        fieldState: {\n            invalid: !!get(formState.errors, name),\n            isDirty: !!get(formState.dirtyFields, name),\n            isTouched: !!get(formState.touchedFields, name),\n            error: get(formState.errors, name),\n        },\n    };\n}","import { useController } from './useController';\nconst Controller = (props) => props.render(useController(props));\nexport { Controller };","export default (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n  ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n","export default (value) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input) =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\nexport default function set(object, path, value) {\n  let index = -1;\n  // console.log(\"dyno ;)\", isKey(path),stringToPath(path), \"setset\", object)\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const _f = field._f;\n            const current = omit(field, '_f');\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n                    break;\n                }\n                else if (_f.refs) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(current)) {\n                focusFieldBy(current, callback);\n            }\n        }\n    }\n};\nexport default focusFieldBy;","export default (name, index, options) => options && !options.shouldFocus\n    ? options.focusName || `${name}.${options.focusIndex}.`\n    : `${name}.${index}.`;","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import generateId from './generateId';\nexport default (values = [], keyName) => values.map((value) => (Object.assign({ [keyName]: (value && value[keyName]) || generateId() }, value)));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function append(data, value) {\n    return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}","export default (value) =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}","import isUndefined from './isUndefined';\n\nexport default (\n  data,\n  from,\n  to,\n) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import omit from './omit';\nexport default (fields, keyName) => fields.map((field = {}) => omit(field, keyName));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\n\nexport default (data, index) =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n      data,\n      (convertToArrayPayload(index)).sort((a, b) => a - b),\n    );\n","export default (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default (value) => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nexport default function unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}","export default (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import * as React from 'react';\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKey from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { useFormContext } from './useFormContext';\nexport const useFieldArray = (props) => {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const _focusName = React.useRef('');\n    const [fields, setFields] = React.useState(mapIds(control._getFieldArrayValue(name), keyName));\n    control._names.array.add(name);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(value);\n        const updatedFieldArrayValues = appendAt(control._getFieldArrayValue(name), appendValue);\n        control._bathFieldArrayUpdate(keyName, name, appendAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, updatedFieldArrayValues.length - appendValue.length, options);\n    };\n    const prepend = (value, options) => {\n        const updatedFieldArrayValues = prependAt(control._getFieldArrayValue(name), convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, prependAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, 0, options);\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArrayValue(name), index);\n        control._bathFieldArrayUpdate(keyName, name, removeArrayAt, {\n            argA: index,\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    const insert = (index, value, options) => {\n        const updatedFieldArrayValues = insertAt(control._getFieldArrayValue(name), index, convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, insertAt, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, index, options);\n    };\n    const swap = (indexA, indexB) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        swapArrayAt(fieldValues, indexA, indexB);\n        control._bathFieldArrayUpdate(keyName, name, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const move = (from, to) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        moveArrayAt(fieldValues, from, to);\n        control._bathFieldArrayUpdate(keyName, name, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const update = (index, value) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        const updatedFieldArrayValues = updateAt(fieldValues, index, value);\n        control._bathFieldArrayUpdate(keyName, name, updateAt, {\n            argA: index,\n            argB: value,\n        }, fieldValues, true, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    React.useEffect(() => {\n        control._isInAction.val = false;\n        if (control._names.watchAll) {\n            control._subjects.state.next({});\n        }\n        else {\n            for (const watchField of control._names.watch) {\n                if (name.startsWith(watchField)) {\n                    control._subjects.state.next({});\n                    break;\n                }\n            }\n        }\n        control._subjects.watch.next({\n            name,\n            values: control._formValues,\n        });\n        _focusName.current &&\n            focusFieldBy(control._fields, (key) => key.startsWith(_focusName.current));\n        _focusName.current = '';\n        control._subjects.array.next({\n            name,\n            values: omitKey([...fields], keyName),\n        });\n        control._proxyFormState.isValid && control._updateValid();\n    }, [fields, name, control, keyName]);\n    React.useEffect(() => {\n        const fieldArraySubscription = control._subjects.array.subscribe({\n            next(payload) {\n                if (payload.isReset) {\n                    unset(control._fields, payload.name || name);\n                    unset(control._formValues, payload.name || name);\n                    payload.name\n                        ? set(control._formValues, payload.name, payload.values)\n                        : payload.values && (control._formValues = payload.values);\n                    setFields(mapIds(get(control._formValues, name), keyName));\n                }\n            },\n        });\n        !get(control._formValues, name) && set(control._formValues, name, []);\n        return () => {\n            fieldArraySubscription.unsubscribe();\n            if (control._shouldUnregister || shouldUnregister) {\n                control.unregister(name);\n                unset(control._formValues, name);\n            }\n            else {\n                const fieldArrayValues = get(control._formValues, name);\n                fieldArrayValues && set(control._formValues, name, fieldArrayValues);\n            }\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [name, control, keyName]),\n        move: React.useCallback(move, [name, control, keyName]),\n        prepend: React.useCallback(prepend, [name, control, keyName]),\n        append: React.useCallback(append, [name, control, keyName]),\n        remove: React.useCallback(remove, [name, control, keyName]),\n        insert: React.useCallback(insert, [name, control, keyName]),\n        update: React.useCallback(update, [name, control, keyName]),\n        fields: fields,\n    };\n};","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export default (callback, wait) => {\n  let timer = 0;\n  return (...args) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n  };\n};","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nexport default (value) => isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\nexport default function deepEqual(object1, object2) {\n    if (isPrimitive(object1) ||\n        isPrimitive(object2) ||\n        isDateObject(object1) ||\n        isDateObject(object2)) {\n        return object1 === object2;\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isObject(val1) || Array.isArray(val1)) &&\n                (isObject(val2) || Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","import { VALIDATION_MODE } from '../constants';\nexport default (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});","export default (element) => element.type === 'file';\n","export default (value) => typeof value === 'function';\n","export default (value) => value instanceof HTMLElement;\n","export default (element) => element.type === `select-multiple`;\n","export default (element) => element.type === 'radio';\n","import isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\nexport default (ref) => isRadioInput(ref) || isCheckBoxInput(ref);","export default (value) => typeof value === 'string';\n","export default typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n","export class Subscription {\n  constructor() {\n      this.tearDowns = [];\n  }\n  add(tearDown) {\n      this.tearDowns.push(tearDown);\n  }\n  unsubscribe() {\n      for (const teardown of this.tearDowns) {\n          teardown();\n      }\n      this.tearDowns = [];\n  }\n}\nclass Subscriber {\n  constructor(observer, subscription) {\n      this.observer = observer;\n      this.closed = false;\n      subscription.add(() => (this.closed = true));\n  }\n  next(value) {\n      if (!this.closed) {\n          this.observer.next(value);\n      }\n  }\n}\nexport default class Subject {\n  constructor() {\n      this.observers = [];\n  }\n  next(value) {\n      for (const observer of this.observers) {\n          observer.next(value);\n      }\n  }\n  subscribe(observer) {\n      const subscription = new Subscription();\n      const subscriber = new Subscriber(observer, subscription);\n      this.observers.push(subscriber);\n      return subscription;\n  }\n  unsubscribe() {\n      this.observers = [];\n  }\n}","import isUndefined from '../utils/isUndefined';\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nexport default (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n","import isUndefined from '../utils/isUndefined';\nexport default (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : +value\n        : valueAsDate\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;","export default (options) => [...options]\n    .filter(({ selected }) => selected)\n    .map(({ value }) => value);","const defaultReturn = {\n  isValid: false,\n  value: null,\n};\nexport default (options) => Array.isArray(options)\n  ? options.reduce((previous, option) => option && option.checked && !option.disabled\n      ? {\n          isValid: true,\n          value: option.value,\n      }\n      : previous, defaultReturn)\n  : defaultReturn;","import isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\nexport default function getFieldValue(field) {\n    if (field && field._f) {\n        const ref = field._f.ref;\n        //TODO: findout why it is here ;) thanks to Edward ;)\n        // if (field._f.refs ? field._f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        //     return;\n        // }\n        if (isFileInput(ref)) {\n            return ref.files;\n        }\n        if (isRadioInput(ref)) {\n            return getRadioValue(field._f.refs).value;\n        }\n        if (isMultipleSelect(ref)) {\n            return getMultipleSelectValue(ref.options);\n        }\n        if (isCheckBox(ref)) {\n            return getCheckboxValue(field._f.refs).value;\n        }\n        return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\n    }\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\n\nexport default (\n  fieldsNames,\n  _fieldss,\n  criteriaMode,\n  shouldUseNativeValidation,\n) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fieldss, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (options, mounted) => mounted &&\n    options &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\nexport function deepMerge(target, source) {\n    if (isPrimitive(target) || isPrimitive(source)) {\n        return source;\n    }\n    for (const key in source) {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        try {\n            target[key] =\n                (isObject(targetValue) && isObject(sourceValue)) ||\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\n                    ? deepMerge(targetValue, sourceValue)\n                    : sourceValue;\n        }\n        catch (_a) { }\n    }\n    return target;\n}","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n    let index = -1;\n    while (++index < values.length) {\n        for (const key in values[index]) {\n            if (Array.isArray(values[index][key])) {\n                !dirtyFields[index] && (dirtyFields[index] = {});\n                dirtyFields[index][key] = [];\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n            }\n            else {\n                !isNullOrUndefined(defaultValues) &&\n                    deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n                    ? set(dirtyFields[index] || {}, key)\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\n            }\n        }\n        parentNode &&\n            !dirtyFields.length &&\n            delete parentNode[parentName];\n    }\n    return dirtyFields;\n}\nexport default (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n","export default ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\n  if (isOnAll) {\n      return false;\n  }\n  else if (!isSubmitted && isOnTouch) {\n      return !(isTouched || isBlurEvent);\n  }\n  else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n      return !isBlurEvent;\n  }\n  else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n      return isBlurEvent;\n  }\n  return true;\n};","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default (ref, name) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\nimport isString from './isString';\nexport default (value) => isString(value) || React.isValidElement(value);\n","export default (value) => value instanceof RegExp;\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nexport default function getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\nexport default async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    if (!mount) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidty = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n    };\n    if (required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n            (isBoolean(inputValue) && !inputValue) ||\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\n            (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: inputRef }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            if (isString(maxOutput.value)) {\n                exceedMax = valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value)) {\n                exceedMin = valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        console.log(\"dyno ;)\", isRegex(new RegExp(patternValue)), !inputValue.match(patternValue), patternValue, \"patternValue\")\n        if (isRegex(new RegExp(patternValue)) && !inputValue.match(patternValue)) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n                if (!validateAllFieldCriteria) {\n                    setCustomValidty(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n                if (validateError) {\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n                    setCustomValidty(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = Object.assign({ ref: inputRef }, validationResult);\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidty(true);\n    return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV3(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                    (_proxyFormState.touchedFields &&\n                        isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }) => {\n        // console.log(\"dyno ;)\", \"SUBMITFORM here\", _fields)\n        for (const name in _fields) {\n            const field = _fields[name];\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    console.log(\"dyno ;)\", fieldError,\"fieldError\")\n                    if (shouldCheckValid) {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                            break;\n                        }\n                    }\n                    else {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                        }\n                        fieldError[_f.name]\n                            ? set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name);\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({ isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n            ? _defaultValues\n            : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges,result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                ? [...result[0]]\n                : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues,\"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors, \"end\");\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        console.log(\"dyno ;)\", _formValues, _fields, \"fdfdfdfdfdfd\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                    fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), { refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name } }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), { onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                } });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import isHTMLElement from './isHTMLElement';\nexport default (ref) => !isHTMLElement(ref) || !document.contains(ref);\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV3 as createFormControlV2 } from './logic/createFormControlV3';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV2(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import * as React from 'react';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport isUndefined from './utils/isUndefined';\nimport { useFormContext } from './useFormContext';\nexport function useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\n        ? control._getWatch(name)\n        : defaultValue);\n    React.useEffect(() => {\n        const watchSubscription = control._subjects.watch.subscribe({\n            next: ({ name }) => {\n                console.log(\"dyno ;)\", \"##1 watchSubscription\", name)\n                return(!_name.current ||\n                !name ||\n                convertToArrayPayload(_name.current).some((fieldName) => name &&\n                    fieldName &&\n                    (fieldName.startsWith(name) ||\n                        name.startsWith(fieldName)))) &&\n                updateValue(control._getWatch(_name.current, defaultValue))},\n        });\n        disabled && watchSubscription.unsubscribe();\n        return () => watchSubscription.unsubscribe();\n    }, [disabled, control, defaultValue]);\n    return value;\n}","import { useMemo, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst rebuildHistory = (history = {}, to = 0, from = 0) => {\n    const newHistory = [...history].slice(from, to);\n    console.log(\"dyno ;)\", 'rebuildHistory', newHistory, to)\n    return new Set(newHistory);\n}\n\nexport default function useHistory(init = { name: \"\" }) {\n\n    const [states, setStates] = useState(init);\n\n    //history\n    const [history, updateHistory] = useState(new Set());\n    const [index, setIndex] = useState(0);\n    const [currentPage, updateCurrentPage] = useState(init?.name);\n\n    const state = useMemo(() => states[currentPage], [index, currentPage]);\n    // const state = useMemo(() => states[init?.name], [states, init.name]);\n\n    // {\n    //     \"dashboard\": { }\n    // }\n\n    const setState = (value) => {\n        if (value === undefined || value === null || value === {}) return;\n        // check the existing one with name\n        // { name: \"pageName\" }\n        const pageName = value.name;\n\n        const existing = _.get(states, pageName);\n\n        // check whether equal or it changed ;)\n        if (history.has(pageName)) {\n            // if (_.isEqual(existing, value)) {\n            // const existingPage = _.get(states,pageName);\n            // const newHistory = [...history].slice(0,existing[\"x-index\"]);\n            const newHistory = rebuildHistory(history, existing[\"x-index\"]);\n            updateHistory(newHistory)\n\n            const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": existing[\"x-index\"] }));\n            setStates(copy);\n\n            // updateHistory(new Set(newHistory));\n            setIndex(existing[\"x-index\"])\n            updateCurrentPage(pageName);\n\n            console.log(\"dyno ;)\", \"lolllllllllllllllllll\", history, '99999', existing[\"x-index\"], newHistory);\n            return;\n        }\n        console.log(\"dyno ;)\", \"histlori\", value, _.set(states, pageName, value), state, history.size)\n        const newIndex = index + 1;\n        const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": newIndex }));\n        // setIndex(pageName);\n        setIndex(newIndex);\n        // copy = _.set(copy,value.name, value);\n        updateHistory(history.add(pageName));\n        setStates(copy);\n        updateCurrentPage(pageName);\n        console.log(\"dyno ;)\", 'hissssstory', history)\n        console.log(\"dyno ;)\", value, 'drooooomemppppppphistlori', existing)\n        console.log(\"dyno ;)\", states, '31231232323132', state, currentPage, _.isEqual(existing, value))\n    }\n\n    const setStateOld = (value) => {\n        if (_.isEqual(state, value)) {\n            return;\n        }\n        const copy = _.cloneDeep(states);\n        copy.length = index + 1;\n        copy.push(value);\n        setStates(copy);\n        setIndex(copy.length - 1);\n        console.log(\"dyno ;)\", states, 'drooooomemppppppp', _.isEqual(state, value), copy, index)\n    };\n\n    const resetState = (init = { name: \"\" }) => {\n        setIndex(0);\n        setStates({});\n        updateHistory([])\n        console.log(\"dyno ;)\", \":::::resetState\", history, states, index)\n    };\n\n    const goBack = (steps = 1, reset = false) => {\n        if(Number(steps)){\n            goBackByIndex(steps, reset);\n            return;\n        }\n        console.log(\"dyno ;)\", 'gobackbyname', steps)\n        if(!states[steps]){\n            throw \"gobackbyname is not available ;)\";\n        }\n        goBackByName(steps, reset);\n    }\n\n\n    const goBackByIndex = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goBackByName = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const existingPage = _.get(states, steps);\n\n\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goForward = (steps = 1) => {\n        setIndex(Math.min(states.length - 1, Number(index) + (Number(steps) || 1)));\n    };\n\n    const updatePage = (value) => {\n        const existing = _.get(states, currentPage);\n        existing.defaultValues = { ...value };\n        console.log(\"dyno ;)\", value, 'updatePage youuuuupppp', existing)\n    }\n\n    return {\n        state: state,\n        setState: setState,\n        resetState: resetState,\n        currentPage,\n        index: index,\n        lastIndex: states?.length - 1 || 0,\n        goBack: goBack,\n        goForward: goForward,\n        updatePage: updatePage,\n        history\n    };\n}","import _ from \"lodash\";\n// const console = {\n//     log: () => null\n// }\n\nconst dataTransformer = (data, name, obj) => (local) => {\n    // const { getValues, dataStore } = obj.sharedItems || { getValues: undefined };\n    // const values = { ...dataStore, ...(getValues() || {}) };\n    // console.log(\"dyno ;)\", data, values, 'getValues()()()')\n    //\n\n    const { getValues, dataStore } = local.sharedItems || { getValues: undefined };\n    const values = { ...dataStore, ...(getValues && getValues() || {}) };\n    console.log(\"dyno ;)\", data, values, 'getValues()()()')\n\n\n    //Need to check later ;)\n    // if (typeof data === 'function') {\n    //     return data()(values)\n    // }\n\n    if (typeof data === \"string\") {\n        if (data !== undefined && data.includes(\"$$\")) {\n            console.log(\"dyno ;)\", \"blaherebla\", data, values)\n            return _.get(values, data.substring(2));\n        }\n        // check fx first \n        if (data !== undefined && data.includes(\"fx\")) {\n            console.log(\"dyno ;)\", data.slice(2), 'sliceeeeeee')\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`local.${data.slice(2)}`);\n\n                console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt')\n                if (typeof result === 'function') {\n                    return result(values);\n                }\n                if (result?.then) {\n                    return result.then(function(response) {\n                        // console.log(!tresult, \"rrrrrrrsulttttttttt tresult\")\n                        return !response\n                    })\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, 'rrrrrrrsulttttttttt errorororrororor')\n            }\n        };\n\n        let patternResult = data;\n\n        if (data !== undefined && data.includes(\"dx\")) {\n            patternResult = patternResult.replace(/dx.*?\\(.*?\\)/g, (_, name) => {\n\n                try {\n                    console.log(\"dyno ;)\", _, name, 'pattern waaaaaalalala 2nd', patternResult)\n                    const result = eval(`local.${_}`);\n                    if (typeof result === 'function') {\n                        return result(values);\n                    }\n                    return result;\n                } catch (error) {\n                    console.log(\"dyno ;)\", error, 'dxxxxxxxxxxxxdxdxxdxdxx')\n                    return _;\n                }\n            });\n        }\n\n        patternResult = patternResult.replace(/\\$\\{(.*?)\\}/g, (_, name) => {\n\n            const result = values[name] || ''; //_.get(values, name);\n            console.log(\"dyno ;)\", values, 'valuesssssssssssssssssRGEX')\n            console.log(\"dyno ;)\", name, '------>>>>>>------', result, 'pattern waaaaaalalala only', patternResult)\n\n            return result !== undefined && result//\"\";//field[name];\n        });\n\n        return patternResult;\n\n    };\n\n    return data;\n}\n\nexport { dataTransformer };","import _ from \"lodash\";\n\nconst schemaTransformation = (data, name, obj) => (local) => {\n    const values = { ...obj.sharedItems };\n    if (data === undefined || data === null) return data;\n\n    if (typeof data === \"string\") {\n        // check fx first\n        if (data !== undefined && data.includes(\"fx\")) {\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`extraFunctions.${data.slice(2)}`);\n                if (typeof result === \"function\") {\n                    return result(values);\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, \"rrrrrrrsulttttttttt errorororrororor\");\n            }\n        }\n\n        if (data !== \"\") {\n            const result = _.get(values, data.substring(2)) ?? data; // values[data] || data;\n            // if(result!== undefined) return result;\n            return result;\n        }\n    }\n\n    return data;\n};\n\nexport default schemaTransformation;","const flattenHelper = (currentObject, newObject, previousKeyName) => {\n    for (let key in currentObject) {\n        let value = currentObject[key];\n\n        if (value?.constructor !== Object) {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                newObject[key] = value;\n            } else {\n                if (key == null || key == \"\") {\n                    newObject[previousKeyName] = value;\n                } else {\n                    newObject[previousKeyName + \".\" + key] = value;\n                }\n            }\n        } else {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                flattenHelper(value, newObject, key);\n            } else {\n                flattenHelper(value, newObject, previousKeyName + \".\" + key);\n            }\n        }\n    }\n};\n\nconst flattenObject = (oldObject) => {\n    const newObject = {};\n\n    flattenHelper(oldObject, newObject, \"\");\n\n    return newObject;\n};\n\nexport default flattenObject\n","import flattenObject from \"../utils/flattenObject\";\nimport schemaTransformation from \"./schemaTransformer\";\n\nconst schemaProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    if (item === undefined) return {};\n\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            } else {\n                return schemaTransformation(\n                    target[prop],\n                    prop,\n                    target\n                )({\n                    ...extraFunctions\n                });\n            }\n        }\n    };\n\n    const proxySchema = new Proxy(\n        {\n            ...flattenObject({\n                ...item.action.schema\n            }),\n            sharedItems: { ...extraValues, ...item }\n        },\n        proxyHandler\n    );\n    return proxySchema\n}\n\nexport default schemaProxy;\n\n\n","import _ from \"lodash\";\nimport schemaProxy from \"./schemaProxy\";\n\nconst setupProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    const proxyItems = schemaProxy(item, extraValues, extraFunctions);\n\n    let newSchema = {};\n    const y = Object.keys(proxyItems).map((el) => {\n        if (el === \"sharedItems\") return;\n        newSchema = _.set(newSchema, el, proxyItems[el]);\n        console.log(\"dyno ;)\", el, \"flattttttttten\");\n    });\n\n    return _.cloneDeep(newSchema);\n}\n\nexport default setupProxy;\n","const defaultValidationResolver = {\n    noteq: async (item, value) => {\n        return (value !== '' && !item.value.includes(value)) || false;\n    },\n    eq: async (item, value) => {\n        return value?.toString() === item.value;\n    },\n    notEmptyAndEqual: async (item, value) => {\n        return (value !== '' && item.value.includes(value)) || false;\n    },\n};\n\nexport {\n    defaultValidationResolver\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\n// import { Subject, AsyncSubject } from 'rxjs'\n// import pubsub from \"./pubsub\";\nimport _ from 'lodash'\n// import { unitDependencies } from 'mathjs'\n// import { getResetValue } from './utils/methods'\n// import { JsonEditor } from 'jsoneditor-react/es'\n// import { namespace } from 'store/dist/store.legacy'\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// const subject = new Subject()\n\n// export const pubsub = {\n//     publish: (name, message) => subject.next(name, message),\n//     clearMessages: () => subject.next(),\n//     getMessage: () => subject.asObservable(),\n// }\n\nconst useStateWithPromise = (initialState) => {\n    const [state, setState] = useState(initialState)\n    const resolverRef = useRef(null)\n\n    useEffect(() => {\n        if (resolverRef.current) {\n            resolverRef.current(state)\n            resolverRef.current = null\n        }\n        /**\n         * Since a state update could be triggered with the exact same state again,\n         * it's not enough to specify state as the only dependency of this useEffect.\n         * That's why resolverRef.current is also a dependency, because it will guarantee,\n         * that handleSetState was called in previous render\n         */\n    }, [resolverRef.current, state])\n\n    const handleSetState = useCallback(\n        (stateAction) => {\n            setState(stateAction)\n            return new Promise((resolve) => {\n                resolverRef.current = resolve\n            })\n        },\n        [setState],\n    )\n\n    return [state, handleSetState]\n}\n\nexport const ControlledComponentsV2 = (props) => {\n    // console.log(\"dyno ;)\", 'current', props.control.current);\n    // if(props.control.current === undefined) return;\n    const [field, setField] = useState(props.control.current && props.control.current[props.name])\n\n    // console.log(\"dyno ;)\", props.name, \"ControlledComponentsV2 renderrrrrrrrrr <1>\", field, props.errors, props?.errors?.current && props?.errors?.current[props.name], props.name)\n    console.log(\"dyno ;)\", \n        props.name,\n        'ControlledComponentsV2 renderrrrrrrrrr <1>',\n        field,\n        props.errors,\n        props.name,\n    )\n\n    const titlellll = props.control.current['textbox-5'].value\n    const error = props.errors && props.errors.current && props.errors?.current[props.name]\n\n    const [fields, setFields] = useState('')\n\n\n\n    const onChange = (value) => {\n        // messageService.sendMessage(`${props.name}`);\n        // pubsub.publish(\"anEvent\", props.name);\n        console.log(\"dyno ;)\", 'valuelavue', value)\n        // const [newValue, error] = props.updateReference(value.target.value, props.name);\n\n        // update(value);\n\n        props.updateReference(value, props.name)\n        setField({ ...field, value: value })\n        // subscription(props)\n    }\n\n    // const subscription = pubsub.getMessage().subscribe((data) => {\n    //     // console.log(\"dyno ;)\", `${props.name}, ControlledTextInput, message was published with this data: \"${data}\"`);\n\n    //     if (props.name === 'textbox-0') {\n    //         setFields(data)\n    //     }\n    // })\n\n    return props.render({ onChange, value: field.value, field, error, index: props.index })\n}\n\nconst IINNOMEMO = (props) => <ControlledComponentsV2 {...props} />\n\nconst IIN = React.memo(\n    (props) => <ControlledComponentsV2 {...props} />,\n    (prevProps, nextProps) => {\n        // if (prevProps === nextProps) {\n        const oldE = (prevProps.errors?.current && prevProps.errors?.current[prevProps.name]) || {}\n        const newE = nextProps.errors?.current[nextProps.name] || {}\n\n        const errror = _.isEqual(oldE, newE)\n        const errrorlol = nextProps.errors?.current[prevProps.name]\n\n        console.log(\"dyno ;)\", \n            prevProps,\n            nextProps,\n            prevProps.name + ' ControlledComponentsV2 renderrrrrrrrrr <2>',\n            errror,\n            'is===',\n            errrorlol,\n            prevProps.name,\n        )\n        // if(!errror) return false;\n        // return errror;\n        // return errror;\n        if (JSON.stringify(nextProps) === JSON.stringify(prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\n\nconst createValidationObject = (item) => {\n\n\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n                        // child && child;\n                        // const { useFieldArray } = useFormContext()\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\nconst SimpleRender = props => renderForm({ ...props });\nconst MemoRenderForm = props => SimpleRender(props) //React.memo(renderForm, (prev, next)=>{\n// console.log(\"dyno ;)\", prev,next,\"memoRenderForm\");\n// })\n\n\n\nconst RenderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    control,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    if (data === undefined) return null;\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = RenderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    control,\n                    setValue\n                )\n            }\n            // if (!item.visible) return null\n\n\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={name}\n                    name={name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || {}}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n                        // if (item.name === \"textbox-0\") {\n                        //     const { fields, append, remove } = useFieldArray({\n                        //         control,\n                        //         name: \"textbox-0.test\"\n                        //     });\n\n                        //     // const myaCondition = useWatch({\n                        //     //     control,\n                        //     //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     //     defaultValue: undefined // default value before the render\n                        //     // });\n                        //     // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                        //     return (\n                        //         <>\n                        //             {/* <>\n                        //                 {`${item.name}`}\n                        //                 <br />\n                        //                 <input {...field} />\n                        //                 {errors && errors[item.name] && `${item.name} errororrr`}\n                        //                 {child && child}\n                        //                 <br />\n                        //                 <br />\n                        //                 <br />\n                        //             </> */}\n                        //             <ul>\n                        //                 {fields.map((el, index) => (\n                        //                     <li key={el.id}>\n                        //                         <input {...control.register(`textbox-0.test.${index}.firstName`)} />\n                        //                         {<Controller\n                        //                             render={({ field }) => <input {...field} />}\n                        //                             name={`textbox-0.test.${index}.lastName`}\n                        //                             control={control}\n                        //                         />}\n                        //                         <button type=\"button\" onClick={() => remove(index)}>Delete</button>\n                        //                     </li>\n                        //                 ))}\n                        //             </ul>\n                        //             {JSON.stringify(getValue(\"textbox-3\"))}\n                        //             <button type=\"button\" onClick={() => {\n                        //                 control.unregister(\"textbox-10\")\n                        //                 console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                        //             }}> unregister 10 now ;) </button>\n\n                        //             <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button>\n                        //             <button\n                        //                 type=\"button\"\n                        //                 onClick={() => append({ firstName: \"bill\", lastName: \"luo\" })}\n                        //             >\n                        //                 append\n                        //             </button>\n                        //         </>\n                        //     )\n                        // }\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback\n                        })\n                        // console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', field.name)\n                        return Component\n                    }}\n\n                />\n                // <ControlledComponents\n                //     managedCallback={managedCallback}\n                //     updateReference={updateReference}\n                //     // key={item.name}\n                //     name={name}\n                //     control={myControl}\n                //     errors={errors}\n                //     formName={'formName'}\n                //     index={index}\n                //     child={child}\n                //     render={({ onUpdate, value, fields, field, error, index, child, managedCallback }) => {\n                //         const Component = components(item.type, {\n                //             onUpdate,\n                //             value,\n                //             fields,\n                //             field,\n                //             error,\n                //             child,\n                //             errors,\n                //             item,\n                //             index,\n                //             managedCallback\n                //         })\n                //         console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', error, field.name)\n                //         // return Component\n                //         // return (\n                //         //     <Component\n                //         //         {...{ onUpdate, value, fields, field, error, child, errors, item, index }}\n                //         //     />\n                //         // )\n\n                //         return <>\n                //             <br />\n                //             <div style={{ backgroundColor: child.length > 0 && \"blanchedalmond\" || \"whitesmoke\", padding: 11 }}>\n                //                 <Input onChange={(e) => onUpdate(e.target.value)} defaultValue={value} value={value} />------{fields && fields.value}\n                //                 {field.name}\n                //                 {error && error.error && \"Hiiiii i am here\" || \"no way ;)\"}\n                //             </div>\n                //             {child.length > 0 && <div style={{ backgroundColor: \"blanchedalmond\", padding: 11 }}>\n                //                 child ;)\n                //                 {child && child}\n                //             </div>}\n                //         </>\n                //     }}\n                // />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\nconst InRenderform = React.memo(props => RenderForm(props),\n    (prevProps, nextProps) => {\n        if (!deepEqual(nextProps, prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\nInRenderform.displayName = \"RenderForm\"\nInRenderform.whyDidYouRender = true\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].refId, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\n// const convertArrayToObject = (array, key) => {\n//     const initialValue = {};\n//     return array.reduce((obj, item) => {\n//         return {\n//             ...obj,\n//             [item[key]]: item,\n//         };\n//     }, initialValue);\n// };\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderV1 = React.forwardRef(({ items,\n    validationResolver = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground\n    } = useForm({\n        mode: 'onChange',\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData([...b])\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n\n            }\n        });\n\n        setData(items)\n    }, items)\n\n    // const watchingList = watch(\"textbox-2\");\n\n    // const watchingList = useWatch({\n    //     control,\n    //     name: \"textbox-2\", // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n    //     // defaultValue: 'default' // default value before the render\n    //   });\n    // const watchingList = \"\"//watchingComponents.current && watch([...watchingComponents.current.keys()]);\n    // const watchingList = watchingComponents.current && watch([...watchingComponents.current.keys()]);\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, [...data])\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, result)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData([...preResult])\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        let n = [...result]\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                    // myComponents.current[item.name].visible = touched;\n                    n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                    updated = true\n                    console.log(\"dyno ;)\", \n                        'hashas',\n                        await _.get({ a: n }, `a${item.refId}.visible`),\n                        await touched,\n                        hasCondition,\n                        updated,\n                    )\n                }\n\n                // }\n            })\n        }\n        return [updated, [...n]]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderV1.whyDidYouRender = true\nFormBuilderV1.displayName = \"FormBuilderV1\"\n\nexport default FormBuilderV1\n","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\n// import {\n//     useWatch\n// } from \"../useWatch\"\n// import {\n//     useFieldArray\n// } from \"../useFieldArray\"\n// import {\n//     FormProvider,\n//     useFormContext\n// } from \"../useFormContext\"\n// import {\n//     useForm\n// } from \"../useForm\"\n// import {\n//     Controller\n// } from \"../Controller\"\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined\n}\n) => {\n\n    const selectedComponent = {...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name,idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n   \n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={item.rule || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name,item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`,'`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </>\n                }\n\n                const Component = components(item.type, {\n                    field,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    shouldUnregister = true,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        unregister\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        unregister\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n        \n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n        \n        const subscription = watch(async (value, { name, type }) => {\n            // const [a, b] = await checkPreCondition(name, value[name], items);\n            // setData({ ...b });\n            // console.log(\"dyno ;)\", \"watchhhhhhh\", name, value)\n// return;\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    // setData([...b]);\n                    setData({ ...b });\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = {...result}\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"],\"accountNoaccountNo\",'-----',i)\n                if(i !== undefined && i.visible !== touched ){\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV4(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    console.log(\"dyno ;)\", formOptions,'formOptions')\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                (_proxyFormState.touchedFields &&\n                    isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }, formId = \"ALL\") => {\n        // console.log(\"SUBMITFORM here\", formId)\n        for (const name in _fields) {\n            const field = _fields[name];\n            // console.log(field, 'iamfromherein-validation-lol-edward-log-;)---validateForm')\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    // console.log(_f,'formidddddd')\n                    if(_f.formId === formId || formId === \"ALL\"){\n                        const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // console.log(fieldError, \"fieldError\")\n                        if (shouldCheckValid) {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                                break;\n                            }\n                        }\n                        else {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                            }\n                            fieldError[_f.name]\n                                ? set(_formState.errors, _f.name, fieldError[_f.name])\n                                : unset(_formState.errors, _f.name);\n                                //Added to stop at first error\n                                //TODO: enhance as parameter \n                                if (Object.keys(_formState.errors).length == 1) break;\n                        }\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({\n                    isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange\n                }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = field._f.watch || !isEmptyObject(fieldState) || isWatched;\n            // const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            console.log(\"dyno ;)\", shouldRender,`heyyyyyyyyyyy { ${name} } watch me or not?!`,field._f.watch, \"shouldSkipValidation:\", shouldSkipValidation, \"isBlurEvent:\", isBlurEvent, '------;)---- is watching hahaha:', isWatched)\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                // console.log(field, 'edwardyasser')\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                    set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n                ? _defaultValues\n                : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges, result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                    ? [...result[0]]\n                    : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues, \"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    // console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const triggerBackgroundOptimised = async (formId) => {\n        // const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\",\"triggerBackgroundtriggerBackground\", _formState.errors);\n        if (formOptions.resolver) {\n            // const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            const schemaResult = await executeResolverValidation(fieldNames);\n            isValid = \n                // name\n                // ? fieldNames.every((name) => !get(schemaResult, name))\n                // :\n                isEmptyObject(schemaResult);\n        }\n        else {\n            // if (name) {\n            //     isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n            //         const field = get(_fields, fieldName);\n            //         console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n            //         return await validateForm(field._f ? { [fieldName]: field } : field);\n            //     }))).every(Boolean);\n            // }\n            // else {\n                isValid = await validateForm(_fields, true,{\n                    valid: true,\n                }, formId);\n                // isValid = isEmptyObject(_formState.errors);\n            // }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        // if (options.shouldFocus && !isValid) {\n        //     // focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        // }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        // console.log(_formValues, _fields, \"getValuesgetValues\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), {\n                    refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name }\n                }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options), \"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), {\n                    onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                        if (ref) {\n                            registerFieldRef(name, ref, options);\n                        }\n                        else {\n                            const field = get(_fields, name, {});\n                            const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                            if (field._f) {\n                                field._f.mount = false;\n                            }\n                            _shouldUnregister &&\n                                !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                                _names.unMount.add(name);\n                        }\n                    }\n            });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV4 } from './logic/createFormControlV4';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV4(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useFormV1\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\nimport { dataTransformer as defaultDataTransformer } from '../middleware/dataTransformer'\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined,\n    dataTransformer\n}\n) => {\n\n    const selectedComponent = { ...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent,\n        dataTransformer\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent,\n    dataTransformer\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name, idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name,\n            dataTransformer\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n    const { validate = {} } = item?.rule || { validate: {} };\n\n    if (item?.rule) {\n        console.log(\"dyno ;)\", validate, 'validate[', sharedItems?.localFunction)\n        Object.keys(validate).forEach(key => {\n            if (typeof validate[key] === \"function\") return;\n            validate[key] = sharedItems?.localFunction[key](validate[key])({ ...sharedItems, getItem: () => item });\n            console.log(\"dyno ;)\", validate, 'validate[ within', validate[key])\n        });\n        console.log(\"dyno ;)\", validate, 'validate[ after')\n    }\n\n\n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={{ ...item.rule } || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name, item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <div>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`, '`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`,\n                                                        dataTransformer\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </div>\n                }\n\n                //proxy here ;)\n                const proxyHandler = {\n                    get(target, prop, receiver) {\n                        if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                            console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                            return new Proxy(target[prop], proxyHandler);\n                        }\n                        return dataTransformer(target[prop], prop, target)({\n                            ...sharedItems.localFunction,\n                            sharedItems: sharedItems,\n                            // ...sharedItems\n                        });\n                    }\n                };\n\n                const proxyItem = new Proxy({\n                    ...item,\n                    sharedItems: sharedItems\n                }, proxyHandler);\n\n\n                //end of proxy\n\n\n                const Component = components(item.type, {\n                    field,\n                    item: proxyItem,//item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <div>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </div>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].watch) {\n            initialValue.set(items[key].name);//POC only\n        }\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    localFunction,\n    shouldUnregister = true,\n    defaultValues = {},\n    devMode = false,\n    dataTransformer = defaultDataTransformer,\n    dataStore\n}, ref) => {\n\n    // if (devMode) {\n    //     console.log = () => { };\n    // }\n    // console.log = (function() {\n    //     const log = console.log;\n    \n    //     return function() {\n    //         const args = Array.from(arguments);\n    //         if (!args.includes(\"dyno ;)\") || devMode) {\n    //             log.apply(console, args);\n    //         } \n    //     }\n    // })();\n    \n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        unregister,\n        clearErrors,\n        reset\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        reValidateMode: 'onSubmit',\n        // resolver: async (data, context) => {\n        //     const { error, value: values } = validationSchema.validate(data, {\n        //         abortEarly: false,\n        //     });\n\n        //     if (!error) return { values: values, errors: {} };\n\n        //     return {\n        //         values: {},\n        //         errors: error.details.reduce(\n        //             (previous, currentError) => ({\n        //                 ...previous,\n        //                 [currentError.path[0]]: currentError,\n        //             }),\n        //             {},\n        //         ),\n        //     };\n        // },,\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    React.useEffect(() => {\n        reset({ ...defaultValues })\n    }, [defaultValues]);\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        unregister,\n        localFunction: {\n            ...localFunction,\n            triggerBackground: () => !_.isEmpty(errors),\n            getValues,\n            triggerBackgroundOptimised: (formId) => {\n                // console.log(triggerBackground(), 'triggerSyncBackground()')\n                const result = triggerBackgroundOptimised(formId).then(r => r);\n                return result;\n            }\n        },\n        dataStore,\n        clearErrors\n    }\n\n    // console.log(\"dyno ;)\", typeof errors, 'hereeeeeeeeeerroooooors')\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            //  For watch items\n            //  Re-render watch items\n\n\n            // has better than get ;)\n            // if (watchingComponents.current.get(name)) {\n            if (watchingComponents.current.get(name)) {\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData({ ...b });\n                    return;\n                }\n            } else if (watchingComponents.current.has(name)) {\n                console.log(\"dyno ;)\", watchingComponents.current.has(name), \"before checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                setData({ ...items });\n                return;\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue,\n        errors: errors,\n        reset\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = { ...result }\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"], \"accountNoaccountNo\", '-----', i)\n                if (i !== undefined && i.visible !== touched) {\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index,\n            dataTransformer\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n"],"names":["element","type","data","Date","value","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","some","current","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","source","copy","Object","assign","FormContext","React","displayName","useFormContext","FormProvider","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","createGetter","prop","defineProperty","get","keys","length","formStateData","isEmptyObject","find","useFormState","methods","control","disabled","visible","nameRef","_formState","updateFormState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","formStateSubscription","_subjects","state","subscribe","next","convertToArrayPayload","includes","shouldRenderFormState","unsubscribe","getProxyFormState","useController","shouldUnregister","item","console","log","_formValues","_defaultValues","setInputStateValue","registerProps","register","rules","updateMounted","field","_fields","_f","mount","controllerSubscription","values","_shouldUnregisterField","_shouldUnregister","isNameInFieldArray","_names","array","_isInAction","unregister","getControllerValue","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","Controller","render","validateAllFieldCriteria","types","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","refs","options","shouldFocus","focusName","focusIndex","d","performance","now","c","r","Math","random","toString","keyName","map","generateId","append","fill","insert","slice","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","sort","a","b","indexA","indexB","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","isBoolean","fieldValues","useFieldArray","_focusName","mapIds","_getFieldArrayValue","setFields","add","appendValue","updatedFieldArrayValues","appendAt","_bathFieldArrayUpdate","argA","fillEmptyArray","getFocusFieldName","prependAt","remove","removeArrayAt","insertAt","argB","swap","swapArrayAt","move","moveArrayAt","update","updateAt","watchAll","watch","watchField","startsWith","omitKey","_updateValid","fieldArraySubscription","payload","isReset","fieldArrayValues","wait","timer","args","clearTimeout","window","setTimeout","deepEqual","object1","object2","isPrimitive","keys1","keys2","val1","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","isRadioInput","document","Subscription","tearDowns","tearDown","push","teardown","Subscriber","observer","subscription","closed","Subject","observers","subscriber","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","selected","defaultReturn","previous","getFieldValue","isFileInput","files","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","getFieldValueAs","_fieldss","criteriaMode","shouldUseNativeValidation","mounted","deepMerge","targetValue","sourceValue","_a","setDirtyFields","defaultValues","parentNode","parentName","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isString","RegExp","getValidateError","isMessage","every","validationData","isRegex","inputValue","setCustomValidty","inputRef","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","defaultOptions","reValidateMode","shouldFocusError","isWindowUndefined","createFormControlV3","formOptions","_delayCallback","submitCount","isSubmitting","isSubmitSuccessful","_isMounted","Set","unMount","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","updateErrorState","shouldRenderBaseOnValid","validateForm","shouldRenderBaseOnError","shouldSkipRender","isValidFromResolver","isWatched","previousError","resolver","delayError","debounce","updatedFormState","setFieldValue","shouldRender","fieldValue","isWeb","isHTMLElement","forEach","selectRef","checkboxRef","radioRef","getValues","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","isCurrentTouched","isChanged","previousIsDirty","_getIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeResolver","context","getResolverOptions","executeResolverValidation","shouldCheckValid","valid","validateField","fieldError","handleChange","inputType","shouldSkipValidation","hasValidation","skipValidation","parentNodeName","valError","_updateValidAndInputValue","shouldSkipValueAs","isValueUndefined","defaultChecked","setValues","entries","fieldKey","fieldName","isFieldArray","_getWatch","fieldNames","isGlobal","resultChanges","Map","_updateFormValues","method","shouldSet","shouldSetFields","output","unsetEmptyArray","setFieldArrayDirtyFields","setValue","schemaResult","Promise","triggerBackground","clearErrors","inputName","setError","info","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","fieldRef","querySelectorAll","isRadioOrCheckboxFunction","contains","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","reset","keepStateOptions","updatedValues","keepValues","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","_updateProps","useForm","_formControl","createFormControlV2","useFieldArraySubscription","unregisterFieldNames","live","useWatch","_name","updateValue","watchSubscription","rebuildHistory","history","newHistory","useHistory","init","useState","states","setStates","updateHistory","setIndex","currentPage","updateCurrentPage","useMemo","setState","pageName","existing","_","cloneDeep","size","newIndex","isEqual","resetState","goBack","steps","Number","goBackByIndex","goBackByName","previousPageName","existingPage","goForward","updatePage","dataTransformer","local","sharedItems","dataStore","eval","then","response","patternResult","schemaTransformation","flattenHelper","currentObject","newObject","previousKeyName","constructor","flattenObject","oldObject","schemaProxy","extraValues","extraFunctions","proxyHandler","receiver","Proxy","proxySchema","action","schema","setupProxy","proxyItems","newSchema","y","el","defaultValidationResolver","noteq","eq","notEmptyAndEqual","ControlledComponentsV2","setField","updateReference","IIN","memo","prevProps","nextProps","oldE","newE","errror","errrorlol","JSON","stringify","renderForm","myControl","getValue","ControlledComponents","components","managedCallback","child","items","validation","rule","id","indx","Component","RenderForm","InRenderform","whyDidYouRender","convertIdToRef","parent","currentIndex","itemName","refId","resetItems","prepareWtchingComponents","initialValue","preCondition","preConditionObj","convertArrayToObject","internalItem","givenArray","concat","renderCount","FormBuilderV1","forwardRef","validationResolver","myComponents","useRef","watchingComponents","preConditionItems","setData","useEffect","checkPreCondition","resetValues","getValuesPOC","validationOnce","validatedItem","n","originalErrors","newErrors","errorMsg","hasValidationChanged","hasPreconditionChanged","preResult","updated","hasCondition","touched","realValue","renderComponentInd","givenName","selectedComponent","renderComponentForm","errorss","idx","FormBuilderNext","root","createFormControlV4","formId","triggerBackgroundOptimised","localFunction","getItem","proxyItem","defaultDataTransformer"],"mappings":"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"}