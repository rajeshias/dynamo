{"version":3,"file":"index.modern.js","sources":["../src/utils/isCheckBoxInput.js","../src/utils/isDateObject.js","../src/utils/isNullOrUndefined.js","../src/utils/isObject.js","../src/logic/getControllerValue.js","../src/logic/getNodeParentName.js","../src/logic/isNameInFieldArray.js","../src/utils/compact.js","../src/utils/isUndefined.js","../src/utils/get.js","../src/constants.js","../src/utils/omit.js","../src/useFormContext.js","../src/logic/getProxyFormState.js","../src/utils/isEmptyObject.js","../src/logic/shouldRenderFormState.js","../src/utils/convertToArrayPayload.js","../src/useFormState.js","../src/useController.js","../src/controller.js","../src/logic/appendErrors.js","../src/utils/isKey.js","../src/utils/stringToPath.js","../src/utils/set.js","../src/logic/focusFieldBy.js","../src/logic/getFocusFieldName.js","../src/logic/generateId.js","../src/logic/mapId.js","../src/utils/append.js","../src/utils/fillEmptyArray.js","../src/utils/insert.js","../src/utils/move.js","../src/utils/omitKeys.js","../src/utils/prepend.js","../src/utils/remove.js","../src/utils/swap.js","../src/utils/isBoolean.js","../src/utils/unset.js","../src/utils/update.js","../src/useFieldArray.js","../src/utils/debounce.js","../src/utils/isPrimitive.js","../src/utils/deepEqual.js","../src/utils/getValidationModes.js","../src/utils/isFileInput.js","../src/utils/isFunction.js","../src/utils/isHTMLElement.js","../src/utils/isMultipleSelect.js","../src/utils/isRadioInput.js","../src/utils/isRadioOrCheckbox.js","../src/utils/isString.js","../src/utils/isWeb.js","../src/utils/Subject.js","../src/logic/getCheckboxValue.js","../src/logic/getFieldValueAs.js","../src/logic/getMultipleSelectValue.js","../src/logic/getRadioValue.js","../src/logic/getFieldValue.js","../src/logic/getResolverOptions.js","../src/logic/hasValidation.js","../src/utils/deepMerge.js","../src/logic/setFieldArrayDirtyFields.js","../src/logic/skipValidation.js","../src/logic/unsetEmptyArray.js","../src/utils/isMessage.js","../src/utils/isRegex.js","../src/logic/getValidateError.js","../src/logic/getValueAndMessage.js","../src/logic/validateField.js","../src/logic/createFormControlV3.js","../src/utils/live.js","../src/useForm.js","../src/useWatch.js","../src/tools/useHistory.js","../src/utils/jsonata.js","../src/tools/transformer.js","../src/tools/useDynamoHistory.js","../src/middleware/dataTransformer.js","../src/middleware/schemaTransformer.js","../src/utils/flattenObject.js","../src/middleware/schemaProxy.js","../src/middleware/setupProxy.js","../src/middleware/actionsRunner.js","../src/utils/defaultValidationResolver.js","../src/builder/FormBuilderV1.js","../src/builder/FormBuilderV2.js","../src/logic/createFormControlV4.js","../src/useFormV1.js","../src/builder/FormBuilderV5.js"],"sourcesContent":["export default (element) => element.type === 'checkbox';\n","export default (data) => data instanceof Date;","export default (value) => value == null;\n","import isDateObject from './isDateObject';\nimport isNullOrUndefined from './isNullOrUndefined';\nexport const isObjectType = (value) => typeof value === 'object';\nexport default (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);","import isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isObject from '../utils/isObject';\nexport default (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;","export default (name) => name.substring(0, name.search(/.\\d/)) || name;\n","import getNodeParentName from './getNodeParentName';\nexport default (names, name) => [...names].some((current) => getNodeParentName(name) === current);\n","export default (value) => value.filter(Boolean);\n","export default (val) => val === undefined;\n","import compact from './compact';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nexport default (obj, path, defaultValue) => {\n    if (isObject(obj) && path) {\n        const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\n        return isUndefined(result) || result === obj\n            ? isUndefined(obj[path])\n                ? defaultValue\n                : obj[path]\n            : result;\n    }\n    return undefined;\n};","export const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n};\nexport const VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};","export default (source, key) => {\n  const copy = Object.assign({}, source);\n  delete copy[key];\n  return copy;\n};","import * as React from 'react';\nimport omit from './utils/omit';\nconst FormContext = React.createContext(null);\nFormContext.displayName = 'RHFContext';\nexport const useFormContext = () => React.useContext(FormContext);\nexport const FormProvider = (props) => (React.createElement(FormContext.Provider, { value: omit(props, 'children') }, props.children));\n","import { VALIDATION_MODE } from '../constants';\n\nexport default (\n  formState,\n  _proxyFormState,\n  localProxyFormState,\n  isRoot = true,\n) => {\n  function createGetter(prop) {\n    return () => {\n      if (prop in formState) {\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[prop] = true);\n        return formState[prop];\n      }\n      return undefined;\n    };\n  }\n\n  const result = {};\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: createGetter(key),\n    });\n  }\n\n  return result;\n};\n","import isObject from './isObject';\nexport default (value) => isObject(value) && !Object.keys(value).length;\n","import { VALIDATION_MODE } from '../constants';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport omit from '../utils/omit';\nexport default (formStateData, _proxyFormState, isRoot) => {\n    const formState = omit(formStateData, 'name');\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};","export default (value) => Array.isArray(value) ? value : [value];\n","import * as React from 'react';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport { useFormContext } from './useFormContext';\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, visible, name } = props || {};\n    const nameRef = React.useRef(name);\n    const [formState, updateFormState] = React.useState(control._formState.val);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    nameRef.current = name;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next: (formState) => (!nameRef.current ||\n                !formState.name ||\n                convertToArrayPayload(nameRef.current).includes(formState.name)) &&\n                shouldRenderFormState(formState, _localProxyFormState.current) &&\n                updateFormState(Object.assign(Object.assign({}, control._formState.val), formState)),\n        });\n        disabled && formStateSubscription.unsubscribe();\n        //Yasser ;)\n        // !visible && formStateSubscription.unsubscribe();\n        return () => formStateSubscription.unsubscribe();\n    }, [disabled, control]);\n    return getProxyFormState(formState, control._proxyFormState, _localProxyFormState.current, false);\n}\nexport { useFormState };\n","import * as React from 'react';\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport get from './utils/get';\nimport { EVENTS } from './constants';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nexport function useController(props) {\n    const methods = useFormContext();\n    const { name, control = methods.control, shouldUnregister, item } = props;\n    console.log(\"dyno ;)\", item, \"useController\");\n    const [value, setInputStateValue] = React.useState(get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)));\n    const formState = useFormState({\n        control: control || methods.control,\n        name,\n    });\n    // WTACHME: disable bug ;)\n    // TODO: move item from ref into item object seperately \n    // to prevent disable reaction about validation and submission\n    const registerProps = control.register(name, Object.assign(Object.assign({}, {...props.rules, item: {...item} }), { value }));\n    // console.log(\"dyno ;)\", registerProps,\"useController\")\n\n    const updateMounted = React.useCallback((name, value) => {\n        const field = get(control._fields, name);\n        if (field) {\n            field._f.mount = value;\n        }\n    }, [control]);\n    React.useEffect(() => {\n        const controllerSubscription = control._subjects.control.subscribe({\n            next: (data) => (!data.name || name === data.name) &&\n                setInputStateValue(get(data.values, name)),\n        });\n        updateMounted(name, true);\n        return () => {\n            controllerSubscription.unsubscribe();\n            const _shouldUnregisterField = control._shouldUnregister || shouldUnregister;\n            if (isNameInFieldArray(control._names.array, name)\n                ? _shouldUnregisterField && !control._isInAction.val\n                : _shouldUnregisterField) {\n                control.unregister(name);\n            }\n            else {\n                updateMounted(name, false);\n            }\n        };\n    }, [name, control, shouldUnregister, updateMounted]);\n    return {\n        field: {\n            onChange: (event) => {\n                const value = getControllerValue(event);\n                setInputStateValue(value);\n                registerProps.onChange({\n                    target: {\n                        value,\n                        name: name,\n                    },\n                    type: EVENTS.CHANGE,\n                });\n            },\n            onBlur: () => {\n                registerProps.onBlur({\n                    target: {\n                        name: name,\n                    },\n                    type: EVENTS.BLUR,\n                });\n            },\n            name,\n            value,\n            ref: (elm) => elm &&\n                registerProps.ref({\n                    //todo item ;)\n                    // ...(props.item && props.item || {}),\n                    focus: () => elm.focus && elm.focus(),\n                    setCustomValidity: (message) => elm.setCustomValidity(message),\n                    reportValidity: () => elm.reportValidity(),\n                }),\n        },\n        formState,\n        fieldState: {\n            invalid: !!get(formState.errors, name),\n            isDirty: !!get(formState.dirtyFields, name),\n            isTouched: !!get(formState.touchedFields, name),\n            error: get(formState.errors, name),\n        },\n    };\n}","import { useController } from './useController';\nconst Controller = (props) => props.render(useController(props));\nexport { Controller };","export default (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n  ? Object.assign(Object.assign({}, errors[name]), { types: Object.assign(Object.assign({}, (errors[name] && errors[name].types ? errors[name].types : {})), { [type]: message || true }) }) : {};\n","export default (value) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input) =>\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n","import isKey from './isKey';\nimport isObject from './isObject';\nimport stringToPath from './stringToPath';\nexport default function set(object, path, value) {\n  let index = -1;\n  // console.log(\"dyno ;)\", isKey(path),stringToPath(path), \"setset\", object)\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n            ? []\n            : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import { get } from '../utils';\nimport isObject from '../utils/isObject';\nimport isUndefined from '../utils/isUndefined';\nimport omit from '../utils/omit';\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const _f = field._f;\n            const current = omit(field, '_f');\n            if (_f && callback(_f.name)) {\n                if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n                    break;\n                }\n                else if (_f.refs) {\n                    _f.refs[0].focus();\n                    break;\n                }\n            }\n            else if (isObject(current)) {\n                focusFieldBy(current, callback);\n            }\n        }\n    }\n};\nexport default focusFieldBy;","export default (name, index, options) => options && !options.shouldFocus\n    ? options.focusName || `${name}.${options.focusIndex}.`\n    : `${name}.${index}.`;","export default () => {\n  const d =\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import generateId from './generateId';\nexport default (values = [], keyName) => values.map((value) => (Object.assign({ [keyName]: (value && value[keyName]) || generateId() }, value)));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function append(data, value) {\n    return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\n}","export default (value) =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}","import isUndefined from './isUndefined';\n\nexport default (\n  data,\n  from,\n  to,\n) => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","import omit from './omit';\nexport default (fields, keyName) => fields.map((field = {}) => omit(field, keyName));\n","import convertToArrayPayload from './convertToArrayPayload';\nexport default function prepend(data, value) {\n    return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}","import compact from './compact';\nimport convertToArrayPayload from './convertToArrayPayload';\nimport isUndefined from './isUndefined';\n\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\n\nexport default (data, index) =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(\n      data,\n      (convertToArrayPayload(index)).sort((a, b) => a - b),\n    );\n","export default (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\n};\n","export default (value) => typeof value === 'boolean';\n","import isBoolean from './isBoolean';\nimport isEmptyObject from './isEmptyObject';\nimport isKey from './isKey';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport stringToPath from './stringToPath';\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nexport default function unset(object, path) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n  if (childObject) {\n    delete childObject[key];\n  }\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n    if (k > 0) {\n      previousObjRef = object;\n    }\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n      if (currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter((data) => (isObject(data) && !isEmptyObject(data)) || isBoolean(data)).length))) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n      previousObjRef = objectRef;\n    }\n  }\n  return object;\n}","export default (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n","import * as React from 'react';\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFocusFieldName from './logic/getFocusFieldName';\nimport mapIds from './logic/mapId';\nimport appendAt from './utils/append';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport get from './utils/get';\nimport insertAt from './utils/insert';\nimport moveArrayAt from './utils/move';\nimport omitKey from './utils/omitKeys';\nimport prependAt from './utils/prepend';\nimport removeArrayAt from './utils/remove';\nimport set from './utils/set';\nimport swapArrayAt from './utils/swap';\nimport unset from './utils/unset';\nimport updateAt from './utils/update';\nimport { useFormContext } from './useFormContext';\nexport const useFieldArray = (props) => {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, } = props;\n    const _focusName = React.useRef('');\n    const [fields, setFields] = React.useState(mapIds(control._getFieldArrayValue(name), keyName));\n    control._names.array.add(name);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(value);\n        const updatedFieldArrayValues = appendAt(control._getFieldArrayValue(name), appendValue);\n        control._bathFieldArrayUpdate(keyName, name, appendAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, updatedFieldArrayValues.length - appendValue.length, options);\n    };\n    const prepend = (value, options) => {\n        const updatedFieldArrayValues = prependAt(control._getFieldArrayValue(name), convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, prependAt, {\n            argA: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, 0, options);\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArrayValue(name), index);\n        control._bathFieldArrayUpdate(keyName, name, removeArrayAt, {\n            argA: index,\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    const insert = (index, value, options) => {\n        const updatedFieldArrayValues = insertAt(control._getFieldArrayValue(name), index, convertToArrayPayload(value));\n        control._bathFieldArrayUpdate(keyName, name, insertAt, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        }, updatedFieldArrayValues);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n        _focusName.current = getFocusFieldName(name, index, options);\n    };\n    const swap = (indexA, indexB) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        swapArrayAt(fieldValues, indexA, indexB);\n        control._bathFieldArrayUpdate(keyName, name, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const move = (from, to) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        moveArrayAt(fieldValues, from, to);\n        control._bathFieldArrayUpdate(keyName, name, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, fieldValues, false);\n        setFields(mapIds(fieldValues, keyName));\n    };\n    const update = (index, value) => {\n        const fieldValues = control._getFieldArrayValue(name);\n        const updatedFieldArrayValues = updateAt(fieldValues, index, value);\n        control._bathFieldArrayUpdate(keyName, name, updateAt, {\n            argA: index,\n            argB: value,\n        }, fieldValues, true, false);\n        setFields(mapIds(updatedFieldArrayValues, keyName));\n    };\n    React.useEffect(() => {\n        control._isInAction.val = false;\n        if (control._names.watchAll) {\n            control._subjects.state.next({});\n        }\n        else {\n            for (const watchField of control._names.watch) {\n                if (name.startsWith(watchField)) {\n                    control._subjects.state.next({});\n                    break;\n                }\n            }\n        }\n        control._subjects.watch.next({\n            name,\n            values: control._formValues,\n        });\n        _focusName.current &&\n            focusFieldBy(control._fields, (key) => key.startsWith(_focusName.current));\n        _focusName.current = '';\n        control._subjects.array.next({\n            name,\n            values: omitKey([...fields], keyName),\n        });\n        control._proxyFormState.isValid && control._updateValid();\n    }, [fields, name, control, keyName]);\n    React.useEffect(() => {\n        const fieldArraySubscription = control._subjects.array.subscribe({\n            next(payload) {\n                if (payload.isReset) {\n                    unset(control._fields, payload.name || name);\n                    unset(control._formValues, payload.name || name);\n                    payload.name\n                        ? set(control._formValues, payload.name, payload.values)\n                        : payload.values && (control._formValues = payload.values);\n                    setFields(mapIds(get(control._formValues, name), keyName));\n                }\n            },\n        });\n        !get(control._formValues, name) && set(control._formValues, name, []);\n        return () => {\n            fieldArraySubscription.unsubscribe();\n            if (control._shouldUnregister || shouldUnregister) {\n                control.unregister(name);\n                unset(control._formValues, name);\n            }\n            else {\n                const fieldArrayValues = get(control._formValues, name);\n                fieldArrayValues && set(control._formValues, name, fieldArrayValues);\n            }\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [name, control, keyName]),\n        move: React.useCallback(move, [name, control, keyName]),\n        prepend: React.useCallback(prepend, [name, control, keyName]),\n        append: React.useCallback(append, [name, control, keyName]),\n        remove: React.useCallback(remove, [name, control, keyName]),\n        insert: React.useCallback(insert, [name, control, keyName]),\n        update: React.useCallback(update, [name, control, keyName]),\n        fields: fields,\n    };\n};","export default (callback, wait) => {\n  let timer = 0;\n  return (...args) => {\n      clearTimeout(timer);\n      timer = window.setTimeout(() => callback(...args), wait);\n  };\n};","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nexport default (value) => isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isDateObject from './isDateObject';\nimport isPrimitive from './isPrimitive';\nexport default function deepEqual(object1, object2) {\n    if (isPrimitive(object1) ||\n        isPrimitive(object2) ||\n        isDateObject(object1) ||\n        isDateObject(object2)) {\n        return object1 === object2;\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isObject(val1) || Array.isArray(val1)) &&\n                (isObject(val2) || Array.isArray(val2))\n                ? !deepEqual(val1, val2)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}","import { VALIDATION_MODE } from '../constants';\nexport default (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});","export default (element) => element.type === 'file';\n","export default (value) => typeof value === 'function';\n","export default (value) => value instanceof HTMLElement;\n","export default (element) => element.type === `select-multiple`;\n","export default (element) => element.type === 'radio';\n","import isCheckBoxInput from './isCheckBoxInput';\nimport isRadioInput from './isRadioInput';\nexport default (ref) => isRadioInput(ref) || isCheckBoxInput(ref);","export default (value) => typeof value === 'string';\n","export default typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n","export class Subscription {\n  constructor() {\n      this.tearDowns = [];\n  }\n  add(tearDown) {\n      this.tearDowns.push(tearDown);\n  }\n  unsubscribe() {\n      for (const teardown of this.tearDowns) {\n          teardown();\n      }\n      this.tearDowns = [];\n  }\n}\nclass Subscriber {\n  constructor(observer, subscription) {\n      this.observer = observer;\n      this.closed = false;\n      subscription.add(() => (this.closed = true));\n  }\n  next(value) {\n      if (!this.closed) {\n          this.observer.next(value);\n      }\n  }\n}\nexport default class Subject {\n  constructor() {\n      this.observers = [];\n  }\n  next(value) {\n      for (const observer of this.observers) {\n          observer.next(value);\n      }\n  }\n  subscribe(observer) {\n      const subscription = new Subscription();\n      const subscriber = new Subscriber(observer, subscription);\n      this.observers.push(subscriber);\n      return subscription;\n  }\n  unsubscribe() {\n      this.observers = [];\n  }\n}","import isUndefined from '../utils/isUndefined';\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nexport default (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n","import isUndefined from '../utils/isUndefined';\nexport default (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : +value\n        : valueAsDate\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;","export default (options) => [...options]\n    .filter(({ selected }) => selected)\n    .map(({ value }) => value);","const defaultReturn = {\n  isValid: false,\n  value: null,\n};\nexport default (options) => Array.isArray(options)\n  ? options.reduce((previous, option) => option && option.checked && !option.disabled\n      ? {\n          isValid: true,\n          value: option.value,\n      }\n      : previous, defaultReturn)\n  : defaultReturn;","import isCheckBox from '../utils/isCheckBoxInput';\nimport isFileInput from '../utils/isFileInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isRadioInput from '../utils/isRadioInput';\nimport isUndefined from '../utils/isUndefined';\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport getRadioValue from './getRadioValue';\nexport default function getFieldValue(field) {\n    if (field && field._f) {\n        const ref = field._f.ref;\n        //TODO: findout why it is here ;) thanks to Edward ;)\n        // if (field._f.refs ? field._f.refs.every((ref) => ref.disabled) : ref.disabled) {\n        //     return;\n        // }\n        if (isFileInput(ref)) {\n            return ref.files;\n        }\n        if (isRadioInput(ref)) {\n            return getRadioValue(field._f.refs).value;\n        }\n        if (isMultipleSelect(ref)) {\n            return getMultipleSelectValue(ref.options);\n        }\n        if (isCheckBox(ref)) {\n            return getCheckboxValue(field._f.refs).value;\n        }\n        return getFieldValueAs(isUndefined(ref.value) ? field._f.ref.value : ref.value, field._f);\n    }\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\n\nexport default (\n  fieldsNames,\n  _fieldss,\n  criteriaMode,\n  shouldUseNativeValidation,\n) => {\n  const fields = {};\n\n  for (const name of fieldsNames) {\n    const field = get(_fieldss, name);\n\n    field && set(fields, name, field._f);\n  }\n\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation,\n  };\n};\n","export default (options, mounted) => mounted &&\n    options &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\nexport function deepMerge(target, source) {\n    if (isPrimitive(target) || isPrimitive(source)) {\n        return source;\n    }\n    for (const key in source) {\n        const targetValue = target[key];\n        const sourceValue = source[key];\n        try {\n            target[key] =\n                (isObject(targetValue) && isObject(sourceValue)) ||\n                    (Array.isArray(targetValue) && Array.isArray(sourceValue))\n                    ? deepMerge(targetValue, sourceValue)\n                    : sourceValue;\n        }\n        catch (_a) { }\n    }\n    return target;\n}","import { get } from '../utils';\nimport deepEqual from '../utils/deepEqual';\nimport { deepMerge } from '../utils/deepMerge';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport set from '../utils/set';\nfunction setDirtyFields(values, defaultValues, dirtyFields, parentNode, parentName) {\n    let index = -1;\n    while (++index < values.length) {\n        for (const key in values[index]) {\n            if (Array.isArray(values[index][key])) {\n                !dirtyFields[index] && (dirtyFields[index] = {});\n                dirtyFields[index][key] = [];\n                setDirtyFields(values[index][key], get(defaultValues[index] || {}, key, []), dirtyFields[index][key], dirtyFields[index], key);\n            }\n            else {\n                !isNullOrUndefined(defaultValues) &&\n                    deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n                    ? set(dirtyFields[index] || {}, key)\n                    : (dirtyFields[index] = Object.assign(Object.assign({}, dirtyFields[index]), { [key]: true }));\n            }\n        }\n        parentNode &&\n            !dirtyFields.length &&\n            delete parentNode[parentName];\n    }\n    return dirtyFields;\n}\nexport default (values, defaultValues, dirtyFields) => deepMerge(setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)), setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)));\n","export default ({ isOnBlur, isOnChange, isOnTouch, isTouched, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\n  if (isOnAll) {\n      return false;\n  }\n  else if (!isSubmitted && isOnTouch) {\n      return !(isTouched || isBlurEvent);\n  }\n  else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n      return !isBlurEvent;\n  }\n  else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n      return isBlurEvent;\n  }\n  return true;\n};","import compact from '../utils/compact';\nimport get from '../utils/get';\nimport unset from '../utils/unset';\n\nexport default (ref, name) =>\n  !compact(get(ref, name, [])).length && unset(ref, name);\n","import * as React from 'react';\nimport isString from './isString';\nexport default (value) => isString(value) || React.isValidElement(value);\n","export default (value) => value instanceof RegExp;\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nexport default function getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\n\nexport default (validationData) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","import { INPUT_VALIDATION_RULES } from '../constants';\nimport isBoolean from '../utils/isBoolean';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isMessage from '../utils/isMessage';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isRadioInput from '../utils/isRadioInput';\nimport isRegex from '../utils/isRegex';\nimport isString from '../utils/isString';\nimport appendErrors from './appendErrors';\nimport getCheckboxValue from './getCheckboxValue';\nimport getRadioValue from './getRadioValue';\nimport getValidateError from './getValidateError';\nimport getValueAndMessage from './getValueAndMessage';\nexport default async (field, inputValue, validateAllFieldCriteria, shouldUseNativeValidation) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    if (!mount) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidty = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\n            ref }, appendErrorsCurry(exceedMax ? maxType : minType, message));\n    };\n    if (required &&\n        ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n            (isBoolean(inputValue) && !inputValue) ||\n            (isCheckBox && !getCheckboxValue(refs).isValid) ||\n            (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message, ref: inputRef }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber || parseFloat(inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            if (isString(maxOutput.value)) {\n                exceedMax = valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value)) {\n                exceedMin = valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        console.log(\"dyno ;)\", isRegex(new RegExp(patternValue)), !inputValue.match(patternValue), patternValue, \"patternValue\")\n        if (isRegex(new RegExp(patternValue)) && !inputValue.match(patternValue)) {\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message,\n                ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message));\n            if (!validateAllFieldCriteria) {\n                setCustomValidty(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\n                if (!validateAllFieldCriteria) {\n                    setCustomValidty(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue), inputRef, key);\n                if (validateError) {\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\n                    setCustomValidty(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = Object.assign({ ref: inputRef }, validationResult);\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidty(true);\n    return error;\n};\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV3(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                    (_proxyFormState.touchedFields &&\n                        isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }) => {\n        // console.log(\"dyno ;)\", \"SUBMITFORM here\", _fields)\n        for (const name in _fields) {\n            const field = _fields[name];\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                    console.log(\"dyno ;)\", fieldError,\"fieldError\")\n                    if (shouldCheckValid) {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                            break;\n                        }\n                    }\n                    else {\n                        if (fieldError[_f.name]) {\n                            context.valid = false;\n                        }\n                        fieldError[_f.name]\n                            ? set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name);\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({ isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n            ? _defaultValues\n            : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges,result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                ? [...result[0]]\n                : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues,\"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors, \"end\");\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        console.log(\"dyno ;)\", _formValues, _fields, \"fdfdfdfdfdfd\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                    fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), { refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name } }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), { onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                } });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import isHTMLElement from './isHTMLElement';\nexport default (ref) => !isHTMLElement(ref) || !document.contains(ref);\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV3 as createFormControlV2 } from './logic/createFormControlV3';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV2(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import * as React from 'react';\nimport convertToArrayPayload from './utils/convertToArrayPayload';\nimport isUndefined from './utils/isUndefined';\nimport { useFormContext } from './useFormContext';\nexport function useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, } = props || {};\n    const _name = React.useRef(name);\n    _name.current = name;\n    const [value, updateValue] = React.useState(isUndefined(defaultValue)\n        ? control._getWatch(name)\n        : defaultValue);\n    React.useEffect(() => {\n        const watchSubscription = control._subjects.watch.subscribe({\n            next: ({ name }) => {\n                console.log(\"dyno ;)\", \"##1 watchSubscription\", name)\n                return(!_name.current ||\n                !name ||\n                convertToArrayPayload(_name.current).some((fieldName) => name &&\n                    fieldName &&\n                    (fieldName.startsWith(name) ||\n                        name.startsWith(fieldName)))) &&\n                updateValue(control._getWatch(_name.current, defaultValue))},\n        });\n        disabled && watchSubscription.unsubscribe();\n        return () => watchSubscription.unsubscribe();\n    }, [disabled, control, defaultValue]);\n    return value;\n}","import { useMemo, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst rebuildHistory = (history = {}, to = 0, from = 0) => {\n    const newHistory = [...history].slice(from, to);\n    console.log(\"dyno ;)\", 'rebuildHistory', newHistory, to)\n    return new Set(newHistory);\n}\n\nexport default function useHistory(init = { name: \"\" }) {\n\n    const [states, setStates] = useState(init);\n\n    //history\n    const [history, updateHistory] = useState(new Set());\n    const [index, setIndex] = useState(0);\n    const [currentPage, updateCurrentPage] = useState(init?.name);\n\n    const state = useMemo(() => states[currentPage], [index, currentPage]);\n    // const state = useMemo(() => states[init?.name], [states, init.name]);\n\n    // {\n    //     \"dashboard\": { }\n    // }\n\n    const setState = (value) => {\n        if (value === undefined || value === null || value === {}) return;\n        // check the existing one with name\n        // { name: \"pageName\" }\n        const pageName = value.name;\n\n        const existing = _.get(states, pageName);\n\n        // check whether equal or it changed ;)\n        if (history.has(pageName)) {\n            // if (_.isEqual(existing, value)) {\n            // const existingPage = _.get(states,pageName);\n            // const newHistory = [...history].slice(0,existing[\"x-index\"]);\n            const newHistory = rebuildHistory(history, existing[\"x-index\"]);\n            updateHistory(newHistory)\n\n            const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": existing[\"x-index\"] }));\n            setStates(copy);\n\n            // updateHistory(new Set(newHistory));\n            setIndex(existing[\"x-index\"])\n            updateCurrentPage(pageName);\n\n            console.log(\"dyno ;)\", \"lolllllllllllllllllll\", history, '99999', existing[\"x-index\"], newHistory);\n            return;\n        }\n        console.log(\"dyno ;)\", \"histlori\", value, _.set(states, pageName, value), state, history.size)\n        const newIndex = index + 1;\n        const copy = _.cloneDeep(_.set(states, pageName, { ...value, \"x-index\": newIndex }));\n        // setIndex(pageName);\n        setIndex(newIndex);\n        // copy = _.set(copy,value.name, value);\n        updateHistory(history.add(pageName));\n        setStates(copy);\n        updateCurrentPage(pageName);\n        console.log(\"dyno ;)\", 'hissssstory', history)\n        console.log(\"dyno ;)\", value, 'drooooomemppppppphistlori', existing)\n        console.log(\"dyno ;)\", states, '31231232323132', state, currentPage, _.isEqual(existing, value))\n    }\n\n    const setStateOld = (value) => {\n        if (_.isEqual(state, value)) {\n            return;\n        }\n        const copy = _.cloneDeep(states);\n        copy.length = index + 1;\n        copy.push(value);\n        setStates(copy);\n        setIndex(copy.length - 1);\n        console.log(\"dyno ;)\", states, 'drooooomemppppppp', _.isEqual(state, value), copy, index)\n    };\n\n    const resetState = (init = { name: \"\" }) => {\n        setIndex(0);\n        setStates({});\n        updateHistory([])\n        console.log(\"dyno ;)\", \":::::resetState\", history, states, index)\n    };\n\n    const goBack = (steps = 1, reset = false) => {\n        if(Number(steps)){\n            goBackByIndex(steps, reset);\n            return;\n        }\n        console.log(\"dyno ;)\", 'gobackbyname', steps)\n        if(!states[steps]){\n            throw \"gobackbyname is not available ;)\";\n        }\n        goBackByName(steps, reset);\n    }\n\n\n    const goBackByIndex = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goBackByName = (steps = 1, reset = false) => {\n        console.log(\"dyno ;)\", steps, 'stepsssssss')\n        const existingPage = _.get(states, steps);\n\n\n        const newIndex = Math.max(0, Number(index) - (Number(steps) || 1));\n        const previousPageName = Object.keys(states)[newIndex - 1];\n        // setIndex(Math.max(0, Number(index) - (Number(steps) || 1)));\n        console.log(\"dyno ;)\", Math.max(0, Number(index) - (Number(steps) || 1)), 'drooooomempppppppdrooooo45678mempppppppdrooooomemppppppp', index, previousPageName, states[previousPageName])\n        updateCurrentPage(previousPageName);\n        setIndex(newIndex);\n        if (reset) {\n            const existingPage = _.get(states, previousPageName);\n            const newHistory = rebuildHistory(history, newIndex);\n            // let copy = {}\n            // newHistory.map(page => copy = _.set(copy, states[page]))\n            // setStates(copy);\n            updateHistory(newHistory)\n            console.log(\"dyno ;)\", \n                previousPageName,\n                newIndex,\n                'resetHardddddddd',\n                history,\n                newHistory,\n                existingPage[\"x-index\"],\n                // copy\n            )\n        }\n    };\n\n    const goForward = (steps = 1) => {\n        setIndex(Math.min(states.length - 1, Number(index) + (Number(steps) || 1)));\n    };\n\n    const updatePage = (value) => {\n        const existing = _.get(states, currentPage);\n        existing.defaultValues = { ...value };\n        console.log(\"dyno ;)\", value, 'updatePage youuuuupppp', existing)\n    }\n\n    return {\n        state: state,\n        setState: setState,\n        resetState: resetState,\n        currentPage,\n        index: index,\n        lastIndex: states?.length - 1 || 0,\n        goBack: goBack,\n        goForward: goForward,\n        updatePage: updatePage,\n        history\n    };\n}","const jsonataOriginal = require('jsonata');\n\nconst htmltotext = (value, options) => { \n    return `${value} yasserrrrrrrr`\n}\n\nconst registerWithJSONATA = (expression) => {\n    if (typeof expression === 'undefined' || typeof expression.registerFunction === 'undefined') {\n      throw new TypeError('Invalid JSONata Expression');\n    }\n    expression.registerFunction(\n      'htmltotext',\n      (value, options) => htmltotext(value, options),\n      '<s?o?:s>'\n    );\n}\n\nfunction jsonataExtended(expr, options) {\n    const expression = jsonataOriginal(expr, options);\n    registerWithJSONATA(expression);\n    return expression;\n}\n\nexport default jsonataExtended;","import jsonata from \"../utils/jsonata\";\n\nexport default async function transformer(data, schema)  {\n    const expression = jsonata(schema);\n    const result = await expression.evaluate(data);\n    return result;\n}","import { useState, useEffect } from 'react';\n\nconst useDynamoHistory = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n  if (!Array.isArray(initialArr)) {\n    throw new Error('initialArr must be an array.');\n  }\n\n  const [history, setHistory] = useState(initialArr);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (history.length === 0) {\n      setCurrentIndex(0);\n    } else {\n      const newIndex = history.findIndex(e => e[field] === id);\n      setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    // Assign the type of the first object as primary if not explicitly specified\n    if (history.length > 0 && !history[0].type) {\n      setHistory(prevHistory => {\n        const updatedFirstObj = { ...prevHistory[0], type: 'primary' };\n        return [updatedFirstObj, ...prevHistory.slice(1)];\n      });\n    }\n  }, [history]);\n\n  const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n  const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n  const next = () => {\n    if (history.length === 0) return false;\n    const nextIndex = getNextIndex();\n    return nextIndex !== false ? history[nextIndex] : false;\n  };\n\n  const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n  const previous = () => {\n    if (history.length === 0) return false;\n    const previousIndex = getPreviousIndex();\n    return previousIndex !== false ? history[previousIndex] : false;\n  };\n\n  const goToStart = () => {\n    if (history.length === 0) return;\n    setCurrentIndex(0);\n  };\n\n  const goTo = (newId, removeAfter = false) => {\n    if (history.length === 0) return;\n    const newIndex = history.findIndex(e => e[field] === newId);\n    if (newIndex >= 0) {\n      setCurrentIndex(newIndex);\n      if (removeAfter) {\n        removeAfterIndex(newIndex);\n      }\n    }\n  };\n\n  const goNext = () => {\n    if (history.length === 0) return;\n    const nextIndex = getNextIndex();\n    if (nextIndex !== false) {\n      setCurrentIndex(nextIndex);\n    }\n  };\n\n  const goToIndex = (index, removeAfter = false) => {\n    if (history.length === 0) return;\n    if (index >= 0 && index < history.length) {\n      setCurrentIndex(index);\n      if (removeAfter) {\n        removeAfterIndex(index);\n      }\n    }\n  };\n\n  const goBack = (removeAfter = false) => {\n    if (history.length === 0) return;\n    const previousIndex = getPreviousIndex();\n    if (previousIndex !== false) {\n      setCurrentIndex(previousIndex);\n      if (removeAfter) {\n        removeAfterIndex(previousIndex);\n      }\n    }\n  };\n\n  const goBackToPrimary = (removeAfter = false, skipSecondary = true) => {\n    if (history.length === 0) return;\n  \n    let previousIndex = currentIndex - 1;\n    if (skipSecondary) {\n      while (previousIndex >= 0 && history[previousIndex].type === 'secondary') {\n        previousIndex--;\n      }\n    }\n  \n    if (previousIndex >= 0) {\n      setCurrentIndex(previousIndex);\n      if (removeAfter) {\n        removeAfterIndex(previousIndex);\n      }\n    }\n  };\n\n  const goForwardToType = (removeAfter = false, skipSecondary = true, type = \"primary\") => {\n    if (history.length === 0) return;\n  \n    let nextIndex = currentIndex + 1;\n    if (skipSecondary) {\n      while (nextIndex < history.length && history[nextIndex].type !== type) {\n        nextIndex++;\n      }\n    }\n    \n    if (nextIndex < history.length) {\n      setCurrentIndex(nextIndex);\n      if (removeAfter) {\n        removeAfterIndex(nextIndex);\n      }\n    }\n  };\n\n  const goToEnd = () => {\n    if (history.length === 0) return;\n    setCurrentIndex(history.length - 1);\n  };\n\n  const insertObjectAtIndex = (object, insertIndex) => {\n    if(insertIndex > history.length) return;\n    const newArray = [...history];\n    newArray.splice(insertIndex, 0, object);\n    setHistory(newArray);\n    setCurrentIndex(insertIndex);\n  };\n\n  const insertObject = (object, insertIndex, customIgnoreDuplicates = false, customReplaceDuplicate = undefined) => {\n    if (preventDuplicates && !customIgnoreDuplicates) {\n      const existingIndex = history.findIndex(e => e[field] === object[field]);\n      if (existingIndex !== -1) {\n        if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n          const newArray = [...history];\n          newArray[existingIndex] = object;\n          setHistory(newArray);\n          setCurrentIndex(existingIndex); // Update current index to reflect the new position\n        } else {\n          setCurrentIndex(existingIndex); // Update current index to the existing position\n        }\n        return; // Duplicate object found, do not insert or replace\n      }\n    }\n  \n    const previousObject = previous();\n    const objectType = previousObject && previousObject.type === 'primary' ? 'secondary' : 'primary';\n  \n    const objectWithDefaultType = {\n      ...object,\n      ...(!object.type && {type: objectType}),\n    };\n  \n    if (insertIndex !== undefined) {\n      insertObjectAtIndex(objectWithDefaultType, insertIndex);\n    } else {\n      setHistory([...history, objectWithDefaultType]);\n      setCurrentIndex(history.length);\n    }\n  };\n\n  const updateCurrent = (updatedObject) => {\n    if (history.length === 0) return;\n  \n    // If the current object is the first object and its type is secondary,\n    // replace the type with \"primary\"\n    if (currentIndex === 0 && updatedObject.type === 'secondary') {\n      updatedObject.type = 'primary';\n    }\n  \n    const updatedArray = [...history];\n    updatedArray[currentIndex] = updatedObject;\n    setHistory(updatedArray);\n  };\n\n  const updateObjectById = (updatedObject) => {\n    if (history.length === 0) return;\n\n    // If the current object is the first object and its type is secondary,\n    // replace the type with \"primary\"\n    if (currentIndex === 0 && updatedObject.type === 'secondary') {\n      updatedObject.type = 'primary';\n    }\n\n    const index = history.findIndex(e => e[field] === updatedObject[field]);\n    if (index !== -1) {\n      const updatedArray = [...history];\n      updatedArray[index] = updatedObject;\n      setHistory(updatedArray);\n    }\n  };\n  \n  const removeObjectByIndex = removeIndex => {\n    if (removeIndex >= 0 && removeIndex < history.length) {\n      const newArray = [...history];\n      newArray.splice(removeIndex, 1);\n      setHistory(newArray);\n\n      // Adjust the current index if the removed item is before the current index\n      if (removeIndex < currentIndex) {\n        setCurrentIndex(currentIndex - 1);\n      }\n      // Set the current index to the last item if it was the last item that got removed\n      if (currentIndex >= history.length - 1) {\n        setCurrentIndex(history.length - 2);\n      }\n    }\n  };\n\n  const removeObjectByName = removeName => {\n    const removeIndex = history.findIndex(e => e[field] === removeName);\n    removeObjectByIndex(removeIndex);\n  };\n\n  const removeAtIndex = index => {\n    if (index >= 0 && index < history.length) {\n      const newArr = [...history];\n      newArr.splice(index, 1);\n      setHistory(newArr);\n      if (currentIndex >= history.length) {\n        setCurrentIndex(history.length > 0 ? history.length - 1 : 0);\n      }\n    }\n  };\n\n  const removeByName = name => {\n    const index = history.findIndex(e => e[field] === name);\n    if (index !== -1) {\n      removeAtIndex(index);\n    }\n  };\n\n  const removeFirst = () => {\n    if (history.length > 0) {\n      removeAtIndex(0);\n    }\n  };\n\n  const removeLast = () => {\n    if (history.length > 0) {\n      removeAtIndex(history.length - 1);\n    }\n  };\n\n  const removeAll = () => {\n    setHistory([]);\n    setCurrentIndex(0);\n  };\n\n  const removeAfterIndex = index => {\n    if (index >= 0 && index < history.length - 1) {\n      const newArr = [...history];\n      newArr.splice(index + 1);\n      setHistory(newArr);\n      if (currentIndex >= history.length) {\n        setCurrentIndex(history.length > 0 ? history.length - 1 : 0);\n      }\n    }\n  };\n\n  const getHistory = () => {\n    const historyDict = {};\n    history.forEach((obj, index) => {\n      const objId = obj[field];\n      historyDict[objId] = obj;\n    });\n    return historyDict;\n  };\n\n  return {\n    history,\n    currentIndex,\n    next,\n    current,\n    previous,\n    goToStart,\n    goTo,\n    goNext,\n    goToIndex,\n    goBack,\n    goToEnd,\n    insertObject,\n    insertObjectAtIndex,\n    removeAtIndex,\n    removeByName,\n    removeFirst,\n    removeLast,\n    removeAll,\n    removeAfterIndex,\n    removeObjectByIndex,\n    removeObjectByName,\n    updateCurrent,\n    goBackToPrimary,\n    updateObjectById,\n    goForwardToType,\n    getHistory\n  };\n};\n\nexport default useDynamoHistory;\n\n// import { useState, useEffect } from 'react';\n\n// const useNavigatableObjectsArray = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n//   if (!Array.isArray(initialArr)) {\n//     throw new Error('initialArr must be an array.');\n//   }\n\n//   const [history, setHistory] = useState(initialArr);\n//   const [currentIndex, setCurrentIndex] = useState(0);\n\n//   useEffect(() => {\n//     if (history.length === 0) {\n//       setCurrentIndex(0);\n//       return;\n//     }\n\n//     const newIndex = history.findIndex(e => e[field] === id);\n//     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n//   }, [history, field, id]);\n\n//   const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n//   const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n//   const next = () => {\n//     if (history.length === 0) return false;\n//     const nextIndex = getNextIndex();\n//     return nextIndex !== false ? history[nextIndex] : false;\n//   };\n\n//   const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n//   const previous = () => {\n//     if (history.length === 0) return false;\n//     const previousIndex = getPreviousIndex();\n//     return previousIndex !== false ? history[previousIndex] : false;\n//   };\n\n//   const goToStart = () => {\n//     if (history.length === 0) return;\n//     setCurrentIndex(0);\n//   };\n\n//   const goTo = (newId, removeAfter = false) => {\n//     if (history.length === 0) return;\n//     const newIndex = history.findIndex(e => e[field] === newId);\n//     if (newIndex >= 0) {\n//       setCurrentIndex(newIndex);\n//       if (removeAfter) {\n//         removeAfterIndex(newIndex);\n//       }\n//     }\n//   };\n\n//   const goNext = () => {\n//     if (history.length === 0) return;\n//     const nextIndex = getNextIndex();\n//     if (nextIndex !== false) {\n//       setCurrentIndex(nextIndex);\n//     }\n//   };\n\n//   const goToIndex = (index, removeAfter = false) => {\n//     if (history.length === 0) return;\n//     if (index >= 0 && index < history.length) {\n//       setCurrentIndex(index);\n//       if (removeAfter) {\n//         removeAfterIndex(index);\n//       }\n//     }\n//   };\n\n//   const goToEnd = () => setCurrentIndex(history.length - 1);\n\n//   const goBack = (removeAfter = false) => {\n//     if (history.length === 0) return;\n//     const previousIndex = getPreviousIndex();\n//     if (previousIndex !== false) {\n//       setCurrentIndex(previousIndex);\n//       if (removeAfter) {\n//         removeAfterIndex(previousIndex);\n//       }\n//     }\n//   };\n\n//   const insertObject = (obj, insertIndex = history.length, preventDuplicates = false, replaceDuplicate = false) => {\n//     if (preventDuplicates) {\n//       const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n//       if (duplicateIndex !== -1) {\n//         if (replaceDuplicate) {\n//           const newArr = [...history];\n//           newArr.splice(duplicateIndex, 1, obj);\n//           setHistory(newArr);\n//           setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//         }\n//         return;\n//       }\n//     }\n//     const newArr = [...history];\n//     newArr.splice(insertIndex, 0, obj);\n//     setHistory(newArr);\n//     setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//   };\n\n//   const removeAtIndex = index => {\n//     if (history.length === 0 || index < 0 || index >= history.length) return;\n//     const newArr = [...history];\n//     newArr.splice(index, 1);\n//     setHistory(newArr);\n//     setCurrentIndex(history.length > 0 ? currentIndex : 0);\n//   };\n\n//   const removeByName = name => {\n//     if (history.length === 0) return;\n//     const index = history.findIndex(e => e[field] === name);\n//     if (index !== -1) {\n//       removeAtIndex(index);\n//     }\n//   };\n\n//   const removeFirst = () => {\n//     removeAtIndex(0);\n//   };\n\n//   const removeLast = () => {\n//     removeAtIndex(history.length - 1);\n//   };\n\n//   const removeAll = () => {\n//     setHistory([]);\n//     setCurrentIndex(0);\n//   };\n\n//   const removeAfterIndex = index => {\n//     if (index < 0 || index >= history.length - 1) return;\n//     const newArr = history.slice(0, index + 1);\n//     setHistory(newArr);\n//     setCurrentIndex(index);\n//   };\n\n//   return {\n//     history,\n//     next,\n//     current,\n//     previous,\n//     goToStart,\n//     goTo,\n//     goNext,\n//     goToEnd,\n//     goBack,\n//     goToIndex,\n//     insertObject,\n//     removeAtIndex,\n//     removeByName,\n//     removeFirst,\n//     removeLast,\n//     removeAll,\n//     removeAfterIndex,\n//     currentIndex\n//   };\n// };\n\n// export default useNavigatableObjectsArray;\n\n// // import { useState, useEffect } from 'react';\n\n// // const useNavigatableObjectsArray = (initialArr, field, id, preventDuplicates = false, replaceDuplicate = false) => {\n// //   const [history, setHistory] = useState(initialArr);\n// //   const [currentIndex, setCurrentIndex] = useState(0);\n\n// //   useEffect(() => {\n// //     const newIndex = history.map(e => e[field]).indexOf(id);\n// //     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n// //   }, [history, field, id]);\n\n// //   useEffect(() => {\n// //     const newIndex = history.findIndex(e => e[field] === history[currentIndex][field]);\n// //     setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n// //   }, [history, field, currentIndex]);\n\n// //   const getNextIndex = () => (currentIndex + 1 >= history.length ? false : currentIndex + 1);\n// //   const getPreviousIndex = () => (currentIndex - 1 < 0 ? false : currentIndex - 1);\n\n// //   const next = () => {\n// //     const nextIndex = getNextIndex();\n// //     return nextIndex !== false ? history[nextIndex] : false;\n// //   };\n\n// //   const current = () => (currentIndex >= 0 && currentIndex < history.length ? history[currentIndex] : false);\n\n// //   const previous = () => {\n// //     const previousIndex = getPreviousIndex();\n// //     return previousIndex !== false ? history[previousIndex] : false;\n// //   };\n\n// //   const goToStart = () => setCurrentIndex(0);\n\n// //   // const goTo = newId => {\n// //   //   const newIndex = history.map(e => e[field]).indexOf(newId);\n// //   //   if (newIndex >= 0) setCurrentIndex(newIndex);\n// //   // };\n\n// //   const goTo = (newId, removeAfter = false) => {\n// //     const newIndex = history.map(e => e[field]).indexOf(newId);\n// //     if (newIndex >= 0) {\n// //       setCurrentIndex(newIndex);\n// //       if (removeAfter) {\n// //         removeAfterIndex(newIndex);\n// //       }\n// //     }\n// //   };\n\n// //   const goNext = () => {\n// //     const nextIndex = getNextIndex();\n// //     if (nextIndex !== false) setCurrentIndex(nextIndex);\n// //   };\n\n// //   // const goBack = () => {\n// //   //   const previousIndex = getPreviousIndex();\n// //   //   if (previousIndex !== false) setCurrentIndex(previousIndex);\n// //   // };\n\n// //   const goToEnd = () => setCurrentIndex(history.length - 1);\n\n// //   // const goToIndex = index => {\n// //   //   if (index >= 0 && index < history.length) {\n// //   //     setCurrentIndex(index);\n// //   //   }\n// //   // };\n\n// //   const goToIndex = (index, removeAfter = false) => {\n// //     if (index >= 0 && index < history.length) {\n// //       setCurrentIndex(index);\n// //       if (removeAfter) {\n// //         removeAfterIndex(index);\n// //       }\n// //     }\n// //   };\n\n// //   const goBack = (removeAfter = false) => {\n// //     const previousIndex = getPreviousIndex();\n// //     if (previousIndex !== false) {\n// //       setCurrentIndex(previousIndex);\n// //       console.log(removeAfter, 'removeAfter');\n// //       if (removeAfter) {\n// //         removeAfterIndex(previousIndex);\n// //       }\n// //     }\n// //   };\n\n// //   const insertObjectAtIndex = (object, insertIndex) => {\n// //     const newArray = [...history];\n// //     newArray.splice(insertIndex, 0, object);\n// //     setHistory(newArray);\n// //     setCurrentIndex(insertIndex);\n// //   };\n\n// //   const insertObject = (object, insertIndex, ignoreDuplicates = false, customReplaceDuplicate = undefined) => {\n// //     if (preventDuplicates && !ignoreDuplicates) {\n// //       const existingIndex = history.findIndex(e => e[field] === object[field]);\n// //       if (existingIndex !== -1) {\n// //         if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n// //           const newArray = [...history];\n// //           newArray[existingIndex] = object;\n// //           setHistory(newArray);\n// //           setCurrentIndex(existingIndex); // Update current index to reflect the new position\n// //         } else {\n// //           setCurrentIndex(existingIndex); // Update current index to the existing position\n// //         }\n// //         return; // Duplicate object found, do not insert or replace\n// //       }\n// //     }\n\n// //     if (insertIndex !== undefined) {\n// //       insertObjectAtIndex(object, insertIndex);\n// //     } else {\n// //       setHistory([...history, object]);\n// //       setCurrentIndex(history.length);\n// //     }\n// //   };\n\n// //   const removeObjectByIndex = removeIndex => {\n// //     if (removeIndex >= 0 && removeIndex < history.length) {\n// //       const newArray = [...history];\n// //       newArray.splice(removeIndex, 1);\n// //       setHistory(newArray);\n\n// //       // Adjust the current index if the removed item is before the current index\n// //       if (removeIndex < currentIndex) {\n// //         setCurrentIndex(currentIndex - 1);\n// //       }\n// //       // Set the current index to the last item if it was the last item that got removed\n// //       if (currentIndex >= history.length - 1) {\n// //         setCurrentIndex(history.length - 2);\n// //       }\n// //     }\n// //   };\n\n// //   const removeObjectByName = removeName => {\n// //     const removeIndex = history.findIndex(e => e[field] === removeName);\n// //     removeObjectByIndex(removeIndex);\n// //   };\n\n// //   const removeAfterIndex = removeIndex => {\n// //     if (removeIndex >= 0 && removeIndex < history.length - 1) {\n// //       const newArray = history.slice(0, removeIndex + 1);\n// //       setHistory(newArray);\n// //       setCurrentIndex(Math.min(currentIndex, newArray.length - 1));\n// //     }\n// //   };\n\n// //   return {\n// //     history,\n// //     next,\n// //     current,\n// //     previous,\n// //     goToStart,\n// //     goTo,\n// //     goNext,\n// //     goBack,\n// //     goToEnd,\n// //     goToIndex,\n// //     insertObject,\n// //     removeObjectByIndex,\n// //     removeObjectByName,\n// //     removeAfterIndex\n// //   };\n// // };\n\n// // export default useNavigatableObjectsArray;\n// // // Usage example:\n// // // const MyComponent = () => {\n// // //   const initialData = [\n// // //     { id: 1, name: 'Object 1' },\n// // //     { id: 2, name: 'Object 2' },\n// // //     { id: 3, name: 'Object 3' }\n// // //   ];\n\n// // //   const navigatableArray = useNavigatableObjectsArray(initialData, 'id', 2);\n\n// // //   const handleInsertObject = () => {\n// // //     const newObject = { id: 4, name: 'Object 4' };\n// // //     const insertIndex = 2; // Insert at index 2\n// // //     navigatableArray.insertObject(newObject, insertIndex);\n// // //   };\n\n// // //   const handleInsertObjectAtEnd = () => {\n// // //     const newObject = { id: 5, name: 'Object 5' };\n// // //     navigatableArray.insertObject(newObject);\n// // //   };\n\n// // //   return (\n// // //     <div>\n// // //       <button onClick={navigatableArray.goToStart}>Go to Start</button>\n// // //       <button onClick={navigatableArray.goNext}>Go Next</button>\n// // //       <button onClick={navigatableArray.goBack}>Go Back</button>\n// // //       <button onClick={navigatableArray.goToEnd}>Go to End</button>\n// // //       <button onClick={handleInsertObject}>Insert Object at Index</button>\n// // //       <button onClick={handleInsertObjectAtEnd}>Insert Object at End</button>\n// // //       <div>\n// // //         Current Object: {navigatableArray.current()?.name}\n// // //       </div>\n// // //       <ul>\n// // //         {navigatableArray.history.map(obj => (\n// // //           <li key={obj.id}>{obj.name}</li>\n// // //         ))}\n// // //       </ul>\n// // //     </div>\n// // //   );\n// // // };\n\n\n\n\n  // const insertObject = (obj, insertIndex = history.length, preventDuplicates = false, replaceDuplicate = false) => {\n  //   if (preventDuplicates) {\n  //     const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n  //     if (duplicateIndex !== -1) {\n  //       if (replaceDuplicate) {\n  //         const newArr = [...history];\n  //         newArr.splice(duplicateIndex, 1, obj);\n  //         setHistory(newArr);\n  //         setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  //       }\n  //       return;\n  //     }\n  //   }\n  //   const newArr = [...history];\n  //   newArr.splice(insertIndex, 0, obj);\n  //   setHistory(newArr);\n  //   setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  // };\n\n  // const insertObjectAtIndex = (obj, index, preventDuplicates = false, replaceDuplicate = false) => {\n  //   if (preventDuplicates) {\n  //     const duplicateIndex = history.findIndex(e => e[field] === obj[field]);\n  //     if (duplicateIndex !== -1) {\n  //       if (replaceDuplicate) {\n  //         const newArr = [...history];\n  //         newArr.splice(duplicateIndex, 1, obj);\n  //         setHistory(newArr);\n  //         setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  //       }\n  //       return;\n  //     }\n  //   }\n  //   const newArr = [...history];\n  //   newArr.splice(index, 0, obj);\n  //   setHistory(newArr);\n  //   setCurrentIndex(history.length > 0 ? currentIndex : 0);\n  // };\n\n    // const updateCurrent = (updatedObject) => {\n  //   if (history.length === 0) return;\n  //   const updatedArray = [...history];\n  //   updatedArray[currentIndex] = updatedObject;\n  //   setHistory(updatedArray);\n  // };\n\n    // const insertObjectOLD = (object, insertIndex, customIgnoreDuplicates = false, customReplaceDuplicate = undefined) => {\n  //   if (preventDuplicates && !customIgnoreDuplicates) {\n  //     const existingIndex = history.findIndex(e => e[field] === object[field]);\n  //     if (existingIndex !== -1) {\n  //       if (customReplaceDuplicate !== undefined ? customReplaceDuplicate : replaceDuplicate) {\n  //         const newArray = [...history];\n  //         newArray[existingIndex] = object;\n  //         setHistory(newArray);\n  //         setCurrentIndex(existingIndex); // Update current index to reflect the new position\n  //       } else {\n  //         setCurrentIndex(existingIndex); // Update current index to the existing position\n  //       }\n  //       return; // Duplicate object found, do not insert or replace\n  //     }\n  //   }\n\n  //   if (insertIndex !== undefined) {\n  //     insertObjectAtIndex(object, insertIndex);\n  //   } else {\n  //     setHistory([...history, object]);\n  //     setCurrentIndex(history.length);\n  //   }\n  // };\n\n    \n\n  // useEffect(() => {\n  //   if (history.length === 0) {\n  //     setCurrentIndex(0);\n  //     return;\n  //   }\n\n  //   const newIndex = history.findIndex(e => e[field] === id);\n  //   setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n  // }, [history, field, id]);\n\n  // useEffect(() => {\n  //   if (history.length === 0) {\n  //     setCurrentIndex(0);\n  //     return;\n  //   }\n\n  //   const newIndex = history.findIndex(e => e[field] === history[currentIndex][field]);\n  //   // setCurrentIndex(newIndex >= 0 ? newIndex : 0);\n  // }, [history, currentIndex]);\n\n  // console.log(newIndex, 'useEffect [history, field, id]')\n  // console.log(newIndex, 'useEffect [history, field, currentIndex]')","import _ from \"lodash\";\n// const console = {\n//     log: () => null\n// }\n\nconst debug = (...args) => {\n    console.log(\"dynamo transformerrrrr ->\", ...args)\n}\nconst dataTransformer = (data, name, obj) => (local) => {\n    // const { getValues, dataStore } = obj.sharedItems || { getValues: undefined };\n    // const values = { ...dataStore, ...(getValues() || {}) };\n    // console.log(\"dyno ;)\", data, values, 'getValues()()()')\n    //\n\n    const { getValues, dataStore,  index = 1 } = local.sharedItems || { getValues: undefined };\n    const values = { ...dataStore, ...(getValues && getValues() || {}), index, displayIndex: index + 1 };\n\n\n    //Need to check later ;)\n    // if (typeof data === 'function') {\n    //     return data()(values)\n    // }\n\n    if (typeof data === \"string\") {\n\n        //Happy birthday ;)\n        // $$\n        // fx\n        // {{ amount && Valid() }}\n        const ExpRE = /^\\s*\\{\\{([\\s\\S]*)\\}\\}\\s*$/\n        const matched = data.match(ExpRE)\n        if (matched) {\n            console.log(\"dyno ;)\", name, 'me getValues()()()')\n            try {\n                const result = new Function('root', `return root.${matched[1]}`)({\n                    ...values,\n                    local,\n                });\n\n                // const result = new Function('$root', `with($root) { return (${matched[1]}); }`)(\n                //     {\n                //         ...values,\n                //         local\n                //     }\n                // )\n                return result;\n            } catch (error) {\n                console.log(error, '{{ error transformer }}');\n                return data;\n            }\n        }\n        //End fo Happy moment of birthday ;)\n\n\n\n        if (data !== undefined && data.includes(\"$$\")) {\n            console.log(\"dyno ;)\", \"blaherebla\", data, dataStore, _.get(values, data.substring(2)))\n            return _.get(values, data.substring(2));\n        }\n        // check fx first \n        if (data !== undefined && data.includes(\"fx\")) {\n            console.log(\"dyno ;)\", data.slice(2), 'sliceeeeeee')\n            try {\n\n                // const result = eval(`local.${data.slice(2)}`);\n\n                const result = new Function('root', `return root.${data.slice(2)}`)({\n                    ...values,\n                    local,\n                });\n\n                if (typeof result === 'function') {\n                    console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt function')\n                    return result(values);\n                }\n                if (result?.then) {\n                    console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt function.then')\n                    return result.then(function (response) {\n                        console.log(\"dyno ;)\", response, 'rrrrrrrsulttttttttt [2] function.then result')\n                        return response\n                    })\n                }\n                console.log(\"dyno ;)\", result, 'rrrrrrrsulttttttttt [3] function.then lol')\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", name, '----->', error, 'rrrrrrrsulttttttttt errorororrororor')\n            }\n        };\n\n        let patternResult = data;\n\n        // \"hi dxTransform()\"\n        // no {{ 'hi ' && Transform()}}\n        if (data !== undefined && data.includes(\"dx\")) {\n            patternResult = patternResult.replace(/dx.*?\\(.*?\\)/g, (_, name) => {\n\n                try {\n                    console.log(\"dyno ;)\", _, name, 'pattern waaaaaalalala 2nd', patternResult)\n                    const result = eval(`local.${_}`);\n                    if (typeof result === 'function') {\n                        return result(values);\n                    }\n                    return result;\n                } catch (error) {\n                    console.log(\"dyno ;)\", error, 'dxxxxxxxxxxxxdxdxxdxdxx')\n                    return _;\n                }\n            });\n        }\n\n        patternResult = patternResult.replace(/\\$\\{(.*?)\\}/g, (w, name) => {\n\n            const result = _.get(values, name) || ''; //_.get(values, name); values[name]\n            // console.log(\"dyno ;)\", values, 'valuesssssssssssssssssRGEX')\n            // console.log(\"dyno ;)\", name, '------>>>>>>------', result, 'pattern waaaaaalalala only', patternResult)\n\n            return result !== undefined && result//\"\";//field[name];\n        });\n\n        return patternResult;\n\n    };\n\n    return data;\n}\n\nexport { dataTransformer };","import _ from \"lodash\";\n\nconst schemaTransformation = (data, name, obj) => (local) => {\n    const values = { ...obj.sharedItems };\n    if (data === undefined || data === null) return data;\n\n    if (typeof data === \"string\") {\n        // check fx first\n        if (data !== undefined && data.includes(\"fx\")) {\n            try {\n                // const result = eval(data.slice(2));\n                const result = eval(`extraFunctions.${data.slice(2)}`);\n                if (typeof result === \"function\") {\n                    return result(values);\n                }\n                return result;\n            } catch (error) {\n                console.log(\"dyno ;)\", error, \"rrrrrrrsulttttttttt errorororrororor\");\n            }\n        }\n\n        if (data !== \"\") {\n            const result = _.get(values, data.substring(2)) ?? data; // values[data] || data;\n            // if(result!== undefined) return result;\n            return result;\n        }\n    }\n\n    return data;\n};\n\nexport default schemaTransformation;","const flattenHelper = (currentObject, newObject, previousKeyName) => {\n    for (let key in currentObject) {\n        let value = currentObject[key];\n\n        if (value?.constructor !== Object) {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                newObject[key] = value;\n            } else {\n                if (key == null || key == \"\") {\n                    newObject[previousKeyName] = value;\n                } else {\n                    newObject[previousKeyName + \".\" + key] = value;\n                }\n            }\n        } else {\n            if (previousKeyName == null || previousKeyName == \"\") {\n                flattenHelper(value, newObject, key);\n            } else {\n                flattenHelper(value, newObject, previousKeyName + \".\" + key);\n            }\n        }\n    }\n};\n\nconst flattenObject = (oldObject) => {\n    const newObject = {};\n\n    flattenHelper(oldObject, newObject, \"\");\n\n    return newObject;\n};\n\nexport default flattenObject\n","import flattenObject from \"../utils/flattenObject\";\nimport schemaTransformation from \"./schemaTransformer\";\n\nconst schemaProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    if (item === undefined) return {};\n\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            } else {\n                return schemaTransformation(\n                    target[prop],\n                    prop,\n                    target\n                )({\n                    ...extraFunctions\n                });\n            }\n        }\n    };\n\n    const proxySchema = new Proxy(\n        {\n            ...flattenObject({\n                ...item.action.schema\n            }),\n            sharedItems: { ...extraValues, ...item }\n        },\n        proxyHandler\n    );\n    return proxySchema\n}\n\nexport default schemaProxy;\n\n\n","import _ from \"lodash\";\nimport schemaProxy from \"./schemaProxy\";\n\nconst setupProxy = (item, extraValues = {}, extraFunctions = {}) => {\n    const proxyItems = schemaProxy(item, extraValues, extraFunctions);\n\n    let newSchema = {};\n    const y = Object.keys(proxyItems).map((el) => {\n        if (el === \"sharedItems\") return;\n        newSchema = _.set(newSchema, el, proxyItems[el]);\n        console.log(\"dyno ;)\", el, \"flattttttttten\");\n    });\n\n    return _.cloneDeep(newSchema);\n}\n\nexport default setupProxy;\n","function actionsRunner(action, localFunction, item, dataStore) {\n    let resultPromise = Promise.resolve(item);\n\n    for (const functionName in action) {\n        const config = action[functionName];\n        const asyncFunction = localFunction[functionName];\n        resultPromise = resultPromise.then((result) => {\n            console.log(functionName, asyncFunction, 'dyno actionsRunner', result)\n            return asyncFunction(config)(dataStore)(result);\n        });\n    }\n\n    return resultPromise;\n}\n\nexport default actionsRunner;","const defaultValidationResolver = {\n    noteq: async (item, value) => {\n        return (value !== '' && !item.value.includes(value)) || false;\n    },\n    eq: async (item, value) => {\n        return value?.toString() === item.value;\n    },\n    notEmptyAndEqual: async (item, value) => {\n        return (value !== '' && item.value.includes(value)) || false;\n    },\n};\n\nexport {\n    defaultValidationResolver\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\n// import { Subject, AsyncSubject } from 'rxjs'\n// import pubsub from \"./pubsub\";\nimport _ from 'lodash'\n// import { unitDependencies } from 'mathjs'\n// import { getResetValue } from './utils/methods'\n// import { JsonEditor } from 'jsoneditor-react/es'\n// import { namespace } from 'store/dist/store.legacy'\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// const subject = new Subject()\n\n// export const pubsub = {\n//     publish: (name, message) => subject.next(name, message),\n//     clearMessages: () => subject.next(),\n//     getMessage: () => subject.asObservable(),\n// }\n\nconst useStateWithPromise = (initialState) => {\n    const [state, setState] = useState(initialState)\n    const resolverRef = useRef(null)\n\n    useEffect(() => {\n        if (resolverRef.current) {\n            resolverRef.current(state)\n            resolverRef.current = null\n        }\n        /**\n         * Since a state update could be triggered with the exact same state again,\n         * it's not enough to specify state as the only dependency of this useEffect.\n         * That's why resolverRef.current is also a dependency, because it will guarantee,\n         * that handleSetState was called in previous render\n         */\n    }, [resolverRef.current, state])\n\n    const handleSetState = useCallback(\n        (stateAction) => {\n            setState(stateAction)\n            return new Promise((resolve) => {\n                resolverRef.current = resolve\n            })\n        },\n        [setState],\n    )\n\n    return [state, handleSetState]\n}\n\nexport const ControlledComponentsV2 = (props) => {\n    // console.log(\"dyno ;)\", 'current', props.control.current);\n    // if(props.control.current === undefined) return;\n    const [field, setField] = useState(props.control.current && props.control.current[props.name])\n\n    // console.log(\"dyno ;)\", props.name, \"ControlledComponentsV2 renderrrrrrrrrr <1>\", field, props.errors, props?.errors?.current && props?.errors?.current[props.name], props.name)\n    console.log(\"dyno ;)\", \n        props.name,\n        'ControlledComponentsV2 renderrrrrrrrrr <1>',\n        field,\n        props.errors,\n        props.name,\n    )\n\n    const titlellll = props.control.current['textbox-5'].value\n    const error = props.errors && props.errors.current && props.errors?.current[props.name]\n\n    const [fields, setFields] = useState('')\n\n\n\n    const onChange = (value) => {\n        // messageService.sendMessage(`${props.name}`);\n        // pubsub.publish(\"anEvent\", props.name);\n        console.log(\"dyno ;)\", 'valuelavue', value)\n        // const [newValue, error] = props.updateReference(value.target.value, props.name);\n\n        // update(value);\n\n        props.updateReference(value, props.name)\n        setField({ ...field, value: value })\n        // subscription(props)\n    }\n\n    // const subscription = pubsub.getMessage().subscribe((data) => {\n    //     // console.log(\"dyno ;)\", `${props.name}, ControlledTextInput, message was published with this data: \"${data}\"`);\n\n    //     if (props.name === 'textbox-0') {\n    //         setFields(data)\n    //     }\n    // })\n\n    return props.render({ onChange, value: field.value, field, error, index: props.index })\n}\n\nconst IINNOMEMO = (props) => <ControlledComponentsV2 {...props} />\n\nconst IIN = React.memo(\n    (props) => <ControlledComponentsV2 {...props} />,\n    (prevProps, nextProps) => {\n        // if (prevProps === nextProps) {\n        const oldE = (prevProps.errors?.current && prevProps.errors?.current[prevProps.name]) || {}\n        const newE = nextProps.errors?.current[nextProps.name] || {}\n\n        const errror = _.isEqual(oldE, newE)\n        const errrorlol = nextProps.errors?.current[prevProps.name]\n\n        console.log(\"dyno ;)\", \n            prevProps,\n            nextProps,\n            prevProps.name + ' ControlledComponentsV2 renderrrrrrrrrr <2>',\n            errror,\n            'is===',\n            errrorlol,\n            prevProps.name,\n        )\n        // if(!errror) return false;\n        // return errror;\n        // return errror;\n        if (JSON.stringify(nextProps) === JSON.stringify(prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\n\nconst createValidationObject = (item) => {\n\n\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n                        // child && child;\n                        // const { useFieldArray } = useFormContext()\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\nconst SimpleRender = props => renderForm({ ...props });\nconst MemoRenderForm = props => SimpleRender(props) //React.memo(renderForm, (prev, next)=>{\n// console.log(\"dyno ;)\", prev,next,\"memoRenderForm\");\n// })\n\n\n\nconst RenderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    control,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    if (data === undefined) return null;\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = RenderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    control,\n                    setValue\n                )\n            }\n            // if (!item.visible) return null\n\n\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={name}\n                    name={name}\n                    control={control}\n                    item={item}\n                    // defaultValue={\"hi5\"}\n                    // { required: true, minLength: 5 }\n                    rules={item.rule || {}}\n                    render={({ field }) => {\n                        // const myCondition = item.preCondition && useWatch({\n                        //     control,\n                        //     name: item.preCondition[0].name, // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     defaultValue: undefined // default value before the render\n                        // });\n                        // console.log(\"dyno ;)\", item.name, myCondition, \"myConditionssss\")\n                        // if (!item.visible && myCondition !== \"13333\") return null\n\n                        // if (item.name === \"textbox-0\") {\n                        //     const { fields, append, remove } = useFieldArray({\n                        //         control,\n                        //         name: \"textbox-0.test\"\n                        //     });\n\n                        //     // const myaCondition = useWatch({\n                        //     //     control,\n                        //     //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                        //     //     defaultValue: undefined // default value before the render\n                        //     // });\n                        //     // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                        //     return (\n                        //         <>\n                        //             {/* <>\n                        //                 {`${item.name}`}\n                        //                 <br />\n                        //                 <input {...field} />\n                        //                 {errors && errors[item.name] && `${item.name} errororrr`}\n                        //                 {child && child}\n                        //                 <br />\n                        //                 <br />\n                        //                 <br />\n                        //             </> */}\n                        //             <ul>\n                        //                 {fields.map((el, index) => (\n                        //                     <li key={el.id}>\n                        //                         <input {...control.register(`textbox-0.test.${index}.firstName`)} />\n                        //                         {<Controller\n                        //                             render={({ field }) => <input {...field} />}\n                        //                             name={`textbox-0.test.${index}.lastName`}\n                        //                             control={control}\n                        //                         />}\n                        //                         <button type=\"button\" onClick={() => remove(index)}>Delete</button>\n                        //                     </li>\n                        //                 ))}\n                        //             </ul>\n                        //             {JSON.stringify(getValue(\"textbox-3\"))}\n                        //             <button type=\"button\" onClick={() => {\n                        //                 control.unregister(\"textbox-10\")\n                        //                 console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                        //             }}> unregister 10 now ;) </button>\n\n                        //             <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button>\n                        //             <button\n                        //                 type=\"button\"\n                        //                 onClick={() => append({ firstName: \"bill\", lastName: \"luo\" })}\n                        //             >\n                        //                 append\n                        //             </button>\n                        //         </>\n                        //     )\n                        // }\n                        // return (\n                        //     <>\n                        //         {`${item.name}   ${name}`}\n                        //         <br />\n                        //         <input {...field} />\n                        //         {errors && errors[name] && `${name} errororrr`}\n\n                        //         {/* {errors && errors[item.name] && `${item.name} errororrr`} */}\n                        //         {child && child}\n                        //         <br />\n                        //         <br />\n                        //         <br />\n                        //     </>\n                        // )\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback\n                        })\n                        // console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', field.name)\n                        return Component\n                    }}\n\n                />\n                // <ControlledComponents\n                //     managedCallback={managedCallback}\n                //     updateReference={updateReference}\n                //     // key={item.name}\n                //     name={name}\n                //     control={myControl}\n                //     errors={errors}\n                //     formName={'formName'}\n                //     index={index}\n                //     child={child}\n                //     render={({ onUpdate, value, fields, field, error, index, child, managedCallback }) => {\n                //         const Component = components(item.type, {\n                //             onUpdate,\n                //             value,\n                //             fields,\n                //             field,\n                //             error,\n                //             child,\n                //             errors,\n                //             item,\n                //             index,\n                //             managedCallback\n                //         })\n                //         console.log(\"dyno ;)\", Component, 'ControlledComponentsV2 renderrrrrrrrrr <3>', error, field.name)\n                //         // return Component\n                //         // return (\n                //         //     <Component\n                //         //         {...{ onUpdate, value, fields, field, error, child, errors, item, index }}\n                //         //     />\n                //         // )\n\n                //         return <>\n                //             <br />\n                //             <div style={{ backgroundColor: child.length > 0 && \"blanchedalmond\" || \"whitesmoke\", padding: 11 }}>\n                //                 <Input onChange={(e) => onUpdate(e.target.value)} defaultValue={value} value={value} />------{fields && fields.value}\n                //                 {field.name}\n                //                 {error && error.error && \"Hiiiii i am here\" || \"no way ;)\"}\n                //             </div>\n                //             {child.length > 0 && <div style={{ backgroundColor: \"blanchedalmond\", padding: 11 }}>\n                //                 child ;)\n                //                 {child && child}\n                //             </div>}\n                //         </>\n                //     }}\n                // />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\nconst InRenderform = React.memo(props => RenderForm(props),\n    (prevProps, nextProps) => {\n        if (!deepEqual(nextProps, prevProps)) {\n            return true // props are equal\n        }\n        return false // props are not equal -> update the component\n    },\n)\nInRenderform.displayName = \"RenderForm\"\nInRenderform.whyDidYouRender = true\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].refId, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\n// const convertArrayToObject = (array, key) => {\n//     const initialValue = {};\n//     return array.reduce((obj, item) => {\n//         return {\n//             ...obj,\n//             [item[key]]: item,\n//         };\n//     }, initialValue);\n// };\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderV1 = React.forwardRef(({ items,\n    validationResolver = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground\n    } = useForm({\n        mode: 'onChange',\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    setData([...b])\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n\n            }\n        });\n\n        setData(items)\n    }, items)\n\n    // const watchingList = watch(\"textbox-2\");\n\n    // const watchingList = useWatch({\n    //     control,\n    //     name: \"textbox-2\", // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n    //     // defaultValue: 'default' // default value before the render\n    //   });\n    // const watchingList = \"\"//watchingComponents.current && watch([...watchingComponents.current.keys()]);\n    // const watchingList = watchingComponents.current && watch([...watchingComponents.current.keys()]);\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, [...data])\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, result)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData([...preResult])\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        let n = [...result]\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                    // myComponents.current[item.name].visible = touched;\n                    n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                    updated = true\n                    console.log(\"dyno ;)\", \n                        'hashas',\n                        await _.get({ a: n }, `a${item.refId}.visible`),\n                        await touched,\n                        hasCondition,\n                        updated,\n                    )\n                }\n\n                // }\n            })\n        }\n        return [updated, [...n]]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderV1.whyDidYouRender = true\nFormBuilderV1.displayName = \"FormBuilderV1\"\n\nexport default FormBuilderV1\n","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\n// import {\n//     useWatch\n// } from \"../useWatch\"\n// import {\n//     useFieldArray\n// } from \"../useFieldArray\"\n// import {\n//     FormProvider,\n//     useFormContext\n// } from \"../useFormContext\"\n// import {\n//     useForm\n// } from \"../useForm\"\n// import {\n//     Controller\n// } from \"../Controller\"\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useForm\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\n\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined\n}\n) => {\n\n    const selectedComponent = {...data[name], givenName };\n    //Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n    if (selectedComponent === undefined) return null;\n    // debugger;\n    if (selectedComponent?.visible === false) return null\n    return renderComponentForm(\n        selectedComponent,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name,idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n   \n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={item}\n            rules={item.rule || validation}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name,item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name\n                    });\n\n                    child =\n                        <>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`,'`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, data, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems,\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </>\n                }\n\n                const Component = components(item.type, {\n                    field,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    shouldUnregister = true,\n    defaultValues = {} }, ref) => {\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        unregister\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        // criteriaMode: 'all',\n        // criteriaMode: \"firstError\",\n        defaultValues: defaultValues\n    })\n\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        unregister\n    }\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n        \n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n        \n        const subscription = watch(async (value, { name, type }) => {\n            // const [a, b] = await checkPreCondition(name, value[name], items);\n            // setData({ ...b });\n            // console.log(\"dyno ;)\", \"watchhhhhhh\", name, value)\n// return;\n            if (watchingComponents.current.get(name)) {\n                // if(!Array.isArray(data)) return;\n                console.log(\"dyno ;)\", \"checkPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                const [a, b] = await checkPreCondition(name, value[name], items);\n                if (!deepEqual(data, b) && a) {\n                    // setData([...b]);\n                    setData({ ...b });\n                    // preConditionItems.current = [...b];\n                    return;\n                }\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesPOC = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    ref.current = {\n        getValues: getValuesPOC,\n        resetValues: resetValues,\n        setValue: setValue\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\", \n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and dont itterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = {...result}\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"],\"accountNoaccountNo\",'-----',i)\n                if(i !== undefined && i.visible !== touched ){\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n","import { EVENTS, VALIDATION_MODE } from '../constants';\nimport { set } from '../utils';\nimport compact from '../utils/compact';\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\nimport debounce from '../utils/debounce';\nimport deepEqual from '../utils/deepEqual';\nimport get from '../utils/get';\nimport getValidationModes from '../utils/getValidationModes';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDateObject from '../utils/isDateObject';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isFileInput from '../utils/isFileInput';\nimport isFunction from '../utils/isFunction';\nimport isHTMLElement from '../utils/isHTMLElement';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\nimport isString from '../utils/isString';\nimport isUndefined from '../utils/isUndefined';\nimport isWeb from '../utils/isWeb';\nimport omit from '../utils/omit';\nimport omitKey from '../utils/omitKeys';\nimport Subject from '../utils/Subject';\nimport unset from '../utils/unset';\nimport focusFieldBy from './focusFieldBy';\nimport getFieldValue from './getFieldValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport getNodeParentName from './getNodeParentName';\nimport getResolverOptions from './getResolverOptions';\nimport hasValidation from './hasValidation';\nimport isNameInFieldArray from './isNameInFieldArray';\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\nimport skipValidation from './skipValidation';\nimport unsetEmptyArray from './unsetEmptyArray';\nimport validateField from './validateField';\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nconst isWindowUndefined = typeof window === 'undefined';\nexport function createFormControlV4(props = {}) {\n    let formOptions = Object.assign(Object.assign({}, defaultOptions), props);\n    console.log(\"dyno ;)\", formOptions, 'formOptions')\n    let _delayCallback;\n    let _formState = {\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    };\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _fields = {};\n    let _formValues = {};\n    let _defaultValues = formOptions.defaultValues || {};\n    let _isInAction = false;\n    let _isMounted = false;\n    const _subjects = {\n        watch: new Subject(),\n        control: new Subject(),\n        array: new Subject(),\n        state: new Subject(),\n    };\n    let _names = {\n        mount: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n        watchAll: false,\n    };\n    const validationMode = getValidationModes(formOptions.mode);\n    const isValidateAllFieldCriteria = formOptions.criteriaMode === VALIDATION_MODE.all;\n    const isFieldWatched = (name) => _names.watchAll ||\n        _names.watch.has(name) ||\n        _names.watch.has((name.match(/\\w+/) || [])[0]);\n    const updateErrorState = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const shouldRenderBaseOnValid = async () => {\n        const isValid = await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const shouldRenderBaseOnError = async (shouldSkipRender, name, error, fieldState, isValidFromResolver, isWatched) => {\n        const previousError = get(_formState.errors, name);\n        const isValid = !!(_proxyFormState.isValid &&\n            (formOptions.resolver ? isValidFromResolver : shouldRenderBaseOnValid()));\n        if (props.delayError && error) {\n            _delayCallback =\n                _delayCallback || debounce(updateErrorState, props.delayError);\n            _delayCallback(name, error);\n        }\n        else {\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((isWatched ||\n            (error ? !deepEqual(previousError, error) : previousError) ||\n            !isEmptyObject(fieldState) ||\n            _formState.isValid !== isValid) &&\n            !shouldSkipRender) {\n            const updatedFormState = Object.assign(Object.assign(Object.assign({}, fieldState), (_proxyFormState.isValid && formOptions.resolver ? { isValid } : {})), { errors: _formState.errors, name });\n            _formState = Object.assign(Object.assign({}, _formState), updatedFormState);\n            //everywhere has isWatched ;)\n            _subjects.state.next(isWatched ? { name } : updatedFormState);\n        }\n        _subjects.state.next({\n            isValidating: false,\n        });\n    };\n    const setFieldValue = (name, value, options = {}, shouldRender) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"setValuesetValue\", field, field._f.ref.visible, value,_formValues)\n        if (field) {\n            const _f = field._f;\n            if (_f) {\n                // if(!field._f.ref.visible) return;\n                set(_formValues, name, getFieldValueAs(value, _f));\n                const fieldValue = isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\n                    ? ''\n                    : value;\n                if (isFileInput(_f.ref) && !isString(fieldValue)) {\n                    _f.ref.files = fieldValue;\n                }\n                else if (isMultipleSelect(_f.ref)) {\n                    [..._f.ref.options].forEach((selectRef) => (selectRef.selected = fieldValue.includes(selectRef.value)));\n                }\n                else if (_f.refs) {\n                    if (isCheckBoxInput(_f.ref)) {\n                        _f.refs.length > 1\n                            ? _f.refs.forEach((checkboxRef) => (checkboxRef.checked = Array.isArray(fieldValue)\n                                ? !!fieldValue.find((data) => data === checkboxRef.value)\n                                : fieldValue === checkboxRef.value))\n                            : (_f.refs[0].checked = !!fieldValue);\n                    }\n                    else {\n                        _f.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else {\n                    _f.ref.value = fieldValue;\n                }\n                if (shouldRender) {\n                    _subjects.control.next({\n                        values: getValues(),\n                        name,\n                    });\n                }\n                (options.shouldDirty || options.shouldTouch) &&\n                    updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\n                options.shouldValidate && trigger(name);\n            }\n        }\n    };\n    const updateTouchAndDirtyState = (name, inputValue, isCurrentTouched, shouldRender = true) => {\n        const state = {\n            name,\n        };\n        let isChanged = false;\n        if (_proxyFormState.isDirty) {\n            const previousIsDirty = _formState.isDirty;\n            _formState.isDirty = _getIsDirty();\n            state.isDirty = _formState.isDirty;\n            isChanged = previousIsDirty !== state.isDirty;\n        }\n        if (_proxyFormState.dirtyFields && !isCurrentTouched) {\n            const isPreviousFieldDirty = get(_formState.dirtyFields, name);\n            const isCurrentFieldDirty = !deepEqual(get(_defaultValues, name), inputValue);\n            isCurrentFieldDirty\n                ? set(_formState.dirtyFields, name, true)\n                : unset(_formState.dirtyFields, name);\n            state.dirtyFields = _formState.dirtyFields;\n            isChanged =\n                isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\n        }\n        const isPreviousFieldTouched = get(_formState.touchedFields, name);\n        if (isCurrentTouched && !isPreviousFieldTouched) {\n            set(_formState.touchedFields, name, isCurrentTouched);\n            state.touchedFields = _formState.touchedFields;\n            isChanged =\n                isChanged ||\n                (_proxyFormState.touchedFields &&\n                    isPreviousFieldTouched !== isCurrentTouched);\n        }\n        isChanged && shouldRender && _subjects.state.next(state);\n        return isChanged ? state : {};\n    };\n    const executeResolver = async (name) => {\n        return formOptions.resolver\n            ? await formOptions.resolver(Object.assign({}, _formValues), formOptions.context, getResolverOptions(name || _names.mount, _fields, formOptions.criteriaMode, formOptions.shouldUseNativeValidation))\n            : {};\n    };\n    const executeResolverValidation = async (names) => {\n        const { errors } = await executeResolver();\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const validateForm = async (_fields, shouldCheckValid, context = {\n        valid: true,\n        triggerAll: true\n    }, formId = \"ALL\") => {\n        // console.log(\"SUBMITFORM here\", _fields, context)\n        for (const name in _fields) {\n            const field = _fields[name];\n            // console.log(field, 'iamfromherein-validation-lol-edward-log-;)---validateForm')\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    // console.log(_f,'formidddddd')\n                    if (_f.formId === formId || formId === \"ALL\") {\n                        const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // console.log(fieldError, \"fieldError\")\n                        if (shouldCheckValid) {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                                break;\n                            }\n                        }\n                        else {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                            }\n                            fieldError[_f.name]\n                                ? set(_formState.errors, _f.name, fieldError[_f.name])\n                                : unset(_formState.errors, _f.name);\n                            //Added to stop at first error\n                            //TODO: enhance as parameter \n                            //Done\n                            if (context.triggerAll === false && Object.keys(_formState.errors).length == 1) break;\n                        }\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const validateFormBackground = async (_fields, shouldCheckValid, context = {\n        valid: true,\n    }, formId = \"ALL\") => {\n        // console.log(\"SUBMITFORM here\", formId)\n        let localErrors = {};\n        for (const name in _fields) {\n            const field = _fields[name];\n            // console.log(field, 'iamfromherein-validation-lol-edward-log-;)---validateForm')\n            if (field) {\n                const _f = field._f;\n                const val = omit(field, '_f');\n                // && field._f.ref.formId === \"ALL\"\n                if (_f) {\n                    //To do for formId ;)\n                    // console.log(_f,'formidddddd')\n                    if (_f.formId === formId || formId === \"ALL\") {\n                        const fieldError = await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // const fieldError = field._f.ref.formId === \"ALL\" &&  await validateField(field, get(_formValues, _f.name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation);\n                        // console.log(fieldError, \"fieldError\")\n                        if (shouldCheckValid) {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                                break;\n                            }\n                        }\n                        else {\n                            if (fieldError[_f.name]) {\n                                context.valid = false;\n                            }\n                            fieldError[_f.name]\n                                ? set(localErrors, _f.name, fieldError[_f.name])\n                                : unset(localErrors, _f.name);\n                            //Added to stop at first error\n                            //TODO: enhance as parameter \n                            // if (Object.keys(_formState.errors).length == 1) break;\n                        }\n                    }\n                }\n                val && (await validateForm(val, shouldCheckValid, context));\n            }\n        }\n        return localErrors;\n    };\n    const handleChange = async ({ type, target, target: { value, name, type: inputType }, }) => {\n        let error;\n        let isValid;\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", field, \"field from library Yasser ;) Thanks Allah :):)\");\n        if (field) {\n            let inputValue = inputType ? getFieldValue(field) : undefined;\n            inputValue = isUndefined(inputValue) ? value : inputValue;\n            // console.log(\"dyno ;)\", inputValue, \"field from library Yasser ;) inputValue :)\");\n            const isBlurEvent = type === EVENTS.BLUR;\n            const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } = getValidationModes(formOptions.reValidateMode);\n            const shouldSkipValidation = (!hasValidation(field._f, field._f.mount) &&\n                !formOptions.resolver &&\n                !get(_formState.errors, name)) ||\n                skipValidation(Object.assign({\n                    isBlurEvent, isTouched: !!get(_formState.touchedFields, name), isSubmitted: _formState.isSubmitted, isReValidateOnBlur,\n                    isReValidateOnChange\n                }, validationMode));\n            const isWatched = !isBlurEvent && isFieldWatched(name);\n            if (!isUndefined(inputValue)) {\n                set(_formValues, name, inputValue);\n            }\n            const fieldState = updateTouchAndDirtyState(name, inputValue, isBlurEvent, false);\n            const shouldRender = field._f.watch || !isEmptyObject(fieldState) || isWatched;\n            // const shouldRender = !isEmptyObject(fieldState) || isWatched;\n            console.log(\"dyno ;)\", shouldRender, `heyyyyyyyyyyy { ${name} } watch me or not?!`, field._f.watch, \"shouldSkipValidation:\", shouldSkipValidation, \"isBlurEvent:\", isBlurEvent, '------;)---- is watching hahaha:', isWatched)\n            if (shouldSkipValidation) {\n                !isBlurEvent &&\n                    _subjects.watch.next({\n                        name,\n                        type,\n                    });\n                return (shouldRender &&\n                    _subjects.state.next(isWatched ? { name } : Object.assign(Object.assign({}, fieldState), { name })));\n            }\n            _subjects.state.next({\n                isValidating: true,\n            });\n            if (formOptions.resolver) {\n                const { errors } = await executeResolver([name]);\n                error = get(errors, name);\n                if (isCheckBoxInput(target) && !error) {\n                    const parentNodeName = getNodeParentName(name);\n                    const valError = get(errors, parentNodeName, {});\n                    valError.type && valError.message && (error = valError);\n                    if (valError || get(_formState.errors, parentNodeName)) {\n                        name = parentNodeName;\n                    }\n                }\n                isValid = isEmptyObject(errors);\n            }\n            else {\n                // console.log(field, 'edwardyasser')\n                error = (await validateField(field, get(_formValues, name), isValidateAllFieldCriteria, formOptions.shouldUseNativeValidation))[name];\n            }\n            !isBlurEvent &&\n                _subjects.watch.next({\n                    name,\n                    type,\n                    values: getValues(),\n                });\n            shouldRenderBaseOnError(false, name, error, fieldState, isValid, isWatched);\n        }\n    };\n    const _updateValidAndInputValue = (name, ref, shouldSkipValueAs) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", name,ref, '_updateValidAndInputValue')\n        if (field) {\n            const fieldValue = get(_formValues, name);\n            const isValueUndefined = isUndefined(fieldValue);\n            const defaultValue = isValueUndefined\n                ? get(_defaultValues, name)\n                : fieldValue;\n            if (isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipValueAs) {\n                ref && ref.visible && //todo ;)\n                    set(_formValues, name, shouldSkipValueAs ? defaultValue : getFieldValue(field));\n            }\n            else {\n                setFieldValue(name, defaultValue);\n            }\n        }\n        _isMounted && _proxyFormState.isValid && _updateValid();\n    };\n    const _getIsDirty = (name, data) => {\n        name && data && set(_formValues, name, data);\n        return !deepEqual(Object.assign({}, getValues()), _defaultValues);\n    };\n    const _updateValid = async () => {\n        const isValid = formOptions.resolver\n            ? isEmptyObject((await executeResolver()).errors)\n            : await validateForm(_fields, true);\n        if (isValid !== _formState.isValid) {\n            _formState.isValid = isValid;\n            _subjects.state.next({\n                isValid,\n            });\n        }\n    };\n    const setValues = (name, value, options) => Object.entries(value).forEach(([fieldKey, fieldValue]) => {\n        const fieldName = `${name}.${fieldKey}`;\n        const field = get(_fields, fieldName);\n        const isFieldArray = _names.array.has(name);\n        (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\n            !isDateObject(fieldValue)\n            ? setValues(fieldName, fieldValue, options)\n            : setFieldValue(fieldName, fieldValue, options, true);\n    });\n    const _getWatch = (fieldNames, defaultValue, isGlobal) => {\n        const fieldValues = Object.assign({}, (_isMounted\n            ? Object.assign({}, Object.assign(Object.assign({}, _defaultValues), _formValues)) : isUndefined(defaultValue)\n                ? _defaultValues\n                : defaultValue));\n        if (!fieldNames) {\n            isGlobal && (_names.watchAll = true);\n            return fieldValues;\n        }\n        const resultChanges = [];\n        const result = new Map();\n        for (const fieldName of convertToArrayPayload(fieldNames)) {\n            isGlobal && _names.watch.add(fieldName);\n            resultChanges.push(get(fieldValues, fieldName));\n            result.set(fieldName, get(fieldValues, fieldName));\n        }\n        return Array.isArray(fieldNames)\n            ? [resultChanges, result]\n            : isObject(result[0])\n                ? Object.assign({}, result[0]) : Array.isArray(result[0])\n                    ? [...result[0]]\n                    : result[0];\n    };\n    const _updateFormValues = (defaultValues, name = '') => {\n        console.log(\"dyno ;)\", defaultValues, \"_updateFormValues\")\n        for (const key in defaultValues) {\n            const value = defaultValues[key];\n            const fieldName = name + (name ? '.' : '') + key;\n            const field = get(_fields, fieldName);\n            if (!field || !field._f) {\n                if (isObject(value) || Array.isArray(value)) {\n                    _updateFormValues(value, fieldName);\n                }\n                else if (!field) {\n                    set(_formValues, fieldName, value);\n                }\n            }\n        }\n    };\n    const _bathFieldArrayUpdate = (keyName, name, method, args, updatedFieldArrayValues = [], shouldSet = true, shouldSetFields = true) => {\n        _isInAction = true;\n        if (shouldSetFields && get(_fields, name)) {\n            const output = method(get(_fields, name), args.argA, args.argB);\n            shouldSet && set(_fields, name, output);\n        }\n        set(_formValues, name, updatedFieldArrayValues);\n        if (Array.isArray(get(_formState.errors, name))) {\n            const output = method(get(_formState.errors, name), args.argA, args.argB);\n            shouldSet && set(_formState.errors, name, output);\n            unsetEmptyArray(_formState.errors, name);\n        }\n        if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\n            const output = method(get(_formState.touchedFields, name), args.argA, args.argB);\n            shouldSet && set(_formState.touchedFields, name, output);\n            unsetEmptyArray(_formState.touchedFields, name);\n        }\n        if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\n            set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            updatedFieldArrayValues &&\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(omitKey(updatedFieldArrayValues, keyName), get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n            unsetEmptyArray(_formState.dirtyFields, name);\n        }\n        _subjects.state.next({\n            isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\n            dirtyFields: _formState.dirtyFields,\n            errors: _formState.errors,\n            isValid: _formState.isValid,\n        });\n    };\n    const _getFieldArrayValue = (name) => get(_isMounted ? _formValues : _defaultValues, name, []);\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        set(_formValues, name, value);\n        if (isFieldArray) {\n            _subjects.array.next({\n                values: value,\n                name,\n                isReset: true,\n            });\n            if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\n                options.shouldDirty) {\n                set(_formState.dirtyFields, name, setFieldArrayDirtyFields(value, get(_defaultValues, name, []), get(_formState.dirtyFields, name, [])));\n                _subjects.state.next({\n                    name,\n                    dirtyFields: _formState.dirtyFields,\n                    isDirty: _getIsDirty(name, value),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(value)\n                ? setValues(name, value, options)\n                : setFieldValue(name, value, options, true);\n        }\n        isFieldWatched(name) && _subjects.state.next({});\n        _subjects.watch.next({\n            name,\n        });\n    };\n    const trigger = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields);\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerCustom = async (options = { triggerAll: false }, name) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        _subjects.state.next({\n            isValidating: true,\n        });\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                await validateForm(_fields, false, { triggerAll: options.triggerAll });\n                isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        return isValid;\n    };\n    const triggerBackground = async (name, options = {}) => {\n        const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"trigger\", _formState.errors);\n        if (formOptions.resolver) {\n            const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            isValid = name\n                ? fieldNames.every((name) => !get(schemaResult, name))\n                : isEmptyObject(schemaResult);\n        }\n        else {\n            if (name) {\n                isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n                    const field = get(_fields, fieldName);\n                    // console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n                    return await validateForm(field._f ? { [fieldName]: field } : field);\n                }))).every(Boolean);\n            }\n            else {\n                isValid = await validateForm(_fields, true);\n                // isValid = isEmptyObject(_formState.errors);\n            }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        if (options.shouldFocus && !isValid) {\n            focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const triggerBackgroundOptimised = (formId = \"ALL\") => async (list = false) => {\n        // const fieldNames = convertToArrayPayload(name);\n        let isValid;\n        // _subjects.state.next({\n        //     isValidating: true,\n        // });\n        console.log(\"dyno ;)\", \"triggerBackgroundtriggerBackground\", _formState.errors);\n        if (formOptions.resolver) {\n            // const schemaResult = await executeResolverValidation(isUndefined(name) ? name : fieldNames);\n            const schemaResult = await executeResolverValidation(fieldNames);\n            isValid =\n                // name\n                // ? fieldNames.every((name) => !get(schemaResult, name))\n                // :\n                isEmptyObject(schemaResult);\n        }\n        else {\n            // if (name) {\n            //     isValid = (await Promise.all(fieldNames.map(async (fieldName) => {\n            //         const field = get(_fields, fieldName);\n            //         console.log(field, 'iamfromherein-validation-lol-edward-log-;)')\n            //         return await validateForm(field._f ? { [fieldName]: field } : field);\n            //     }))).every(Boolean);\n            // }\n            // else {\n            if (list) {\n                isValid = await validateFormBackground(_fields, false, {\n                    valid: true,\n                });\n            } else {\n                isValid = await validateForm(_fields, true, {\n                    valid: true,\n                }, formId);\n            }\n\n            // isValid = isEmptyObject(_formState.errors);\n            // }\n        }\n        // _subjects.state.next(Object.assign(Object.assign({}, (isString(name) ? { name } : {})), { errors: _formState.errors, isValidating: false }));\n        // if (options.shouldFocus && !isValid) {\n        //     // focusFieldBy(_fields, (key) => get(_formState.errors, key), name ? fieldNames : _names.mount);\n        // }\n        _proxyFormState.isValid && _updateValid();\n        // console.log(\"trigger99999999\", _formState.errors, \"end\", isValid);\n        return isValid;\n    };\n    const getValues = (fieldNames) => {\n        // console.log(_formValues, _fields, \"getValuesgetValues\")\n        const values = Object.assign(Object.assign({}, _defaultValues), _formValues);\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const clearErrors = (name) => {\n        name\n            ? convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName))\n            : (_formState.errors = {});\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        set(_formState.errors, name, Object.assign(Object.assign({}, error), { ref }));\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (fieldName, defaultValue) => isFunction(fieldName)\n        ? _subjects.watch.subscribe({\n            next: (info) => fieldName(_getWatch(undefined, defaultValue), info),\n        })\n        : _getWatch(fieldName, defaultValue, true);\n    const unregister = (name, options = {}) => {\n        for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(inputName);\n            _names.array.delete(inputName);\n            if (get(_fields, inputName)) {\n                if (!options.keepValue) {\n                    unset(_fields, inputName);\n                    unset(_formValues, inputName);\n                }\n                !options.keepError && unset(_formState.errors, inputName);\n                !options.keepDirty && unset(_formState.dirtyFields, inputName);\n                !options.keepTouched && unset(_formState.touchedFields, inputName);\n                !formOptions.shouldUnregister &&\n                    !options.keepDefaultValue &&\n                    unset(_defaultValues, inputName);\n            }\n        }\n        _subjects.watch.next({});\n        _subjects.state.next(Object.assign(Object.assign({}, _formState), (!options.keepDirty ? {} : { isDirty: _getIsDirty() })));\n        !options.keepIsValid && _updateValid();\n    };\n    const registerFieldRef = (name, fieldRef, options) => {\n        register(name, options);\n        let field = get(_fields, name);\n        const ref = isUndefined(fieldRef.value)\n            ? fieldRef.querySelectorAll\n                ? fieldRef.querySelectorAll('input,select,textarea')[0] ||\n                fieldRef\n                : fieldRef\n            : fieldRef;\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n        if (ref === field._f.ref ||\n            (isRadioOrCheckbox &&\n                compact(field._f.refs || []).find((option) => option === ref))) {\n            return;\n        }\n        field = {\n            _f: isRadioOrCheckbox\n                ? Object.assign(Object.assign({}, field._f), {\n                    refs: [\n                        ...compact(field._f.refs || []).filter((ref) => isHTMLElement(ref) && document.contains(ref)),\n                        ref,\n                    ], ref: { type: ref.type, name }\n                }) : Object.assign(Object.assign({}, field._f), { ref }),\n        };\n        set(_fields, name, field);\n        _updateValidAndInputValue(name, ref);\n    };\n    const register = (name, options = {}) => {\n        const field = get(_fields, name);\n        // console.log(\"dyno ;)\", \"registerRegister\", field, name, _fields)\n        set(_fields, name, {\n            _f: Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options),\n        });\n        console.log(\"dyno ;)\", Object.assign(Object.assign(Object.assign({}, (field && field._f ? field._f : { ref: { name } })), { name, mount: true }), options), \"registerRegister after\", field, name, _fields)\n        if (options.value) {\n            set(_formValues, name, options.value);\n        }\n        if (!isUndefined(options.disabled) &&\n            field &&\n            field._f &&\n            field._f.ref.disabled !== options.disabled) {\n            set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\n        }\n        _names.mount.add(name);\n        !field && _updateValidAndInputValue(name, undefined, true);\n        return isWindowUndefined\n            ? { name: name }\n            : Object.assign(Object.assign({ name }, (isUndefined(options.disabled)\n                ? {}\n                : { disabled: options.disabled })), {\n                onChange: handleChange, onBlur: handleChange, ref: (ref) => {\n                    if (ref) {\n                        registerFieldRef(name, ref, options);\n                    }\n                    else {\n                        const field = get(_fields, name, {});\n                        const _shouldUnregister = formOptions.shouldUnregister || options.shouldUnregister;\n                        if (field._f) {\n                            field._f.mount = false;\n                        }\n                        _shouldUnregister &&\n                            !(isNameInFieldArray(_names.array, name) && _isInAction) &&\n                            _names.unMount.add(name);\n                    }\n                }\n            });\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist && e.persist();\n        }\n        let hasNoPromiseError = true;\n        let fieldValues = Object.assign({}, _formValues);\n        // console.log(\"dyno ;)\", _formValues,\"_formValues\")\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        try {\n            if (formOptions.resolver) {\n                const { errors, values } = await executeResolver();\n                _formState.errors = errors;\n                fieldValues = values;\n            }\n            else {\n                await validateForm(_fields);\n            }\n            if (isEmptyObject(_formState.errors) &&\n                Object.keys(_formState.errors).every((name) => get(fieldValues, name))) {\n                _subjects.state.next({\n                    errors: {},\n                    isSubmitting: true,\n                });\n                await onValid(fieldValues, e);\n            }\n            else {\n                onInvalid && (await onInvalid(_formState.errors, e));\n                formOptions.shouldFocusError &&\n                    focusFieldBy(_fields, (key) => get(_formState.errors, key), _names.mount);\n            }\n        }\n        catch (err) {\n            hasNoPromiseError = false;\n            throw err;\n        }\n        finally {\n            _formState.isSubmitted = true;\n            _subjects.state.next({\n                isSubmitted: true,\n                isSubmitting: false,\n                isSubmitSuccessful: isEmptyObject(_formState.errors) && hasNoPromiseError,\n                submitCount: _formState.submitCount + 1,\n                errors: _formState.errors,\n            });\n        }\n    };\n    const reset = (values, keepStateOptions = {}) => {\n        const updatedValues = values || _defaultValues;\n        if (isWeb && !keepStateOptions.keepValues) {\n            for (const name of _names.mount) {\n                const field = get(_fields, name);\n                if (field && field._f) {\n                    const inputRef = Array.isArray(field._f.refs)\n                        ? field._f.refs[0]\n                        : field._f.ref;\n                    try {\n                        isHTMLElement(inputRef) && inputRef.closest('form').reset();\n                        break;\n                    }\n                    catch (_a) { }\n                }\n            }\n        }\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = Object.assign({}, updatedValues);\n            _formValues = Object.assign({}, updatedValues);\n        }\n        if (!keepStateOptions.keepValues) {\n            _fields = {};\n            _formValues = {};\n            _subjects.control.next({\n                values: keepStateOptions.keepDefaultValues\n                    ? _defaultValues\n                    : Object.assign({}, updatedValues),\n            });\n            _subjects.watch.next({});\n            _subjects.array.next({\n                values: Object.assign({}, updatedValues),\n                isReset: true,\n            });\n        }\n        _names = {\n            mount: new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            watch: new Set(),\n            watchAll: false,\n        };\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: keepStateOptions.keepDirty\n                ? _formState.isDirty\n                : keepStateOptions.keepDefaultValues\n                    ? deepEqual(values, _defaultValues)\n                    : false,\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitting: false,\n            isSubmitSuccessful: false,\n        });\n        _isMounted = !!keepStateOptions.keepIsValid;\n    };\n    const setFocus = (name) => get(_fields, name)._f.ref.focus();\n    return {\n        control: {\n            register,\n            unregister,\n            _getIsDirty,\n            _getWatch,\n            _updateValid,\n            _updateFormValues,\n            _bathFieldArrayUpdate,\n            _getFieldArrayValue,\n            _subjects,\n            _shouldUnregister: formOptions.shouldUnregister,\n            _fields,\n            _proxyFormState,\n            get _formValues() {\n                return _formValues;\n            },\n            set _formValues(value) {\n                _formValues = value;\n            },\n            get _isMounted() {\n                return _isMounted;\n            },\n            set _isMounted(value) {\n                _isMounted = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            set _defaultValues(value) {\n                _defaultValues = value;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            _isInAction: {\n                get val() {\n                    return _isInAction;\n                },\n                set val(value) {\n                    _isInAction = value;\n                },\n            },\n            _formState: {\n                get val() {\n                    return _formState;\n                },\n                set val(value) {\n                    _formState = value;\n                },\n            },\n            _updateProps: (options) => {\n                formOptions = Object.assign(Object.assign({}, defaultOptions), options);\n            },\n        },\n        trigger,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        triggerCustom,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n    };\n}\n","import * as React from 'react';\nimport { createFormControl } from './logic/createFormControl';\nimport { createFormControlV4 } from './logic/createFormControlV4';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport get from './utils/get';\nimport live from './utils/live';\nimport set from './utils/set';\nexport function useForm(props = {}) {\n    const _formControl = React.useRef();\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        dirtyFields: {},\n        isSubmitted: false,\n        submitCount: 0,\n        touchedFields: {},\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        errors: {},\n    });\n    if (_formControl.current) {\n        _formControl.current.control._updateProps(props);\n    }\n    else {\n        _formControl.current = Object.assign(Object.assign({}, createFormControlV4(props)), { formState });\n    }\n    const control = _formControl.current.control;\n    React.useEffect(() => {\n        const formStateSubscription = control._subjects.state.subscribe({\n            next(formState) {\n                // console.log(\"dyno ;)\", \"##1\", formState,control._proxyFormState)\n                if (shouldRenderFormState(formState, control._proxyFormState, true)) {\n                    control._formState.val = Object.assign(Object.assign({}, control._formState.val), formState);\n                    updateFormState(Object.assign({}, control._formState.val));\n                }\n            },\n        });\n        const useFieldArraySubscription = control._subjects.array.subscribe({\n            next(state) {\n                if (state.values && state.name && control._proxyFormState.isValid) {\n                    set(control._formValues, state.name, state.values);\n                    control._updateValid();\n                }\n            },\n        });\n        return () => {\n            formStateSubscription.unsubscribe();\n            useFieldArraySubscription.unsubscribe();\n        };\n    }, [control]);\n    React.useEffect(() => {\n        const unregisterFieldNames = [];\n        if (!control._isMounted) {\n            control._isMounted = true;\n            control._proxyFormState.isValid && control._updateValid();\n            !props.shouldUnregister &&\n                control._updateFormValues(control._defaultValues);\n        }\n        for (const name of control._names.unMount) {\n            const field = get(control._fields, name);\n            field &&\n                (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\n                unregisterFieldNames.push(name);\n        }\n        console.log(\"dyno ;)\", unregisterFieldNames,'unregisterFieldNames',control._names,control)\n        unregisterFieldNames.length &&\n            _formControl.current.unregister(unregisterFieldNames);\n        control._names.unMount = new Set();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control._proxyFormState);\n    return _formControl.current;\n}","import React, { useCallback, useEffect, useState, useRef } from 'react'\n\nimport {\n    useWatch\n} from \"../useWatch\"\nimport {\n    useFieldArray\n} from \"../useFieldArray\"\nimport {\n    FormProvider,\n    useFormContext\n} from \"../useFormContext\"\nimport {\n    useForm\n} from \"../useFormV1\"\nimport {\n    Controller\n} from \"../controller\"\n\nimport _ from 'lodash'\n// import deepEqual from \"../utils/deepEqual\"\nimport deepEqual from \"../utils/deepEqual\"\nimport { defaultValidationResolver } from \"../utils/defaultValidationResolver\"\nimport { dataTransformer as defaultDataTransformer } from '../middleware/dataTransformer'\n// import { defaultValidationResolver } from \"../dynamo/utils/defaultValidationResolver\"\n\nconst renderComponentInd = (name, data, { updateReference,\n    myComponents,\n    getValues,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    undefined,\n    sharedItems,\n    index,\n    parent,\n    givenName = undefined,\n    dataTransformer\n}\n) => {\n\n    const selectedComponent = { ...data[name], givenName };\n    // Add givenName here ;)\n    // selectedComponent.givenName = givenName;\n\n\n    if (selectedComponent === undefined) return null;\n    // if (proxyItem === undefined) return null;\n\n    //proxy here ;)\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            }\n            return dataTransformer(target[prop], prop, target)({\n                ...sharedItems.localFunction,\n                sharedItems: {\n                    ...sharedItems,\n                    index\n                },\n                // ...sharedItems\n            });\n        }\n    };\n\n    const proxyItem = new Proxy({\n        ...selectedComponent,\n        sharedItems: sharedItems\n    }, proxyHandler);\n    // debugger;\n    // if (selectedComponent?.visible === false) return null\n    // name === \"howAreYouThen\" && console.log(proxyItem?.visible, 'Vaaaaala Result proxyItem?.visible', name, proxyItem?.visible === false)\n    if (proxyItem?.visible === false) return null\n\n    return renderComponentForm(\n        proxyItem,\n        updateReference,\n        myComponents,\n        getValues,\n        { ...errors },\n        ControlledComponents,\n        components,\n        managedCallback,\n        undefined,\n        sharedItems,\n        index,\n        data,\n        parent,\n        dataTransformer\n    )\n}\n\nconst renderComponentForm = (\n    item,\n    updateReference,\n    myControl,\n    getValue,\n    errorss,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    index,\n    data,\n    parent,\n    dataTransformer\n) => {\n    console.log(\"dyno ;)\", errorss, 'dataerrors')\n    //console.time('renderFormmm')\n    // const r = data\n    //     .filter((element) => element.visible)\n    //     .map((item, index) => {\n    //         // console.log(\"dyno ;)\", item, \"ittttem\")\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground\n    } = sharedItems\n\n    // if (!item.visible) return null\n    const name = parentName && `${parentName}.${item.name}` || item.givenName && item.givenName || item.name\n\n    let result = null\n    let child = []\n    if (item.items) {\n        child = item.items.map((name, idx) => renderComponentInd(name, data, {\n            updateReference,\n            myControl,\n            getValue,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            parentName: item?.items && name || undefined,\n            sharedItems,\n            index: idx,\n            data,\n            parent: { name: item.name, index, id: item.id },\n            itemName: name,\n            dataTransformer\n        }))\n\n        // renderComponentForm(\n        //     item.items,\n        //     updateReference,\n        //     myControl,\n        //     getValue,\n        //     errors,\n        //     ControlledComponents,\n        //     components,\n        //     managedCallback,\n        //     item?.items && name || undefined,\n        //     sharedItems,\n        //     setValue\n        // )\n    }\n\n    const validation = {\n        maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n        minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n        max: item.max && item.max.value !== \"\" && item.max || undefined,\n        min: item.min && item.min.value !== \"\" && item.min || undefined,\n        pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n        required: item.required && item.required.value !== \"\" && item.required || undefined\n    }\n\n    const { validate = {} } = item?.rule || { validate: {} };\n\n    if (item?.rule) {\n        console.log(\"dyno ;)\", validate, 'validate[', sharedItems?.localFunction)\n        Object.keys(validate).forEach(key => {\n            if (typeof validate[key] === \"function\") return;\n            validate[key] = sharedItems?.localFunction[key](validate[key])({ ...sharedItems, getItem: () => item });\n            console.log(\"dyno ;)\", validate, 'validate[ within', validate[key])\n        });\n        console.log(\"dyno ;)\", validate, 'validate[ after')\n    }\n\n\n    // let rule = _.cloneDeep(item?.rule || {});\n    // debugger;\n    // rule.pattern?.value = new RegExp(item.rule?.pattern?.value);\n\n    result = (\n        <Controller\n            key={item.isArray === true && `${name}container` || name}\n            name={item.isArray === true && `${name}container` || name}\n            control={control}\n            item={{...item, index}}\n            rules={{ ...item.rule } || validation}\n            // eventBus={sharedItems?.eventBus}\n            render={({ field }) => {\n\n                if (item.isArray) {\n                    console.log(\"dyno ;)\", name, item.items, \"useFieldArray\")\n                    const { fields, append, remove } = useFieldArray({\n                        control,\n                        name: name,\n                        rules: { ...item.rule } || validation\n                    });\n\n                    child =\n                        <div>\n                            <ul>\n                                {fields.map((el, index) => (\n                                    <li key={el.id}>\n                                        {item.items.map((element, indx) => (\n                                            <Controller\n                                                key={`${name}.${index}.${data[element].name}`}\n                                                name={`${name}.${index}.${data[element].name}`}\n                                                control={control}\n                                                render={({ field }) => {\n                                                    console.log(\"dyno ;)\", `${name}.${index}.${element}`, '`${name}.${index}.${element}`')\n                                                    return renderComponentInd(element, {...data, index}, {\n                                                        updateReference,\n                                                        myControl,\n                                                        getValue,\n                                                        errors,\n                                                        ControlledComponents,\n                                                        components,\n                                                        managedCallback,\n                                                        parentName: item?.items && name || undefined,\n                                                        sharedItems: {\n                                                            ...sharedItems,\n                                                            // fields,\n                                                            append,\n                                                            remove: () => remove(index)\n                                                        },\n                                                        index: index,\n                                                        data,\n                                                        parent: { name: item.name, index, id: item.id },\n                                                        givenName: `${name}.${index}.${data[element].name}`,\n                                                        dataTransformer\n                                                    })\n\n                                                    const Component = components(element.type, {\n                                                        field,\n                                                        item: element,\n                                                        name: `${name}.${index}.${element.name}`,\n                                                        indx,\n                                                        managedCallback,\n                                                        child,\n                                                        useFieldArray\n                                                    })\n                                                    return Component\n                                                }}\n                                            />\n                                        ))}\n                                        <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                    </li>\n                                ))}\n\n                            </ul>\n                            {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                            {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                            <button\n                                type=\"button\"\n                                // onClick={() => append({ \"actionURL\": \"\" })}\n                                onClick={() => append({})}\n\n                            >\n                                +\n                            </button>\n                        </div>\n                }\n\n                // //proxy here ;)\n                // const proxyHandler = {\n                //     get(target, prop, receiver) {\n                //         if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                //             console.log(\"dyno ;)\", target[prop], \"proxyHanlerrrrrrrr me ;)\");\n                //             return new Proxy(target[prop], proxyHandler);\n                //         }\n                //         return dataTransformer(target[prop], prop, target)({\n                //             ...sharedItems.localFunction,\n                //             sharedItems: sharedItems,\n                //             // ...sharedItems\n                //         });\n                //     }\n                // };\n\n                // const proxyItem = new Proxy({\n                //     ...item,\n                //     sharedItems: sharedItems\n                // }, proxyHandler);\n\n\n                //end of proxy\n\n\n                const Component = components(item.type, {\n                    field,\n                    // item: proxyItem,//item,\n                    item,\n                    name,\n                    index,\n                    managedCallback,\n                    child,\n                    useFieldArray,\n                    error: errors,\n                    sharedItems,\n                    parent\n                })\n\n                return Component\n            }}\n\n        />\n    )\n\n    //     return result\n    // })\n    //console.timeEnd('renderFormmm')\n    return result\n}\n\nconst renderForm = (\n    data,\n    updateReference,\n    myControl,\n    getValue,\n    errors,\n    ControlledComponents,\n    components,\n    managedCallback,\n    parentName,\n    sharedItems,\n    setValue\n) => {\n    console.log(\"dyno ;)\", errors, 'dataerrors')\n    //console.time('renderFormmm')\n    const r = data\n        .filter((element) => element.visible)\n        .map((item, index) => {\n            // console.log(\"dyno ;)\", item, \"ittttem\")\n\n            const {\n                register,\n                handleSubmit,\n                watch,\n                errors,\n                control,\n                trigger,\n                setFocus,\n                getValues,\n                setValue,\n                useFieldArray,\n                useWatch,\n                triggerBackground\n            } = sharedItems\n\n            // if (!item.visible) return null\n            const name = parentName && `${parentName}.${item.name}` || item.name\n\n            let result = null\n            let child = []\n            if (item.items) {\n                child = renderForm(\n                    item.items,\n                    updateReference,\n                    myControl,\n                    getValue,\n                    errors,\n                    ControlledComponents,\n                    components,\n                    managedCallback,\n                    item?.items && name || undefined,\n                    sharedItems,\n                    setValue\n                )\n            }\n\n            const validation = {\n                maxLength: item.maxLength && item.maxLength.value !== \"\" && item.maxLength || undefined,\n                minLength: item.minLength && item.minLength.value !== \"\" && item.minLength || undefined,\n                max: item.max && item.max.value !== \"\" && item.max || undefined,\n                min: item.min && item.min.value !== \"\" && item.min || undefined,\n                pattern: item.pattern && item.pattern.value !== \"\" && item.pattern || undefined,\n                required: item.required && item.required.value !== \"\" && item.required || undefined\n            }\n            // console.log(\"dyno ;)\", \"validationValidation\", validation)\n\n            // if (!item.visible) return null\n\n            // const name = parentName && `${parentName}.0.${item.name}` || item.name\n            // console.log(\"dyno ;)\", name, \"namename\")\n            result = (\n                <Controller\n                    key={item.isArray === true && `${name}container` || name}\n                    name={item.isArray === true && `${name}container` || name}\n                    control={control}\n                    item={item}\n                    rules={item.rule || validation}\n                    // eventBus={sharedItems?.eventBus}\n                    render={({ field }) => {\n\n                        if (item.isArray) {\n                            // console.log(\"dyno ;)\", name, \"useFieldArray\")\n                            const { fields, append, remove } = useFieldArray({\n                                control,\n                                name: name\n                            });\n\n                            // const myaCondition = useWatch({\n                            //     control,\n                            //     name: 'textbox-0.test.0.firstName', // without supply name will watch the entire form, or ['firstName', 'lastName'] to watch both\n                            //     defaultValue: undefined // default value before the render\n                            // });\n                            // console.log(\"dyno ;)\", myaCondition, \"myaCondition\", getValue(\"textbox-3\"))\n                            child =\n                                <div>\n                                    {/* <>\n                                        {`${item.name}`}\n                                        <br />\n                                        <input {...field} />\n                                        {errors && errors[item.name] && `${item.name} errororrr`}\n                                        {child && child}\n                                        <br />\n                                        <br />\n                                        <br />\n                                    </> */}\n                                    <ul>\n                                        {fields.map((el, index) => (\n                                            <li key={el.id}>\n                                                {item.items.map((element, indx) => (\n                                                    <Controller\n                                                        name={`${name}.${index}.${element.name}`}\n                                                        control={control}\n                                                        render={({ field }) => {\n                                                            const Component = components(element.type, {\n                                                                field,\n                                                                item: element,\n                                                                name: `${name}.${index}.${element.name}`,\n                                                                indx,\n                                                                managedCallback,\n                                                                child,\n                                                                useFieldArray\n                                                            })\n                                                            return Component\n                                                        }}\n                                                    />\n                                                ))}\n                                                <button type=\"button\" onClick={() => remove(index)}>-</button>\n                                            </li>\n                                        ))}\n\n                                    </ul>\n                                    {/* <button type=\"button\" onClick={() => {\n                                        control.unregister(\"textbox-10\")\n                                        console.log(\"dyno ;)\", getValue(), \"unregisterrrr\")\n                                    }}> unregister 10 now ;) </button> */}\n\n                                    {/* <button type=\"button\" onClick={() => setValue(\"textbox-9\", { hi: \"wowwwwww\" })}> Change 9 now ;) </button> */}\n                                    <button\n                                        type=\"button\"\n                                        // onClick={() => append({ \"actionURL\": \"\" })}\n                                        onClick={() => append({})}\n\n                                    >\n                                        +\n                                    </button>\n                                </div>\n\n                        }\n\n                        const Component = components(item.type, {\n                            field,\n                            item,\n                            name,\n                            index,\n                            managedCallback,\n                            child,\n                            useFieldArray,\n                            error: errors,\n                            sharedItems\n                        })\n\n                        return Component\n                    }}\n\n                />\n            )\n\n            return result\n        })\n    //console.timeEnd('renderFormmm')\n    return r\n}\n\n// where is item\n// need 1st render recursive\n// -> DFS & flat => ref for each field\n// preCondition -> array(store) - flat, value -> set?\n// leftIconA => 7\n// _.set({}, \"b.c.d\")\n\nconst convertIdToRef = (array, key, name, parent, isArray) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        const itemName = isArray === undefined && item[key] || `${parent}.0.${item[key]}`\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent, itemName, isArray)\n\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [itemName]: {\n                ...item,\n                name: itemName,\n                refId,\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key], item.isArray)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst resetItems = (array, key, name, parent) => {\n    // const initialValue = {};\n    // const initialValue = new Map();\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, 'convertIdToRefconvertIdToRef', item, name, parent)\n        const refId = (name && `${name}.items[${currentIndex}]`) || `[${currentIndex}]`\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: {\n                ...item,\n                refId,\n                value: \"\",\n                ...(parent && { parent }),\n            },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId, item[key])),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst convertIdToRefV2 = (array, key, name) => {\n    // const initialValue = {};\n    const initialValue = new Map()\n    const result = array.reduce((obj, item, currentIndex) => {\n        // TODO: remove console comment ;)\n        // console.log(\"dyno ;)\", name, \"convertIdToRefconvertIdToRef\", item)\n        const refId = (name && `${name}.items[${currentIndex}]`) || item[key] // `[${currentIndex}]`;\n        return {\n            ...obj,\n            // [item[key]]: { ...item, refId: name && `${name}.items[${currentIndex}]` || item.name },\n            [item[key]]: { ...item, refId },\n            // ...(item.items !== undefined && convertIdToRef(item.items, \"name\", item.name)),`[${currentIndex}]`\n            ...(item.items !== undefined && convertIdToRef(item.items, 'name', refId)),\n        }\n    }, new Map())\n\n    return result\n}\n\nconst prepareWtchingComponents = (items, key) => {\n    // const initialValue = {};\n    // //console.time('prepareWtchingComponents')\n    const initialValue = new Map()\n\n    Object.keys(items).forEach((key) => {\n        if (items[key].watch) {\n            initialValue.set(items[key].name);//POC only\n        }\n        if (items[key].preCondition) {\n            const preConditionObj = convertArrayToObject(items[key].preCondition, 'value')\n\n            // const thisShitIsBananas = items[key].preCondition.reduce((accumulator, fruit) => {\n            //     return accumulator.concat(fruit.value);\n            // }, []);\n            // console.log(\"dyno ;)\", items[key], \"prepareWtchingComponents\", Object.values(preConditionObj), '----===----', preConditionObj)\n            const keys = Object.keys(preConditionObj)\n            for (let index = 0; index < keys.length; index++) {\n                const internalItem = preConditionObj[keys[index]]\n                console.log(\"dyno ;)\", items[key], 'items[key]')\n                initialValue.set(internalItem.name, [\n                    ...((initialValue.get(internalItem.name) && initialValue.get(internalItem.name)) || []),\n                    { refId: items[key].id, ...internalItem },\n                ])\n            }\n            // keys.forEach( e => {\n            //     // initialValue[preConditionObj[e].name] = [\n            //     //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     //     ...(initialValue[preConditionObj[e].name] && initialValue[preConditionObj[e].name] || []),\n            //     //     // {refId: items[key].refId, ...preConditionObj  }\n            //     //     {refId: items[key].refId, ...preConditionObj[e] }\n            //     // ];\n            //     initialValue.set(preConditionObj[e].name, [\n            //         // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //         ...(initialValue.get(preConditionObj[e].name) && initialValue.get(preConditionObj[e].name) || []),\n            //         // {refId: items[key].refId, ...preConditionObj  }\n            //         {refId: items[key].refId, ...preConditionObj[e] }\n            //     ]);\n            //     // console.log(\"dyno ;)\", thisShitIsBananas, \"prepareWtchingComponentsYY ---->\", initialValue.get(preConditionObj[e].name),initialValue)\n\n            // })\n\n            // initialValue[preConditionObj.name] = [\n            // initialValue[items[key].preCondition.name] = [\n            //     // ...(initialValue[preConditionObj.name] && initialValue[preConditionObj.name] || []),\n            //     ...(initialValue[items[key].preCondition.name] && initialValue[items[key].preCondition.name] || []),\n            //     // {refId: items[key].refId, ...preConditionObj  }\n            //     {refId: items[key].refId, ...items[key].preCondition }\n            // ];\n        }\n    })\n    //console.timeEnd('prepareWtchingComponents')\n    return initialValue\n}\n\nconst convertArrayToObject = (array, key, value) => {\n    const initialValue = {}\n    if (!Array.isArray(array)) return\n    const givenArray = array.concat()\n    return givenArray.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: (value && item[value]) || (value === undefined && item) || '',\n        }\n    }, initialValue)\n}\n\nconst convertArrayToObjectPOC = (array, key, value, isParent, original) => {\n    // //console.time(\"convertArrayToObjectPOC\")\n    const initialValue = {}\n    const givenArray =\n        (isParent && array.concat()) || array.filter((el) => el.parent === undefined).concat()\n\n    const result = givenArray.reduce((obj, item) => {\n        // console.log(\"dyno ;)\", item, obj, \"reducereduce\", item[key], original[[item[key]]][value], original)\n\n        return {\n            ...obj,\n            [item[key]]:\n                (item.items && convertArrayToObjectPOC(item.items, key, 'value', true, original)) ||\n                (isParent && original[[item[key]]][value]) ||\n                (value && item[value]) ||\n                (value === undefined && item) ||\n                '',\n        }\n    }, initialValue)\n    // //console.timeEnd(\"convertArrayToObjectPOC\")\n    return result\n}\n\nlet renderCount = 0\nconst FormBuilderNext = React.forwardRef(({ items,\n    validationResolver,\n    // = defaultValidationResolver,\n    ControlledComponents,\n    components,\n    managedCallback,\n    localFunction,\n    shouldUnregister = true,\n    defaultValues = {},\n    devMode = false,\n    dataTransformer = defaultDataTransformer,\n    dataStore\n    // eventBus\n}, ref) => {\n\n    if (!devMode) {\n        console.log = (function () {\n            const log = console.log;\n\n            return function () {\n                const args = Array.from(arguments);\n                if (!args.includes(\"dyno ;)\")) {\n                    log.apply(console, args);\n                }\n            }\n        })();\n    }\n\n    //proxy here ;)\n    const proxyHandler = {\n        get(target, prop, receiver) {\n            if (typeof target[prop] === \"object\" && target[prop] !== null) {\n                console.log(\"dyno ;)\", target[prop], \"dddproxyHanlerrrrrrrr me ;)\");\n                return new Proxy(target[prop], proxyHandler);\n            }\n            return dataTransformer(target[prop], prop, target)({\n                ...localFunction,\n                sharedItems: { dataStore },\n                // ...sharedItems\n            });\n        }\n    };\n\n    const proxyDefaultValues = new Proxy({\n        ...defaultValues\n    }, proxyHandler);\n\n    console.log(\"dyno ;)\", defaultValues, \"defaultValues\", { ...proxyDefaultValues }, dataStore)\n\n\n    const {\n        register,\n        handleSubmit,\n        watch,\n        formState: { errors, isDirty, isValid },\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        triggerCustom,\n        unregister,\n        clearErrors,\n        reset\n    } = useForm({\n        mode: 'onChange',\n        shouldUnregister: true,\n        reValidateMode: 'onChange',\n        // resolver: async (data, context) => {\n        //     const { error, value: values } = validationSchema.validate(data, {\n        //         abortEarly: false,\n        //     });\n\n        //     if (!error) return { values: values, errors: {} };\n\n        //     return {\n        //         values: {},\n        //         errors: error.details.reduce(\n        //             (previous, currentError) => ({\n        //                 ...previous,\n        //                 [currentError.path[0]]: currentError,\n        //             }),\n        //             {},\n        //         ),\n        //     };\n        // },,\n        // criteriaMode: \"firstError\",\n        defaultValues: { ...proxyDefaultValues }\n    })\n\n    React.useEffect(() => {\n        reset({ ...proxyDefaultValues })\n    }, [defaultValues]);\n\n    // Shared Items\n    const sharedItems = {\n        register,\n        handleSubmit,\n        watch,\n        errors,\n        control,\n        trigger,\n        setFocus,\n        getValues,\n        setValue,\n        useFieldArray,\n        useWatch,\n        triggerBackground,\n        triggerBackgroundOptimised,\n        unregister,\n        localFunction: {\n            ...localFunction,\n            reset: reset,\n            triggerBackground: () => !_.isEmpty(errors),\n            getValues,\n            triggerBackgroundOptimised: (formId) => {\n                // console.log(triggerBackground(), 'triggerSyncBackground()')\n                const result = triggerBackgroundOptimised(formId)().then(r => r);\n                console.log('yasssss', result)\n                return result;\n            },\n            triggerGroup: async (resources) => {\n                const localErrors = await triggerBackgroundOptimised()(true);\n                // if (!isValid) return true;\n\n                // console.log(resources, errors, 'triggerreggirt',\n                //     isDirty,\n                //     '---=====----',\n                //     isValid,\n                //     localErrors\n                // )\n                let result = true;\n                for (let i = 0; i < resources.length; i++) {\n                    const item = resources[i];\n                    const isItemExist = localErrors[item];\n                    if (isItemExist) {\n                        // console.log(item, '------>', 'triggerreggirt', errors[item], 'found', result)\n                        result = false;\n                        break;\n                    }\n                }\n                // console.log('triggerreggirt ', result)\n                return result;\n            },\n        },\n        dataStore,\n        // eventBus,\n        clearErrors\n    }\n    // console.log(\"dyno ;)\", typeof errors, 'hereeeeeeeeeerroooooors')\n\n    const myComponents = React.useRef()\n    // const errors = React.useRef({})\n    const watchingComponents = React.useRef()\n    const preConditionItems = React.useRef()\n\n\n    const [data, setData] = useState()\n\n    React.useEffect(() => {\n        if (items === undefined) return\n\n        // if(items !== data && data !== undefined){\n        //     for (const [key, value] of Object.entries(data)) {\n        //         unregister(value?.name);\n        //     }\n        // }\n\n\n        //console.time('convertIdToRefffff')\n        myComponents.current = items; // convertIdToRef(items, 'name')\n        //console.timeEnd('convertIdToRefffff')\n        watchingComponents.current = prepareWtchingComponents(myComponents.current)\n        console.log(\"dyno ;)\", myComponents, 'myComponentsmyComponents')\n        console.log(\"dyno ;)\", watchingComponents, 'prepareWtchingComponents', [...watchingComponents.current.keys()])\n\n        const subscription = watch(async (value, { name, type }) => {\n            //  For watch items\n            //  Re-render watch items\n\n\n            // has better than get ;)\n            // if (watchingComponents.current.get(name)) {\n            if (watchingComponents.current.get(name)) {\n                const allValues = Object.assign(value, dataStore);\n                console.log(\"dyno ;)\", \"origincheckPreCondition ;) checkPreCondition\", value, name, type, data, items)\n                // const [a, b] = await checkPreCondition(name, value[name], items);\n                const [a, b] = await checkPreCondition(name, allValues[name], items);\n\n                if (!deepEqual(data, b) && a) {\n                    setData({ ...b });\n                    return;\n                }\n            } else if (watchingComponents.current.has(name)) {\n                console.log(\"dyno ;)\", watchingComponents.current.has(name), \"before checkPreCondition ;) checkPreCondition\", value, name, type, { data }, items)\n                setData({ ...items });\n                return;\n            }\n        });\n\n        setData(items)\n    }, [items])\n\n    const getValue = (name) => {\n        return myComponents.current[name].value\n    }\n\n    const resetValues = () => {\n        myComponents.current = resetItems(items, 'name');\n        setData(items);\n    }\n\n    const onSubmit = (data) => {\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM\", data)\n        return data;\n    }\n\n    const getValuesBackground = async () => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await triggerBackgroundOptimised()(true) //trigger();\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n        if (_.isEmpty(result)) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    const getValuesPOC = async (options = {triggerAll: false}) => {\n        //TODO: hot fix for double validations\n        if (Object.keys(errors).length > 0) return false;\n        const result = await triggerCustom(options);\n        console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors, options)\n        if (result === true) {\n            return await getValues();\n        } else {\n            return false;\n        }\n    }\n\n    const getValuesWithoutValidation = async () => {\n        return await getValues();\n    }\n\n    ref.current = {\n        getValuesByGroup: async (props) => {\n            const valid = await sharedItems.localFunction.triggerGroup(props);\n            if (valid) {\n                const result = await getValues();\n                return result;\n            }\n            return valid;\n\n        },\n        getValues: (options) => getValuesPOC(options),\n        getGroupValuesBackground: async (props) => {\n            console.log(props, 'getValuesBackgroundgetValuesBackgroundgetValuesBackground')\n            if (Array.isArray(props)) {\n                const valid = await sharedItems.localFunction.triggerGroup(props);\n                if (valid) {\n                    const result = await getValues();\n                    return result;\n                }\n                return valid;\n            }\n            return getValuesPOC();\n        },\n        getValuesBackground: async (validation = true) => {\n            if (validation) {\n                if (Object.keys(errors).length > 0) return false;\n                const result = await triggerBackgroundOptimised()(true);\n                console.log(\"dyno ;)\", \"SUBMITFORM SUBMITFORM result trigger\", result, errors)\n                if (_.isEmpty(result)) {\n                    return await getValues();\n                } else {\n                    return false;\n                }\n            }\n            const result = await getValues();\n            return result;\n        },\n        resetValues: resetValues,\n        setValue: setValue,\n        errors: errors,\n        reset,\n        clearErrors,\n        localFunction: sharedItems.localFunction\n    }\n\n    const validationOnce = async (name, value, result) => {\n        //console.time('validationssss')\n        const validatedItem = myComponents.current[name];\n        let n = result\n        const originalErrors = { ...errors.current } || {}\n        const newErrors = errors.current || {}\n\n        let error = false\n\n        // if (item && item.visible) {\n        if (value !== '') {\n            const error = value === '313'\n            if (error) {\n                newErrors[name] = {\n                    error,\n                    errorMsg: validatedItem.errorMsg && validatedItem.errorMsg || '313 cant be here.',\n                }\n            } else {\n                delete newErrors[name]\n            }\n            // n = _.set({ a: n }, `a${item.refId}.error`, error).a;\n            // console.log(\"dyno ;)\", \"error\", n, error, value)\n        } else {\n            delete newErrors[name]\n        }\n        // }\n\n        errors.current = { ...newErrors } // {...errors.current ,...newErrors};\n        // console.log(\"dyno ;)\", \"errorolo\", errors.current, originalErrors, _.isEqual(originalErrors, newErrors))\n        console.log(\"dyno ;)\", errors, \"errrrrrrrrr\", newErrors,)\n        if (error.current !== originalErrors) {\n        }\n\n        // setData([...n])\n\n        // setData([...n])\n        // Object.values(newC).forEach(element => {\n        //     if(element.value){\n        //         element[\"error\"] = true;\n        //         error = element.value !== \"313\";\n        //     }\n        // });\n        // error && pubsub.publish('textbox-3', {error: Date.now()});\n\n        //console.timeEnd('validationssss')\n        return [!_.isEqual(originalErrors, newErrors), [...n], newErrors[name]]\n    }\n\n    const updateReference = async (value, name) => {\n\n        //console.time('myComponentsFind')\n        myComponents.current[name].value = value\n        //console.timeEnd('myComponentsFind')\n\n        console.log(\"dyno ;)\", myComponents.current, 'getValues', await getValuesPOC())\n\n        //console.time('iam here')\n        const [hasValidationChanged, result, error] = await validationOnce(name, value, { ...data })\n        const [hasPreconditionChanged, preResult] = await checkPreCondition(name, value, data)\n        // console.log(\"dyno ;)\", error, \"asyncValidation\", result, hasValidationChanged)\n\n        if (hasValidationChanged === true || hasPreconditionChanged === true) {\n            // if (hasPreconditionChanged === true) {\n\n            console.log(\"dyno ;)\",\n                'lololololololololololoolol',\n                hasValidationChanged,\n                hasPreconditionChanged,\n                errors,\n            )\n            setData({ ...preResult })\n        }\n\n        // console.log(\"dyno ;)\", \"getValues\", await getValues())\n        //console.timeEnd('iam here')\n        // return [value, error]\n    }\n\n    const checkPreCondition = async (name, value, result) => {\n        // const hasCondition = watchingComponents.current[name];\n        const hasCondition = watchingComponents.current.get(name)\n\n        console.log(\"dyno ;)\", data, \"checkPreConditionInside\", name, myComponents.current, hasCondition, watchingComponents.current);\n\n        // TODO: ;)\n        // how to update the Array\n        // OR update and don't iterate the Object\n        // _.set({ a: myComponents.current }, \"a.textbox-2.items[0].value\", \"leila\")\n        // let n = _.cloneDeep(result);\n        let n = { ...result }\n\n        let updated = false\n\n        if (hasCondition !== undefined) {\n            // for(let i = 0; i < hasCondition.length; i++){\n            //     const touched = item.value == value;\n            //         console.log(\"dyno ;)\", \"hashas\", _.get({a:n},`a${item.refId}.visible` ))\n            //         n = _.set({ a: n }, `a${item.refId}.visible`, touched).a;\n\n            // }\n\n            await hasCondition.map(async (item) => {\n                const realValue = value && value[\"value\"] || value;\n                const touched = item?.type && (await validationResolver[item.type](item, realValue)) // || validationResolver[\"eq\"](item,value); //value !== \"\" && item.value.includes(value) || false;\n                // if(touched){\n                // debugger\n                // if (n[item.refId] && n[item.refId].visible !== touched) {\n                //     n[item.refId].visible = touched;\n                //     updated = true\n                // }\n                const i = n[item.refId];\n                console.log(\"dyno ;)\", n[\"accountNo\"], \"accountNoaccountNo\", '-----', i)\n                if (i !== undefined && i.visible !== touched) {\n                    n[item.refId].visible = touched;\n                    updated = true\n                }\n                // if (_.get({ a: n }, `a${item.refId}.visible`) !== touched) { //touched\n                //     // myComponents.current[item.name].visible = touched;\n                //     n = _.set({ a: n }, `a${item.refId}.visible`, touched).a\n                //     updated = true\n                //     console.log(\"dyno ;)\", \n                //         'hashas',\n                //         await _.get({ a: n }, `a${item.refId}.visible`),\n                //         await touched,\n                //         hasCondition,\n                //         updated,\n                //     )\n                // }\n\n                // }\n            })\n        }\n        return [updated, n]\n        return [updated, { ...n }]\n    }\n\n    console.log(\"dyno ;)\", 'renderCount', renderCount++)\n\n    return (\n        (data && data.root?.items?.map((name, index) => renderComponentInd(name, data, {\n            updateReference,\n            myComponents,\n            getValues,\n            errors,\n            ControlledComponents,\n            components,\n            managedCallback,\n            undefined,\n            sharedItems,\n            index,\n            dataTransformer\n        })\n        )) || null\n    )\n\n\n    return (\n        (data &&\n            renderForm(\n                data,\n                updateReference,\n                myComponents,\n                getValues,\n                { ...errors },\n                ControlledComponents,\n                components,\n                managedCallback,\n                undefined,\n                sharedItems,\n                setValue\n            ))\n        ||\n        null\n    )\n});\n\nFormBuilderNext.whyDidYouRender = true\nFormBuilderNext.displayName = \"FormBuilderNext\"\n\nexport default FormBuilderNext\n"],"names":["element","type","data","Date","value","isObjectType","isNullOrUndefined","Array","isArray","isDateObject","event","isObject","target","isCheckBoxInput","checked","name","substring","search","names","some","current","getNodeParentName","filter","Boolean","val","undefined","obj","path","defaultValue","result","compact","split","reduce","key","isUndefined","EVENTS","BLUR","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","max","min","maxLength","minLength","pattern","required","validate","source","copy","Object","assign","FormContext","React","displayName","useFormContext","FormProvider","props","Provider","omit","children","formState","_proxyFormState","localProxyFormState","isRoot","createGetter","prop","defineProperty","get","keys","length","formStateData","isEmptyObject","find","useFormState","methods","control","disabled","visible","nameRef","updateFormState","_formState","_localProxyFormState","isDirty","dirtyFields","touchedFields","isValidating","isValid","errors","formStateSubscription","_subjects","state","subscribe","next","convertToArrayPayload","includes","shouldRenderFormState","unsubscribe","getProxyFormState","useController","shouldUnregister","item","console","log","setInputStateValue","_formValues","_defaultValues","registerProps","register","rules","updateMounted","field","_fields","_f","mount","controllerSubscription","values","_shouldUnregisterField","_shouldUnregister","isNameInFieldArray","_names","array","_isInAction","unregister","getControllerValue","ref","elm","focus","setCustomValidity","message","reportValidity","fieldState","invalid","isTouched","error","Controller","render","validateAllFieldCriteria","types","test","input","replace","set","object","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isNaN","focusFieldBy","fields","callback","fieldsNames","refs","options","shouldFocus","focusName","focusIndex","d","performance","now","c","r","Math","random","toString","keyName","map","generateId","append","fill","insert","slice","from","to","splice","prepend","removeAtIndexes","indexes","i","temp","sort","a","b","indexA","indexB","baseGet","updatePath","unset","childObject","previousObjRef","k","objectRef","currentPaths","currentPathsLength","isBoolean","fieldValues","useFieldArray","_focusName","setFields","mapIds","_getFieldArrayValue","add","appendValue","updatedFieldArrayValues","appendAt","_bathFieldArrayUpdate","argA","fillEmptyArray","getFocusFieldName","prependAt","remove","removeArrayAt","insertAt","argB","swap","swapArrayAt","move","moveArrayAt","update","updateAt","watchAll","watchField","watch","startsWith","omitKey","_updateValid","fieldArraySubscription","payload","isReset","fieldArrayValues","wait","timer","args","clearTimeout","window","setTimeout","deepEqual","object1","object2","isPrimitive","keys1","keys2","val1","val2","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","HTMLElement","isRadioInput","document","Subscription","constructor","tearDowns","tearDown","push","teardown","Subscriber","observer","subscription","closed","Subject","observers","subscriber","defaultResult","validResult","option","attributes","valueAsNumber","valueAsDate","setValueAs","NaN","selected","defaultReturn","previous","getFieldValue","isFileInput","files","getRadioValue","isMultipleSelect","getMultipleSelectValue","isCheckBox","getCheckboxValue","getFieldValueAs","_fieldss","criteriaMode","shouldUseNativeValidation","mounted","deepMerge","targetValue","sourceValue","_a","setDirtyFields","defaultValues","parentNode","parentName","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isString","RegExp","getValidateError","isMessage","every","validationData","isRegex","inputValue","inputRef","setCustomValidty","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","appendErrors","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","exceedMin","maxOutput","minOutput","valueNumber","parseFloat","valueDate","maxLengthOutput","minLengthOutput","patternValue","match","isFunction","validateError","validationResult","defaultOptions","reValidateMode","shouldFocusError","isWindowUndefined","createFormControlV3","formOptions","_delayCallback","submitCount","isSubmitting","isSubmitSuccessful","_isMounted","Set","unMount","validationMode","getValidationModes","isValidateAllFieldCriteria","isFieldWatched","has","updateErrorState","shouldRenderBaseOnValid","validateForm","shouldRenderBaseOnError","shouldSkipRender","isValidFromResolver","isWatched","previousError","resolver","delayError","debounce","updatedFormState","setFieldValue","shouldRender","fieldValue","isWeb","isHTMLElement","forEach","selectRef","checkboxRef","radioRef","getValues","shouldDirty","shouldTouch","updateTouchAndDirtyState","shouldValidate","trigger","isCurrentTouched","isChanged","previousIsDirty","_getIsDirty","isPreviousFieldDirty","isCurrentFieldDirty","isPreviousFieldTouched","executeResolver","context","getResolverOptions","executeResolverValidation","shouldCheckValid","valid","fieldError","validateField","handleChange","inputType","shouldSkipValidation","hasValidation","skipValidation","parentNodeName","valError","_updateValidAndInputValue","shouldSkipValueAs","isValueUndefined","defaultChecked","setValues","entries","fieldKey","fieldName","isFieldArray","_getWatch","fieldNames","isGlobal","resultChanges","Map","_updateFormValues","method","shouldSet","shouldSetFields","output","unsetEmptyArray","setFieldArrayDirtyFields","setValue","schemaResult","Promise","triggerBackground","clearErrors","inputName","setError","info","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","registerFieldRef","fieldRef","querySelectorAll","isRadioOrCheckboxFunction","contains","handleSubmit","onValid","onInvalid","e","preventDefault","persist","hasNoPromiseError","err","reset","keepStateOptions","updatedValues","keepValues","closest","keepDefaultValues","keepSubmitCount","keepIsSubmitted","keepErrors","setFocus","_updateProps","useForm","_formControl","createFormControlV2","useFieldArraySubscription","unregisterFieldNames","live","useWatch","_name","updateValue","watchSubscription","rebuildHistory","history","newHistory","useHistory","init","states","setStates","useState","updateHistory","setIndex","currentPage","updateCurrentPage","useMemo","setState","pageName","existing","_","cloneDeep","size","newIndex","isEqual","resetState","goBack","steps","Number","goBackByIndex","goBackByName","previousPageName","existingPage","goForward","updatePage","jsonataOriginal","require","htmltotext","registerWithJSONATA","expression","registerFunction","TypeError","jsonataExtended","expr","transformer","schema","jsonata","evaluate","useDynamoHistory","initialArr","id","preventDuplicates","replaceDuplicate","Error","setHistory","currentIndex","setCurrentIndex","useEffect","findIndex","prevHistory","updatedFirstObj","getNextIndex","getPreviousIndex","nextIndex","previousIndex","goToStart","goTo","newId","removeAfter","removeAfterIndex","goNext","goToIndex","goBackToPrimary","skipSecondary","goForwardToType","goToEnd","insertObjectAtIndex","insertIndex","newArray","insertObject","customIgnoreDuplicates","customReplaceDuplicate","existingIndex","previousObject","objectType","objectWithDefaultType","updateCurrent","updatedObject","updatedArray","updateObjectById","removeObjectByIndex","removeIndex","removeObjectByName","removeName","removeAtIndex","newArr","removeByName","removeFirst","removeLast","removeAll","getHistory","historyDict","objId","dataTransformer","local","dataStore","sharedItems","displayIndex","ExpRE","matched","Function","then","response","patternResult","eval","w","schemaTransformation","flattenHelper","currentObject","newObject","previousKeyName","flattenObject","oldObject","schemaProxy","extraValues","extraFunctions","proxyHandler","receiver","Proxy","proxySchema","action","setupProxy","proxyItems","newSchema","y","el","actionsRunner","localFunction","resultPromise","resolve","functionName","config","asyncFunction","defaultValidationResolver","noteq","eq","notEmptyAndEqual","ControlledComponentsV2","_props$errors","setField","updateReference","IIN","memo","createElement","prevProps","nextProps","_prevProps$errors","_prevProps$errors2","_nextProps$errors","_nextProps$errors2","oldE","newE","errror","errrorlol","JSON","stringify","renderForm","myControl","getValue","ControlledComponents","components","managedCallback","child","items","validation","rule","Fragment","indx","Component","onClick","RenderForm","InRenderform","whyDidYouRender","convertIdToRef","parent","itemName","refId","resetItems","prepareWtchingComponents","initialValue","preCondition","preConditionObj","convertArrayToObject","internalItem","givenArray","concat","renderCount","FormBuilderV1","forwardRef","validationResolver","myComponents","useRef","watchingComponents","preConditionItems","setData","checkPreCondition","resetValues","getValuesPOC","validationOnce","validatedItem","n","originalErrors","newErrors","errorMsg","hasValidationChanged","hasPreconditionChanged","preResult","hasCondition","updated","realValue","touched","renderComponentInd","givenName","selectedComponent","renderComponentForm","errorss","idx","FormBuilderNext","_data$root","_data$root$items","root","createFormControlV4","triggerAll","formId","validateFormBackground","localErrors","triggerCustom","triggerBackgroundOptimised","list","proxyItem","getItem","devMode","defaultDataTransformer","arguments","apply","proxyDefaultValues","triggerGroup","resources","isItemExist","allValues","getValuesByGroup","getGroupValuesBackground","getValuesBackground"],"mappings":";;;AAAA,uBAAgBA,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,UAAU;;ACAvD,oBAAgBC,IAAI,IAAKA,IAAI,YAAYC,IAAI;;ACA7C,yBAAgBC,KAAK,IAAKA,KAAK,IAAI,IAAI;;ACEhC,MAAMC,YAAY,GAAID,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ;AAChE,gBAAgBA,KAAK,IAAK,CAACE,iBAAiB,CAACF,KAAK,CAAC,IAC/C,CAACG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,IACrBC,YAAY,CAACD,KAAK,CAAC,IACnB,CAACK,YAAY,CAACL,KAAK,CAAC;;ACJxB,0BAAgBM,KAAK,IAAKC,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,MAAM,GACnDC,eAAe,CAACH,KAAK,CAACE,MAAM,CAAC,GACzBF,KAAK,CAACE,MAAM,CAACE,OAAO,GACpBJ,KAAK,CAACE,MAAM,CAACR,KAAK,GACtBM,KAAK;;ACNX,yBAAgBK,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC,CAAC,EAAED,IAAI,CAACE,MAAM,CAAC,KAAK,CAAC,CAAC,IAAIF,IAAI;;ACCtE,0BAAe,CAACG,KAAK,EAAEH,IAAI,KAAK,CAAC,GAAGG,KAAK,CAAC,CAACC,IAAI,CAAEC,OAAO,IAAKC,iBAAiB,CAACN,IAAI,CAAC,KAAKK,OAAO,CAAC;;ACDjG,eAAgBhB,KAAK,IAAKA,KAAK,CAACkB,MAAM,CAACC,OAAO,CAAC;;ACA/C,mBAAgBC,GAAG,IAAKA,GAAG,KAAKC,SAAS;;ACIzC,WAAe,CAACC,GAAG,EAAEC,IAAI,EAAEC,YAAY,KAAK;EACxC,IAAIjB,QAAQ,CAACe,GAAG,CAAC,IAAIC,IAAI,EAAE;IACvB,MAAME,MAAM,GAAGC,OAAO,CAACH,IAAI,CAACI,KAAK,CAAC,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAACH,MAAM,EAAEI,GAAG,KAAM3B,iBAAiB,CAACuB,MAAM,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACI,GAAG,CAAE,EAAEP,GAAG,CAAC;IAChI,OAAOQ,WAAW,CAACL,MAAM,CAAC,IAAIA,MAAM,KAAKH,GAAG,GACtCQ,WAAW,CAACR,GAAG,CAACC,IAAI,CAAC,CAAC,GAClBC,YAAY,GACZF,GAAG,CAACC,IAAI,CAAC,GACbE,MAAM;;EAEhB,OAAOJ,SAAS;AACpB,CAAC;;ACdM,MAAMU,MAAM,GAAG;EACpBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE;AACV,CAAC;AACD,AAAO,MAAMC,eAAe,GAAG;EAC7BC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE,UAAU;EACpBC,SAAS,EAAE,WAAW;EACtBC,GAAG,EAAE;AACP,CAAC;AACD,AAAO,MAAMC,sBAAsB,GAAG;EACpCC,GAAG,EAAE,KAAK;EACVC,GAAG,EAAE,KAAK;EACVC,SAAS,EAAE,WAAW;EACtBC,SAAS,EAAE,WAAW;EACtBC,OAAO,EAAE,SAAS;EAClBC,QAAQ,EAAE,UAAU;EACpBC,QAAQ,EAAE;AACZ,CAAC;;ACnBD,YAAe,CAACC,MAAM,EAAEnB,GAAG,KAAK;EAC9B,MAAMoB,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEH,MAAM,CAAC;EACtC,OAAOC,IAAI,CAACpB,GAAG,CAAC;EAChB,OAAOoB,IAAI;AACb,CAAC;;ACFD,MAAMG,WAAW,GAAGC,aAAmB,CAAC,IAAI,CAAC;AAC7CD,WAAW,CAACE,WAAW,GAAG,YAAY;AACtC,MAAaC,cAAc,GAAGA,MAAMF,UAAgB,CAACD,WAAW,CAAC;AACjE,MAAaI,YAAY,GAAIC,KAAK,IAAMJ,aAAmB,CAACD,WAAW,CAACM,QAAQ,EAAE;EAAE1D,KAAK,EAAE2D,IAAI,CAACF,KAAK,EAAE,UAAU;AAAE,CAAC,EAAEA,KAAK,CAACG,QAAQ,CAAE;;ACHtI,yBAAe,CACbC,SAAS,EACTC,eAAe,EACfC,mBAAmB,EACnBC,MAAM,GAAG,IAAI,KACV;EACH,SAASC,YAAYA,CAACC,IAAI,EAAE;IAC1B,OAAO,MAAM;MACX,IAAIA,IAAI,IAAIL,SAAS,EAAE;QACrB,IAAIC,eAAe,CAACI,IAAI,CAAC,KAAKhC,eAAe,CAACK,GAAG,EAAE;UACjDuB,eAAe,CAACI,IAAI,CAAC,GAAG,CAACF,MAAM,IAAI9B,eAAe,CAACK,GAAG;;QAExDwB,mBAAmB,KAAKA,mBAAmB,CAACG,IAAI,CAAC,GAAG,IAAI,CAAC;QACzD,OAAOL,SAAS,CAACK,IAAI,CAAC;;MAExB,OAAO7C,SAAS;KACjB;;EAGH,MAAMI,MAAM,GAAG,EAAE;EACjB,KAAK,MAAMI,GAAG,IAAIgC,SAAS,EAAE;IAC3BX,MAAM,CAACiB,cAAc,CAAC1C,MAAM,EAAEI,GAAG,EAAE;MACjCuC,GAAG,EAAEH,YAAY,CAACpC,GAAG;KACtB,CAAC;;EAGJ,OAAOJ,MAAM;AACf,CAAC;;AC5BD,qBAAgBzB,KAAK,IAAKO,QAAQ,CAACP,KAAK,CAAC,IAAI,CAACkD,MAAM,CAACmB,IAAI,CAACrE,KAAK,CAAC,CAACsE,MAAM;;ACEvE,6BAAe,CAACC,aAAa,EAAET,eAAe,EAAEE,MAAM,KAAK;EACvD,MAAMH,SAAS,GAAGF,IAAI,CAACY,aAAa,EAAE,MAAM,CAAC;EAC7C,OAAQC,aAAa,CAACX,SAAS,CAAC,IAC5BX,MAAM,CAACmB,IAAI,CAACR,SAAS,CAAC,CAACS,MAAM,IAAIpB,MAAM,CAACmB,IAAI,CAACP,eAAe,CAAC,CAACQ,MAAM,IACpEpB,MAAM,CAACmB,IAAI,CAACR,SAAS,CAAC,CAACY,IAAI,CAAE5C,GAAG,IAAKiC,eAAe,CAACjC,GAAG,CAAC,MACpD,CAACmC,MAAM,IAAI9B,eAAe,CAACK,GAAG,CAAC,CAAC;AAC7C,CAAC;;ACTD,6BAAgBvC,KAAK,IAAKG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;;ACKhE,SAAS0E,YAAYA,CAACjB,KAAK,EAAE;EACzB,MAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,MAAM;IAAEqB,OAAO,GAAGD,OAAO,CAACC,OAAO;IAAEC,QAAQ;IAAEC,OAAO;IAAEnE;GAAM,GAAG8C,KAAK,IAAI,EAAE;EAC1E,MAAMsB,OAAO,GAAG1B,MAAY,CAAC1C,IAAI,CAAC;EAClC,MAAM,CAACkD,SAAS,EAAEmB,eAAe,CAAC,GAAG3B,QAAc,CAACuB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC;EAC3E,MAAM8D,oBAAoB,GAAG7B,MAAY,CAAC;IACtC8B,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX,CAAC;EACFT,OAAO,CAAC/D,OAAO,GAAGL,IAAI;EACtB0C,SAAe,CAAC,MAAM;IAClB,MAAMoC,qBAAqB,GAAGb,OAAO,CAACc,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAI,EAAGhC,SAAS,IAAK,CAAC,CAACkB,OAAO,CAAC/D,OAAO,IAClC,CAAC6C,SAAS,CAAClD,IAAI,IACfmF,qBAAqB,CAACf,OAAO,CAAC/D,OAAO,CAAC,CAAC+E,QAAQ,CAAClC,SAAS,CAAClD,IAAI,CAAC,KAC/DqF,qBAAqB,CAACnC,SAAS,EAAEqB,oBAAoB,CAAClE,OAAO,CAAC,IAC9DgE,eAAe,CAAC9B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC,EAAEyC,SAAS,CAAC;KAC1F,CAAC;IACFgB,QAAQ,IAAIY,qBAAqB,CAACQ,WAAW,EAAE;IAG/C,OAAO,MAAMR,qBAAqB,CAACQ,WAAW,EAAE;GACnD,EAAE,CAACpB,QAAQ,EAAED,OAAO,CAAC,CAAC;EACvB,OAAOsB,iBAAiB,CAACrC,SAAS,EAAEe,OAAO,CAACd,eAAe,EAAEoB,oBAAoB,CAAClE,OAAO,EAAE,KAAK,CAAC;AACrG;;AC1BO,SAASmF,aAAaA,CAAC1C,KAAK,EAAE;EACjC,MAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,MAAM;IAAE5C,IAAI;IAAEiE,OAAO,GAAGD,OAAO,CAACC,OAAO;IAAEwB,gBAAgB;IAAEC;GAAM,GAAG5C,KAAK;EACzE6C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,EAAE,eAAe,CAAC;EAC7C,MAAM,CAACrG,KAAK,EAAEwG,kBAAkB,CAAC,GAAGnD,QAAc,CAACe,GAAG,CAACQ,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,EAAEyD,GAAG,CAACQ,OAAO,CAAC8B,cAAc,EAAE/F,IAAI,EAAE8C,KAAK,CAACjC,YAAY,CAAC,CAAC,CAAC;EACzI,MAAMqC,SAAS,GAAGa,YAAY,CAAC;IAC3BE,OAAO,EAAEA,OAAO,IAAID,OAAO,CAACC,OAAO;IACnCjE;GACH,CAAC;EAIF,MAAMgG,aAAa,GAAG/B,OAAO,CAACgC,QAAQ,CAACjG,IAAI,EAAEuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE;IAAC,GAAGM,KAAK,CAACoD,KAAK;IAAER,IAAI,EAAE;MAAC,GAAGA;;GAAO,CAAC,EAAE;IAAErG;GAAO,CAAC,CAAC;EAG7H,MAAM8G,aAAa,GAAGzD,WAAiB,CAAC,CAAC1C,IAAI,EAAEX,KAAK,KAAK;IACrD,MAAM+G,KAAK,GAAG3C,GAAG,CAACQ,OAAO,CAACoC,OAAO,EAAErG,IAAI,CAAC;IACxC,IAAIoG,KAAK,EAAE;MACPA,KAAK,CAACE,EAAE,CAACC,KAAK,GAAGlH,KAAK;;GAE7B,EAAE,CAAC4E,OAAO,CAAC,CAAC;EACbvB,SAAe,CAAC,MAAM;IAClB,MAAM8D,sBAAsB,GAAGvC,OAAO,CAACc,SAAS,CAACd,OAAO,CAACgB,SAAS,CAAC;MAC/DC,IAAI,EAAG/F,IAAI,IAAK,CAAC,CAACA,IAAI,CAACa,IAAI,IAAIA,IAAI,KAAKb,IAAI,CAACa,IAAI,KAC7C6F,kBAAkB,CAACpC,GAAG,CAACtE,IAAI,CAACsH,MAAM,EAAEzG,IAAI,CAAC;KAChD,CAAC;IACFmG,aAAa,CAACnG,IAAI,EAAE,IAAI,CAAC;IACzB,OAAO,MAAM;MACTwG,sBAAsB,CAAClB,WAAW,EAAE;MACpC,MAAMoB,sBAAsB,GAAGzC,OAAO,CAAC0C,iBAAiB,IAAIlB,gBAAgB;MAC5E,IAAImB,kBAAkB,CAAC3C,OAAO,CAAC4C,MAAM,CAACC,KAAK,EAAE9G,IAAI,CAAC,GAC5C0G,sBAAsB,IAAI,CAACzC,OAAO,CAAC8C,WAAW,CAACtG,GAAG,GAClDiG,sBAAsB,EAAE;QAC1BzC,OAAO,CAAC+C,UAAU,CAAChH,IAAI,CAAC;OAC3B,MACI;QACDmG,aAAa,CAACnG,IAAI,EAAE,KAAK,CAAC;;KAEjC;GACJ,EAAE,CAACA,IAAI,EAAEiE,OAAO,EAAEwB,gBAAgB,EAAEU,aAAa,CAAC,CAAC;EACpD,OAAO;IACHC,KAAK,EAAE;MACH3E,QAAQ,EAAG9B,KAAK,IAAK;QACjB,MAAMN,KAAK,GAAG4H,kBAAkB,CAACtH,KAAK,CAAC;QACvCkG,kBAAkB,CAACxG,KAAK,CAAC;QACzB2G,aAAa,CAACvE,QAAQ,CAAC;UACnB5B,MAAM,EAAE;YACJR,KAAK;YACLW,IAAI,EAAEA;WACT;UACDd,IAAI,EAAEkC,MAAM,CAACE;SAChB,CAAC;OACL;MACDE,MAAM,EAAEA,MAAM;QACVwE,aAAa,CAACxE,MAAM,CAAC;UACjB3B,MAAM,EAAE;YACJG,IAAI,EAAEA;WACT;UACDd,IAAI,EAAEkC,MAAM,CAACC;SAChB,CAAC;OACL;MACDrB,IAAI;MACJX,KAAK;MACL6H,GAAG,EAAGC,GAAG,IAAKA,GAAG,IACbnB,aAAa,CAACkB,GAAG,CAAC;QAGdE,KAAK,EAAEA,MAAMD,GAAG,CAACC,KAAK,IAAID,GAAG,CAACC,KAAK,EAAE;QACrCC,iBAAiB,EAAGC,OAAO,IAAKH,GAAG,CAACE,iBAAiB,CAACC,OAAO,CAAC;QAC9DC,cAAc,EAAEA,MAAMJ,GAAG,CAACI,cAAc;OAC3C;KACR;IACDrE,SAAS;IACTsE,UAAU,EAAE;MACRC,OAAO,EAAE,CAAC,CAAChE,GAAG,CAACP,SAAS,CAAC2B,MAAM,EAAE7E,IAAI,CAAC;MACtCwE,OAAO,EAAE,CAAC,CAACf,GAAG,CAACP,SAAS,CAACuB,WAAW,EAAEzE,IAAI,CAAC;MAC3C0H,SAAS,EAAE,CAAC,CAACjE,GAAG,CAACP,SAAS,CAACwB,aAAa,EAAE1E,IAAI,CAAC;MAC/C2H,KAAK,EAAElE,GAAG,CAACP,SAAS,CAAC2B,MAAM,EAAE7E,IAAI;;GAExC;AACL;;MCtFM4H,UAAU,GAAI9E,KAAK,IAAKA,KAAK,CAAC+E,MAAM,CAACrC,aAAa,CAAC1C,KAAK,CAAC,CAAC;;ACDhE,oBAAe,CAAC9C,IAAI,EAAE8H,wBAAwB,EAAEjD,MAAM,EAAE3F,IAAI,EAAEoI,OAAO,KAAKQ,wBAAwB,GAC9FvF,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEqC,MAAM,CAAC7E,IAAI,CAAC,CAAC,EAAE;EAAE+H,KAAK,EAAExF,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAGqC,MAAM,CAAC7E,IAAI,CAAC,IAAI6E,MAAM,CAAC7E,IAAI,CAAC,CAAC+H,KAAK,GAAGlD,MAAM,CAAC7E,IAAI,CAAC,CAAC+H,KAAK,GAAG,EAAG,CAAC,EAAE;IAAE,CAAC7I,IAAI,GAAGoI,OAAO,IAAI;GAAM;AAAE,CAAC,CAAC,GAAG,EAAE;;ACDjM,aAAgBjI,KAAK,IAAK,OAAO,CAAC2I,IAAI,CAAC3I,KAAK,CAAC;;ACE7C,oBAAgB4I,KAAK,IACnBlH,OAAO,CAACkH,KAAK,CAACC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAClH,KAAK,CAAC,OAAO,CAAC,CAAC;;ACAzC,SAASmH,GAAGA,CAACC,MAAM,EAAExH,IAAI,EAAEvB,KAAK,EAAE;EAC/C,IAAIgJ,KAAK,GAAG,CAAC,CAAC;EAEd,MAAMC,QAAQ,GAAGC,KAAK,CAAC3H,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAG4H,YAAY,CAAC5H,IAAI,CAAC;EAC1D,MAAM+C,MAAM,GAAG2E,QAAQ,CAAC3E,MAAM;EAC9B,MAAM8E,SAAS,GAAG9E,MAAM,GAAG,CAAC;EAC5B,OAAO,EAAE0E,KAAK,GAAG1E,MAAM,EAAE;IACvB,MAAMzC,GAAG,GAAGoH,QAAQ,CAACD,KAAK,CAAC;IAC3B,IAAIK,QAAQ,GAAGrJ,KAAK;IACpB,IAAIgJ,KAAK,KAAKI,SAAS,EAAE;MACvB,MAAME,QAAQ,GAAGP,MAAM,CAAClH,GAAG,CAAC;MAC5BwH,QAAQ,GACN9I,QAAQ,CAAC+I,QAAQ,CAAC,IAAInJ,KAAK,CAACC,OAAO,CAACkJ,QAAQ,CAAC,GACzCA,QAAQ,GACR,CAACC,KAAK,CAAC,CAACN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,GAC1B,EAAE,GACF,EAAE;;IAEZD,MAAM,CAAClH,GAAG,CAAC,GAAGwH,QAAQ;IACtBN,MAAM,GAAGA,MAAM,CAAClH,GAAG,CAAC;;EAEtB,OAAOkH,MAAM;AACf;;ACrBA,MAAMS,YAAY,GAAGA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,KAAK;EACpD,KAAK,MAAM9H,GAAG,IAAI8H,WAAW,IAAIzG,MAAM,CAACmB,IAAI,CAACoF,MAAM,CAAC,EAAE;IAClD,MAAM1C,KAAK,GAAG3C,GAAG,CAACqF,MAAM,EAAE5H,GAAG,CAAC;IAC9B,IAAIkF,KAAK,EAAE;MACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,MAAMjG,OAAO,GAAG2C,IAAI,CAACoD,KAAK,EAAE,IAAI,CAAC;MACjC,IAAIE,EAAE,IAAIyC,QAAQ,CAACzC,EAAE,CAACtG,IAAI,CAAC,EAAE;QACzB,IAAIsG,EAAE,CAACY,GAAG,CAACE,KAAK,IAAIjG,WAAW,CAACmF,EAAE,CAACY,GAAG,CAACE,KAAK,EAAE,CAAC,EAAE;UAC7C;SACH,MACI,IAAId,EAAE,CAAC2C,IAAI,EAAE;UACd3C,EAAE,CAAC2C,IAAI,CAAC,CAAC,CAAC,CAAC7B,KAAK,EAAE;UAClB;;OAEP,MACI,IAAIxH,QAAQ,CAACS,OAAO,CAAC,EAAE;QACxBwI,YAAY,CAACxI,OAAO,EAAE0I,QAAQ,CAAC;;;;AAI/C,CAAC;;ACxBD,yBAAe,CAAC/I,IAAI,EAAEqI,KAAK,EAAEa,OAAO,KAAKA,OAAO,IAAI,CAACA,OAAO,CAACC,WAAW,GAClED,OAAO,CAACE,SAAS,IAAK,GAAEpJ,IAAK,IAAGkJ,OAAO,CAACG,UAAW,GAAE,GACpD,GAAErJ,IAAK,IAAGqI,KAAM,GAAE;;ACFzB,kBAAe,MAAM;EACnB,MAAMiB,CAAC,GACL,OAAOC,WAAW,KAAK,WAAW,GAAGnK,IAAI,CAACoK,GAAG,EAAE,GAAGD,WAAW,CAACC,GAAG,EAAE,GAAG,IAAI;EAE5E,OAAO,sCAAsC,CAACtB,OAAO,CAAC,OAAO,EAAGuB,CAAC,IAAK;IACpE,MAAMC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,EAAE,GAAGN,CAAC,IAAI,EAAE,GAAG,CAAC;IAE3C,OAAO,CAACG,CAAC,IAAI,GAAG,GAAGC,CAAC,GAAIA,CAAC,GAAG,GAAG,GAAI,GAAG,EAAEG,QAAQ,CAAC,EAAE,CAAC;GACrD,CAAC;AACJ,CAAC;;ACRD,cAAe,CAACpD,MAAM,GAAG,EAAE,EAAEqD,OAAO,KAAKrD,MAAM,CAACsD,GAAG,CAAE1K,KAAK,IAAMkD,MAAM,CAACC,MAAM,CAAC;EAAE,CAACsH,OAAO,GAAIzK,KAAK,IAAIA,KAAK,CAACyK,OAAO,CAAC,IAAKE,UAAU;AAAG,CAAC,EAAE3K,KAAK,CAAE,CAAC;;ACAjI,SAAS4K,MAAMA,CAAC9K,IAAI,EAAEE,KAAK,EAAE;EACxC,OAAO,CAAC,GAAG8F,qBAAqB,CAAChG,IAAI,CAAC,EAAE,GAAGgG,qBAAqB,CAAC9F,KAAK,CAAC,CAAC;AAC5E;;ACHA,sBAAgBA,KAAK,IACnBG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGG,KAAK,CAACH,KAAK,CAACsE,MAAM,CAAC,CAACuG,IAAI,CAACxJ,SAAS,CAAC,GAAGA,SAAS;;ACAzD,SAASyJ,MAAMA,CAAChL,IAAI,EAAEkJ,KAAK,EAAEhJ,KAAK,EAAE;EAC/C,OAAO,CACH,GAAGF,IAAI,CAACiL,KAAK,CAAC,CAAC,EAAE/B,KAAK,CAAC,EACvB,GAAGlD,qBAAqB,CAAC9F,KAAK,CAAC,EAC/B,GAAGF,IAAI,CAACiL,KAAK,CAAC/B,KAAK,CAAC,CACvB;AACL;;ACLA,mBAAe,CACblJ,IAAI,EACJkL,IAAI,EACJC,EAAE,KACC;EACH,IAAI9K,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,EAAE;IACvB,IAAIgC,WAAW,CAAChC,IAAI,CAACmL,EAAE,CAAC,CAAC,EAAE;MACzBnL,IAAI,CAACmL,EAAE,CAAC,GAAG5J,SAAS;;IAEtBvB,IAAI,CAACoL,MAAM,CAACD,EAAE,EAAE,CAAC,EAAEnL,IAAI,CAACoL,MAAM,CAACF,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,OAAOlL,IAAI;;EAGb,OAAO,EAAE;AACX,CAAC;;ACfD,eAAe,CAAC2J,MAAM,EAAEgB,OAAO,KAAKhB,MAAM,CAACiB,GAAG,CAAC,CAAC3D,KAAK,GAAG,EAAE,KAAKpD,IAAI,CAACoD,KAAK,EAAE0D,OAAO,CAAC,CAAC;;ACArE,SAASU,OAAOA,CAACrL,IAAI,EAAEE,KAAK,EAAE;EACzC,OAAO,CAAC,GAAG8F,qBAAqB,CAAC9F,KAAK,CAAC,EAAE,GAAG8F,qBAAqB,CAAChG,IAAI,CAAC,CAAC;AAC5E;;ACCA,SAASsL,eAAeA,CAACtL,IAAI,EAAEuL,OAAO,EAAE;EACtC,IAAIC,CAAC,GAAG,CAAC;EACT,MAAMC,IAAI,GAAG,CAAC,GAAGzL,IAAI,CAAC;EACtB,KAAK,MAAMkJ,KAAK,IAAIqC,OAAO,EAAE;IAC3BE,IAAI,CAACL,MAAM,CAAClC,KAAK,GAAGsC,CAAC,EAAE,CAAC,CAAC;IACzBA,CAAC,EAAE;;EAEL,OAAO5J,OAAO,CAAC6J,IAAI,CAAC,CAACjH,MAAM,GAAGiH,IAAI,GAAG,EAAE;AACzC;AAEA,qBAAe,CAACzL,IAAI,EAAEkJ,KAAK,KACzBlH,WAAW,CAACkH,KAAK,CAAC,GACd,EAAE,GACFoC,eAAe,CACftL,IAAI,EACHgG,qBAAqB,CAACkD,KAAK,CAAC,CAAEwC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CACrD,CAAC;;ACpBL,mBAAe,CAAC5L,IAAI,EAAE6L,MAAM,EAAEC,MAAM,KAAK;EACvC9L,IAAI,CAAC6L,MAAM,CAAC,GAAG,CAAC7L,IAAI,CAAC8L,MAAM,CAAC,EAAG9L,IAAI,CAAC8L,MAAM,CAAC,GAAG9L,IAAI,CAAC6L,MAAM,CAAC,CAAE,CAAC,CAAC,CAAC;AACjE,CAAC;;ACFD,iBAAgB3L,KAAK,IAAK,OAAOA,KAAK,KAAK,SAAS;;ACMpD,SAAS6L,OAAOA,CAAC9C,MAAM,EAAE+C,UAAU,EAAE;EACnC,MAAMxH,MAAM,GAAGwH,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACzG,MAAM;EAC7C,IAAI0E,KAAK,GAAG,CAAC;EACb,OAAOA,KAAK,GAAG1E,MAAM,EAAE;IACrByE,MAAM,GAAGjH,WAAW,CAACiH,MAAM,CAAC,GAAGC,KAAK,EAAE,GAAGD,MAAM,CAAC+C,UAAU,CAAC9C,KAAK,EAAE,CAAC,CAAC;;EAEtE,OAAOD,MAAM;AACf;AACA,AAAe,SAASgD,KAAKA,CAAChD,MAAM,EAAExH,IAAI,EAAE;EAC1C,MAAMuK,UAAU,GAAG5C,KAAK,CAAC3H,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAG4H,YAAY,CAAC5H,IAAI,CAAC;EAC5D,MAAMyK,WAAW,GAAGF,UAAU,CAACxH,MAAM,IAAI,CAAC,GAAGyE,MAAM,GAAG8C,OAAO,CAAC9C,MAAM,EAAE+C,UAAU,CAAC;EACjF,MAAMjK,GAAG,GAAGiK,UAAU,CAACA,UAAU,CAACxH,MAAM,GAAG,CAAC,CAAC;EAC7C,IAAI2H,cAAc;EAClB,IAAID,WAAW,EAAE;IACf,OAAOA,WAAW,CAACnK,GAAG,CAAC;;EAEzB,KAAK,IAAIqK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACzG,MAAM,EAAE4H,CAAC,EAAE,EAAE;IACvD,IAAIlD,KAAK,GAAG,CAAC,CAAC;IACd,IAAImD,SAAS;IACb,MAAMC,YAAY,GAAGN,UAAU,CAACf,KAAK,CAAC,CAAC,EAAE,EAAEmB,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,MAAMG,kBAAkB,GAAGD,YAAY,CAAC9H,MAAM,GAAG,CAAC;IAClD,IAAI4H,CAAC,GAAG,CAAC,EAAE;MACTD,cAAc,GAAGlD,MAAM;;IAEzB,OAAO,EAAEC,KAAK,GAAGoD,YAAY,CAAC9H,MAAM,EAAE;MACpC,MAAM+B,IAAI,GAAG+F,YAAY,CAACpD,KAAK,CAAC;MAChCmD,SAAS,GAAGA,SAAS,GAAGA,SAAS,CAAC9F,IAAI,CAAC,GAAG0C,MAAM,CAAC1C,IAAI,CAAC;MACtD,IAAIgG,kBAAkB,KAAKrD,KAAK,KAC5BzI,QAAQ,CAAC4L,SAAS,CAAC,IAAI3H,aAAa,CAAC2H,SAAS,CAAC,IAC9ChM,KAAK,CAACC,OAAO,CAAC+L,SAAS,CAAC,IACvB,CAACA,SAAS,CAACjL,MAAM,CAAEpB,IAAI,IAAMS,QAAQ,CAACT,IAAI,CAAC,IAAI,CAAC0E,aAAa,CAAC1E,IAAI,CAAC,IAAKwM,SAAS,CAACxM,IAAI,CAAC,CAAC,CAACwE,MAAO,CAAC,EAAE;QACvG2H,cAAc,GAAG,OAAOA,cAAc,CAAC5F,IAAI,CAAC,GAAG,OAAO0C,MAAM,CAAC1C,IAAI,CAAC;;MAEpE4F,cAAc,GAAGE,SAAS;;;EAG9B,OAAOpD,MAAM;AACf;;AC3CA,gBAAe,CAACwD,WAAW,EAAEvD,KAAK,EAAEhJ,KAAK,KAAK;EAC5CuM,WAAW,CAACvD,KAAK,CAAC,GAAGhJ,KAAK;EAC1B,OAAOuM,WAAW;AACpB,CAAC;;MCeYC,aAAa,GAAI/I,KAAK,IAAK;EACpC,MAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,MAAM;IAAEqB,OAAO,GAAGD,OAAO,CAACC,OAAO;IAAEjE,IAAI;IAAE8J,OAAO,GAAG,IAAI;IAAErE;GAAmB,GAAG3C,KAAK;EACpF,MAAMgJ,UAAU,GAAGpJ,MAAY,CAAC,EAAE,CAAC;EACnC,MAAM,CAACoG,MAAM,EAAEiD,SAAS,CAAC,GAAGrJ,QAAc,CAACsJ,MAAM,CAAC/H,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC,EAAE8J,OAAO,CAAC,CAAC;EAC9F7F,OAAO,CAAC4C,MAAM,CAACC,KAAK,CAACoF,GAAG,CAAClM,IAAI,CAAC;EAC9B,MAAMiK,QAAM,GAAGA,CAAC5K,KAAK,EAAE6J,OAAO,KAAK;IAC/B,MAAMiD,WAAW,GAAGhH,qBAAqB,CAAC9F,KAAK,CAAC;IAChD,MAAM+M,uBAAuB,GAAGC,MAAQ,CAACpI,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC,EAAEmM,WAAW,CAAC;IACxFlI,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAEqM,MAAQ,EAAE;MACnDE,IAAI,EAAEC,cAAc,CAACnN,KAAK;KAC7B,EAAE+M,uBAAuB,EAAE,KAAK,CAAC;IAClCL,SAAS,CAACC,MAAM,CAACI,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;IACnDgC,UAAU,CAACzL,OAAO,GAAGoM,iBAAiB,CAACzM,IAAI,EAAEoM,uBAAuB,CAACzI,MAAM,GAAGwI,WAAW,CAACxI,MAAM,EAAEuF,OAAO,CAAC;GAC7G;EACD,MAAMsB,SAAO,GAAGA,CAACnL,KAAK,EAAE6J,OAAO,KAAK;IAChC,MAAMkD,uBAAuB,GAAGM,OAAS,CAACzI,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC,EAAEmF,qBAAqB,CAAC9F,KAAK,CAAC,CAAC;IAC1G4E,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAE0M,OAAS,EAAE;MACpDH,IAAI,EAAEC,cAAc,CAACnN,KAAK;KAC7B,EAAE+M,uBAAuB,CAAC;IAC3BL,SAAS,CAACC,MAAM,CAACI,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;IACnDgC,UAAU,CAACzL,OAAO,GAAGoM,iBAAiB,CAACzM,IAAI,EAAE,CAAC,EAAEkJ,OAAO,CAAC;GAC3D;EACD,MAAMyD,MAAM,GAAItE,KAAK,IAAK;IACtB,MAAM+D,uBAAuB,GAAGQ,aAAa,CAAC3I,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC,EAAEqI,KAAK,CAAC;IACvFpE,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAE4M,aAAa,EAAE;MACxDL,IAAI,EAAElE;KACT,EAAE+D,uBAAuB,CAAC;IAC3BL,SAAS,CAACC,MAAM,CAACI,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;GACtD;EACD,MAAMK,QAAM,GAAGA,CAAC9B,KAAK,EAAEhJ,KAAK,EAAE6J,OAAO,KAAK;IACtC,MAAMkD,uBAAuB,GAAGS,MAAQ,CAAC5I,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC,EAAEqI,KAAK,EAAElD,qBAAqB,CAAC9F,KAAK,CAAC,CAAC;IAChH4E,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAE6M,MAAQ,EAAE;MACnDN,IAAI,EAAElE,KAAK;MACXyE,IAAI,EAAEN,cAAc,CAACnN,KAAK;KAC7B,EAAE+M,uBAAuB,CAAC;IAC3BL,SAAS,CAACC,MAAM,CAACI,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;IACnDgC,UAAU,CAACzL,OAAO,GAAGoM,iBAAiB,CAACzM,IAAI,EAAEqI,KAAK,EAAEa,OAAO,CAAC;GAC/D;EACD,MAAM6D,IAAI,GAAGA,CAAC/B,MAAM,EAAEC,MAAM,KAAK;IAC7B,MAAMW,WAAW,GAAG3H,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC;IACrDgN,WAAW,CAACpB,WAAW,EAAEZ,MAAM,EAAEC,MAAM,CAAC;IACxChH,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAEgN,WAAW,EAAE;MACtDT,IAAI,EAAEvB,MAAM;MACZ8B,IAAI,EAAE7B;KACT,EAAEW,WAAW,EAAE,KAAK,CAAC;IACtBG,SAAS,CAACC,MAAM,CAACJ,WAAW,EAAE9B,OAAO,CAAC,CAAC;GAC1C;EACD,MAAMmD,IAAI,GAAGA,CAAC5C,IAAI,EAAEC,EAAE,KAAK;IACvB,MAAMsB,WAAW,GAAG3H,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC;IACrDkN,WAAW,CAACtB,WAAW,EAAEvB,IAAI,EAAEC,EAAE,CAAC;IAClCrG,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAEkN,WAAW,EAAE;MACtDX,IAAI,EAAElC,IAAI;MACVyC,IAAI,EAAExC;KACT,EAAEsB,WAAW,EAAE,KAAK,CAAC;IACtBG,SAAS,CAACC,MAAM,CAACJ,WAAW,EAAE9B,OAAO,CAAC,CAAC;GAC1C;EACD,MAAMqD,MAAM,GAAGA,CAAC9E,KAAK,EAAEhJ,KAAK,KAAK;IAC7B,MAAMuM,WAAW,GAAG3H,OAAO,CAACgI,mBAAmB,CAACjM,IAAI,CAAC;IACrD,MAAMoM,uBAAuB,GAAGgB,QAAQ,CAACxB,WAAW,EAAEvD,KAAK,EAAEhJ,KAAK,CAAC;IACnE4E,OAAO,CAACqI,qBAAqB,CAACxC,OAAO,EAAE9J,IAAI,EAAEoN,QAAQ,EAAE;MACnDb,IAAI,EAAElE,KAAK;MACXyE,IAAI,EAAEzN;KACT,EAAEuM,WAAW,EAAE,IAAI,EAAE,KAAK,CAAC;IAC5BG,SAAS,CAACC,MAAM,CAACI,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;GACtD;EACDpH,SAAe,CAAC,MAAM;IAClBuB,OAAO,CAAC8C,WAAW,CAACtG,GAAG,GAAG,KAAK;IAC/B,IAAIwD,OAAO,CAAC4C,MAAM,CAACwG,QAAQ,EAAE;MACzBpJ,OAAO,CAACc,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;KACnC,MACI;MACD,KAAK,MAAMoI,UAAU,IAAIrJ,OAAO,CAAC4C,MAAM,CAAC0G,KAAK,EAAE;QAC3C,IAAIvN,IAAI,CAACwN,UAAU,CAACF,UAAU,CAAC,EAAE;UAC7BrJ,OAAO,CAACc,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;UAChC;;;;IAIZjB,OAAO,CAACc,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;MACzBlF,IAAI;MACJyG,MAAM,EAAExC,OAAO,CAAC6B;KACnB,CAAC;IACFgG,UAAU,CAACzL,OAAO,IACdwI,YAAY,CAAC5E,OAAO,CAACoC,OAAO,EAAGnF,GAAG,IAAKA,GAAG,CAACsM,UAAU,CAAC1B,UAAU,CAACzL,OAAO,CAAC,CAAC;IAC9EyL,UAAU,CAACzL,OAAO,GAAG,EAAE;IACvB4D,OAAO,CAACc,SAAS,CAAC+B,KAAK,CAAC5B,IAAI,CAAC;MACzBlF,IAAI;MACJyG,MAAM,EAAEgH,OAAO,CAAC,CAAC,GAAG3E,MAAM,CAAC,EAAEgB,OAAO;KACvC,CAAC;IACF7F,OAAO,CAACd,eAAe,CAACyB,OAAO,IAAIX,OAAO,CAACyJ,YAAY,EAAE;GAC5D,EAAE,CAAC5E,MAAM,EAAE9I,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;EACpCpH,SAAe,CAAC,MAAM;IAClB,MAAMiL,sBAAsB,GAAG1J,OAAO,CAACc,SAAS,CAAC+B,KAAK,CAAC7B,SAAS,CAAC;MAC7DC,IAAIA,CAAC0I,OAAO,EAAE;QACV,IAAIA,OAAO,CAACC,OAAO,EAAE;UACjBzC,KAAK,CAACnH,OAAO,CAACoC,OAAO,EAAEuH,OAAO,CAAC5N,IAAI,IAAIA,IAAI,CAAC;UAC5CoL,KAAK,CAACnH,OAAO,CAAC6B,WAAW,EAAE8H,OAAO,CAAC5N,IAAI,IAAIA,IAAI,CAAC;UAChD4N,OAAO,CAAC5N,IAAI,GACNmI,GAAG,CAAClE,OAAO,CAAC6B,WAAW,EAAE8H,OAAO,CAAC5N,IAAI,EAAE4N,OAAO,CAACnH,MAAM,CAAC,GACtDmH,OAAO,CAACnH,MAAM,KAAKxC,OAAO,CAAC6B,WAAW,GAAG8H,OAAO,CAACnH,MAAM,CAAC;UAC9DsF,SAAS,CAACC,MAAM,CAACvI,GAAG,CAACQ,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,CAAC,EAAE8J,OAAO,CAAC,CAAC;;;KAGrE,CAAC;IACF,CAACrG,GAAG,CAACQ,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,CAAC,IAAImI,GAAG,CAAClE,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,EAAE,EAAE,CAAC;IACrE,OAAO,MAAM;MACT2N,sBAAsB,CAACrI,WAAW,EAAE;MACpC,IAAIrB,OAAO,CAAC0C,iBAAiB,IAAIlB,gBAAgB,EAAE;QAC/CxB,OAAO,CAAC+C,UAAU,CAAChH,IAAI,CAAC;QACxBoL,KAAK,CAACnH,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,CAAC;OACnC,MACI;QACD,MAAM8N,gBAAgB,GAAGrK,GAAG,CAACQ,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,CAAC;QACvD8N,gBAAgB,IAAI3F,GAAG,CAAClE,OAAO,CAAC6B,WAAW,EAAE9F,IAAI,EAAE8N,gBAAgB,CAAC;;KAE3E;GACJ,EAAE,CAAC9N,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,EAAErE,gBAAgB,CAAC,CAAC;EAC9C,OAAO;IACHsH,IAAI,EAAErK,WAAiB,CAACqK,IAAI,EAAE,CAAC/M,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IACvDmD,IAAI,EAAEvK,WAAiB,CAACuK,IAAI,EAAE,CAACjN,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IACvDU,OAAO,EAAE9H,WAAiB,CAAC8H,SAAO,EAAE,CAACxK,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IAC7DG,MAAM,EAAEvH,WAAiB,CAACuH,QAAM,EAAE,CAACjK,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IAC3D6C,MAAM,EAAEjK,WAAiB,CAACiK,MAAM,EAAE,CAAC3M,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IAC3DK,MAAM,EAAEzH,WAAiB,CAACyH,QAAM,EAAE,CAACnK,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IAC3DqD,MAAM,EAAEzK,WAAiB,CAACyK,MAAM,EAAE,CAACnN,IAAI,EAAEiE,OAAO,EAAE6F,OAAO,CAAC,CAAC;IAC3DhB,MAAM,EAAEA;GACX;AACL,CAAC;;AClJD,gBAAe,CAACC,QAAQ,EAAEgF,IAAI,KAAK;EACjC,IAAIC,KAAK,GAAG,CAAC;EACb,OAAO,CAAC,GAAGC,IAAI,KAAK;IAChBC,YAAY,CAACF,KAAK,CAAC;IACnBA,KAAK,GAAGG,MAAM,CAACC,UAAU,CAAC,MAAMrF,QAAQ,CAAC,GAAGkF,IAAI,CAAC,EAAEF,IAAI,CAAC;GAC3D;AACH,CAAC;;ACJD,mBAAgB1O,KAAK,IAAKE,iBAAiB,CAACF,KAAK,CAAC,IAAI,CAACC,YAAY,CAACD,KAAK,CAAC;;ACC3D,SAASgP,SAASA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAChD,IAAIC,WAAW,CAACF,OAAO,CAAC,IACpBE,WAAW,CAACD,OAAO,CAAC,IACpB7O,YAAY,CAAC4O,OAAO,CAAC,IACrB5O,YAAY,CAAC6O,OAAO,CAAC,EAAE;IACvB,OAAOD,OAAO,KAAKC,OAAO;;EAE9B,MAAME,KAAK,GAAGlM,MAAM,CAACmB,IAAI,CAAC4K,OAAO,CAAC;EAClC,MAAMI,KAAK,GAAGnM,MAAM,CAACmB,IAAI,CAAC6K,OAAO,CAAC;EAClC,IAAIE,KAAK,CAAC9K,MAAM,KAAK+K,KAAK,CAAC/K,MAAM,EAAE;IAC/B,OAAO,KAAK;;EAEhB,KAAK,MAAMzC,GAAG,IAAIuN,KAAK,EAAE;IACrB,MAAME,IAAI,GAAGL,OAAO,CAACpN,GAAG,CAAC;IACzB,IAAI,CAACwN,KAAK,CAACtJ,QAAQ,CAAClE,GAAG,CAAC,EAAE;MACtB,OAAO,KAAK;;IAEhB,IAAIA,GAAG,KAAK,KAAK,EAAE;MACf,MAAM0N,IAAI,GAAGL,OAAO,CAACrN,GAAG,CAAC;MACzB,IAAI,CAACtB,QAAQ,CAAC+O,IAAI,CAAC,IAAInP,KAAK,CAACC,OAAO,CAACkP,IAAI,CAAC,MACrC/O,QAAQ,CAACgP,IAAI,CAAC,IAAIpP,KAAK,CAACC,OAAO,CAACmP,IAAI,CAAC,CAAC,GACrC,CAACP,SAAS,CAACM,IAAI,EAAEC,IAAI,CAAC,GACtBD,IAAI,KAAKC,IAAI,EAAE;QACjB,OAAO,KAAK;;;;EAIxB,OAAO,IAAI;AACf;;AC9BA,0BAAgBC,IAAI,KAAM;EACtBC,UAAU,EAAE,CAACD,IAAI,IAAIA,IAAI,KAAKtN,eAAe,CAACG,QAAQ;EACtDqN,QAAQ,EAAEF,IAAI,KAAKtN,eAAe,CAACC,MAAM;EACzCwN,UAAU,EAAEH,IAAI,KAAKtN,eAAe,CAACE,QAAQ;EAC7CwN,OAAO,EAAEJ,IAAI,KAAKtN,eAAe,CAACK,GAAG;EACrCsN,SAAS,EAAEL,IAAI,KAAKtN,eAAe,CAACI;AACxC,CAAC,CAAC;;ACPF,mBAAgB1C,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,MAAM;;ACAnD,kBAAgBG,KAAK,IAAK,OAAOA,KAAK,KAAK,UAAU;;ACArD,qBAAgBA,KAAK,IAAKA,KAAK,YAAY8P,WAAW;;ACAtD,wBAAgBlQ,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAM,iBAAgB;;ACA9D,oBAAgBD,OAAO,IAAKA,OAAO,CAACC,IAAI,KAAK,OAAO;;ACEpD,iCAAgBgI,GAAG,IAAKkI,YAAY,CAAClI,GAAG,CAAC,IAAIpH,eAAe,CAACoH,GAAG,CAAC;;ACFjE,gBAAgB7H,KAAK,IAAK,OAAOA,KAAK,KAAK,QAAQ;;ACAnD,YAAe,OAAO8O,MAAM,KAAK,WAAW,IACxC,OAAOA,MAAM,CAACgB,WAAW,KAAK,WAAW,IACzC,OAAOE,QAAQ,KAAK,WAAW;;ACF5B,MAAMC,YAAY,CAAC;EACxBC,WAAWA,GAAG;IACV,IAAI,CAACC,SAAS,GAAG,EAAE;;EAEvBtD,GAAGA,CAACuD,QAAQ,EAAE;IACV,IAAI,CAACD,SAAS,CAACE,IAAI,CAACD,QAAQ,CAAC;;EAEjCnK,WAAWA,GAAG;IACV,KAAK,MAAMqK,QAAQ,IAAI,IAAI,CAACH,SAAS,EAAE;MACnCG,QAAQ,EAAE;;IAEd,IAAI,CAACH,SAAS,GAAG,EAAE;;AAEzB;AACA,MAAMI,UAAU,CAAC;EACfL,WAAWA,CAACM,QAAQ,EAAEC,YAAY,EAAE;IAChC,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACE,MAAM,GAAG,KAAK;IACnBD,YAAY,CAAC5D,GAAG,CAAC,MAAO,IAAI,CAAC6D,MAAM,GAAG,IAAK,CAAC;;EAEhD7K,IAAIA,CAAC7F,KAAK,EAAE;IACR,IAAI,CAAC,IAAI,CAAC0Q,MAAM,EAAE;MACd,IAAI,CAACF,QAAQ,CAAC3K,IAAI,CAAC7F,KAAK,CAAC;;;AAGnC;AACA,AAAe,MAAM2Q,OAAO,CAAC;EAC3BT,WAAWA,GAAG;IACV,IAAI,CAACU,SAAS,GAAG,EAAE;;EAEvB/K,IAAIA,CAAC7F,KAAK,EAAE;IACR,KAAK,MAAMwQ,QAAQ,IAAI,IAAI,CAACI,SAAS,EAAE;MACnCJ,QAAQ,CAAC3K,IAAI,CAAC7F,KAAK,CAAC;;;EAG5B4F,SAASA,CAAC4K,QAAQ,EAAE;IAChB,MAAMC,YAAY,GAAG,IAAIR,YAAY,EAAE;IACvC,MAAMY,UAAU,GAAG,IAAIN,UAAU,CAACC,QAAQ,EAAEC,YAAY,CAAC;IACzD,IAAI,CAACG,SAAS,CAACP,IAAI,CAACQ,UAAU,CAAC;IAC/B,OAAOJ,YAAY;;EAEvBxK,WAAWA,GAAG;IACV,IAAI,CAAC2K,SAAS,GAAG,EAAE;;AAEzB;;AC3CA,MAAME,aAAa,GAAG;EAClB9Q,KAAK,EAAE,KAAK;EACZuF,OAAO,EAAE;AACb,CAAC;AACD,MAAMwL,WAAW,GAAG;EAAE/Q,KAAK,EAAE,IAAI;EAAEuF,OAAO,EAAE;AAAK,CAAC;AAClD,wBAAgBsE,OAAO,IAAK;EACxB,IAAI1J,KAAK,CAACC,OAAO,CAACyJ,OAAO,CAAC,EAAE;IACxB,IAAIA,OAAO,CAACvF,MAAM,GAAG,CAAC,EAAE;MACpB,MAAM8C,MAAM,GAAGyC,OAAO,CACjB3I,MAAM,CAAE8P,MAAM,IAAKA,MAAM,IAAIA,MAAM,CAACtQ,OAAO,IAAI,CAACsQ,MAAM,CAACnM,QAAQ,CAAC,CAChE6F,GAAG,CAAEsG,MAAM,IAAKA,MAAM,CAAChR,KAAK,CAAC;MAClC,OAAO;QAAEA,KAAK,EAAEoH,MAAM;QAAE7B,OAAO,EAAE,CAAC,CAAC6B,MAAM,CAAC9C;OAAQ;;IAEtD,OAAOuF,OAAO,CAAC,CAAC,CAAC,CAACnJ,OAAO,IAAI,CAACmJ,OAAO,CAAC,CAAC,CAAC,CAAChF,QAAQ,GAEzCgF,OAAO,CAAC,CAAC,CAAC,CAACoH,UAAU,IAAI,CAACnP,WAAW,CAAC+H,OAAO,CAAC,CAAC,CAAC,CAACoH,UAAU,CAACjR,KAAK,CAAC,GAC5D8B,WAAW,CAAC+H,OAAO,CAAC,CAAC,CAAC,CAAC7J,KAAK,CAAC,IAAI6J,OAAO,CAAC,CAAC,CAAC,CAAC7J,KAAK,KAAK,EAAE,GACpD+Q,WAAW,GACX;MAAE/Q,KAAK,EAAE6J,OAAO,CAAC,CAAC,CAAC,CAAC7J,KAAK;MAAEuF,OAAO,EAAE;KAAM,GAC9CwL,WAAW,GACnBD,aAAa;;EAEvB,OAAOA,aAAa;AACxB,CAAC;;ACvBD,uBAAe,CAAC9Q,KAAK,EAAE;EAAEkR,aAAa;EAAEC,WAAW;EAAEC;AAAW,CAAC,KAAKtP,WAAW,CAAC9B,KAAK,CAAC,GAClFA,KAAK,GACLkR,aAAa,GACTlR,KAAK,KAAK,EAAE,GACRqR,GAAG,GACH,CAACrR,KAAK,GACVmR,WAAW,GACP,IAAIpR,IAAI,CAACC,KAAK,CAAC,GACfoR,UAAU,GACNA,UAAU,CAACpR,KAAK,CAAC,GACjBA,KAAK;;ACXvB,8BAAgB6J,OAAO,IAAK,CAAC,GAAGA,OAAO,CAAC,CACnC3I,MAAM,CAAC,CAAC;EAAEoQ;AAAS,CAAC,KAAKA,QAAQ,CAAC,CAClC5G,GAAG,CAAC,CAAC;EAAE1K;AAAM,CAAC,KAAKA,KAAK,CAAC;;ACF9B,MAAMuR,aAAa,GAAG;EACpBhM,OAAO,EAAE,KAAK;EACdvF,KAAK,EAAE;AACT,CAAC;AACD,qBAAgB6J,OAAO,IAAK1J,KAAK,CAACC,OAAO,CAACyJ,OAAO,CAAC,GAC9CA,OAAO,CAACjI,MAAM,CAAC,CAAC4P,QAAQ,EAAER,MAAM,KAAKA,MAAM,IAAIA,MAAM,CAACtQ,OAAO,IAAI,CAACsQ,MAAM,CAACnM,QAAQ,GAC7E;EACEU,OAAO,EAAE,IAAI;EACbvF,KAAK,EAAEgR,MAAM,CAAChR;AAClB,CAAC,GACCwR,QAAQ,EAAED,aAAa,CAAC,GAC5BA,aAAa;;ACFF,SAASE,aAAaA,CAAC1K,KAAK,EAAE;EACzC,IAAIA,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;IACnB,MAAMY,GAAG,GAAGd,KAAK,CAACE,EAAE,CAACY,GAAG;IAKxB,IAAI6J,WAAW,CAAC7J,GAAG,CAAC,EAAE;MAClB,OAAOA,GAAG,CAAC8J,KAAK;;IAEpB,IAAI5B,YAAY,CAAClI,GAAG,CAAC,EAAE;MACnB,OAAO+J,aAAa,CAAC7K,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,CAAC5J,KAAK;;IAE7C,IAAI6R,gBAAgB,CAAChK,GAAG,CAAC,EAAE;MACvB,OAAOiK,sBAAsB,CAACjK,GAAG,CAACgC,OAAO,CAAC;;IAE9C,IAAIkI,eAAU,CAAClK,GAAG,CAAC,EAAE;MACjB,OAAOmK,gBAAgB,CAACjL,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,CAAC5J,KAAK;;IAEhD,OAAOiS,eAAe,CAACnQ,WAAW,CAAC+F,GAAG,CAAC7H,KAAK,CAAC,GAAG+G,KAAK,CAACE,EAAE,CAACY,GAAG,CAAC7H,KAAK,GAAG6H,GAAG,CAAC7H,KAAK,EAAE+G,KAAK,CAACE,EAAE,CAAC;;AAEjG;;AC3BA,0BAAe,CACb0C,WAAW,EACXuI,QAAQ,EACRC,YAAY,EACZC,yBAAyB,KACtB;EACH,MAAM3I,MAAM,GAAG,EAAE;EAEjB,KAAK,MAAM9I,IAAI,IAAIgJ,WAAW,EAAE;IAC9B,MAAM5C,KAAK,GAAG3C,GAAG,CAAC8N,QAAQ,EAAEvR,IAAI,CAAC;IAEjCoG,KAAK,IAAI+B,GAAG,CAACW,MAAM,EAAE9I,IAAI,EAAEoG,KAAK,CAACE,EAAE,CAAC;;EAGtC,OAAO;IACLkL,YAAY;IACZrR,KAAK,EAAE,CAAC,GAAG6I,WAAW,CAAC;IACvBF,MAAM;IACN2I;GACD;AACH,CAAC;;ACvBD,qBAAe,CAACvI,OAAO,EAAEwI,OAAO,KAAKA,OAAO,IACxCxI,OAAO,KACNA,OAAO,CAAC/G,QAAQ,IACb+G,OAAO,CAACnH,GAAG,IACXmH,OAAO,CAACpH,GAAG,IACXoH,OAAO,CAAClH,SAAS,IACjBkH,OAAO,CAACjH,SAAS,IACjBiH,OAAO,CAAChH,OAAO,IACfgH,OAAO,CAAC9G,QAAQ,CAAC;;ACNlB,SAASuP,SAASA,CAAC9R,MAAM,EAAEwC,MAAM,EAAE;EACtC,IAAImM,WAAW,CAAC3O,MAAM,CAAC,IAAI2O,WAAW,CAACnM,MAAM,CAAC,EAAE;IAC5C,OAAOA,MAAM;;EAEjB,KAAK,MAAMnB,GAAG,IAAImB,MAAM,EAAE;IACtB,MAAMuP,WAAW,GAAG/R,MAAM,CAACqB,GAAG,CAAC;IAC/B,MAAM2Q,WAAW,GAAGxP,MAAM,CAACnB,GAAG,CAAC;IAC/B,IAAI;MACArB,MAAM,CAACqB,GAAG,CAAC,GACNtB,QAAQ,CAACgS,WAAW,CAAC,IAAIhS,QAAQ,CAACiS,WAAW,CAAC,IAC1CrS,KAAK,CAACC,OAAO,CAACmS,WAAW,CAAC,IAAIpS,KAAK,CAACC,OAAO,CAACoS,WAAW,CAAE,GACxDF,SAAS,CAACC,WAAW,EAAEC,WAAW,CAAC,GACnCA,WAAW;KACxB,CACD,OAAOC,EAAE,EAAE;;EAEf,OAAOjS,MAAM;AACjB;;ACdA,SAASkS,cAAcA,CAACtL,MAAM,EAAEuL,aAAa,EAAEvN,WAAW,EAAEwN,UAAU,EAAEC,UAAU,EAAE;EAChF,IAAI7J,KAAK,GAAG,CAAC,CAAC;EACd,OAAO,EAAEA,KAAK,GAAG5B,MAAM,CAAC9C,MAAM,EAAE;IAC5B,KAAK,MAAMzC,GAAG,IAAIuF,MAAM,CAAC4B,KAAK,CAAC,EAAE;MAC7B,IAAI7I,KAAK,CAACC,OAAO,CAACgH,MAAM,CAAC4B,KAAK,CAAC,CAACnH,GAAG,CAAC,CAAC,EAAE;QACnC,CAACuD,WAAW,CAAC4D,KAAK,CAAC,KAAK5D,WAAW,CAAC4D,KAAK,CAAC,GAAG,EAAE,CAAC;QAChD5D,WAAW,CAAC4D,KAAK,CAAC,CAACnH,GAAG,CAAC,GAAG,EAAE;QAC5B6Q,cAAc,CAACtL,MAAM,CAAC4B,KAAK,CAAC,CAACnH,GAAG,CAAC,EAAEuC,GAAG,CAACuO,aAAa,CAAC3J,KAAK,CAAC,IAAI,EAAE,EAAEnH,GAAG,EAAE,EAAE,CAAC,EAAEuD,WAAW,CAAC4D,KAAK,CAAC,CAACnH,GAAG,CAAC,EAAEuD,WAAW,CAAC4D,KAAK,CAAC,EAAEnH,GAAG,CAAC;OACjI,MACI;QACD,CAAC3B,iBAAiB,CAACyS,aAAa,CAAC,IAC7B3D,SAAS,CAAC5K,GAAG,CAACuO,aAAa,CAAC3J,KAAK,CAAC,IAAI,EAAE,EAAEnH,GAAG,CAAC,EAAEuF,MAAM,CAAC4B,KAAK,CAAC,CAACnH,GAAG,CAAC,CAAC,GACjEiH,GAAG,CAAC1D,WAAW,CAAC4D,KAAK,CAAC,IAAI,EAAE,EAAEnH,GAAG,CAAC,GACjCuD,WAAW,CAAC4D,KAAK,CAAC,GAAG9F,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiC,WAAW,CAAC4D,KAAK,CAAC,CAAC,EAAE;UAAE,CAACnH,GAAG,GAAG;SAAM,CAAE;;;IAG1G+Q,UAAU,IACN,CAACxN,WAAW,CAACd,MAAM,IACnB,OAAOsO,UAAU,CAACC,UAAU,CAAC;;EAErC,OAAOzN,WAAW;AACtB;AACA,gCAAe,CAACgC,MAAM,EAAEuL,aAAa,EAAEvN,WAAW,KAAKkN,SAAS,CAACI,cAAc,CAACtL,MAAM,EAAEuL,aAAa,EAAEvN,WAAW,CAAC2F,KAAK,CAAC,CAAC,EAAE3D,MAAM,CAAC9C,MAAM,CAAC,CAAC,EAAEoO,cAAc,CAACC,aAAa,EAAEvL,MAAM,EAAEhC,WAAW,CAAC2F,KAAK,CAAC,CAAC,EAAE3D,MAAM,CAAC9C,MAAM,CAAC,CAAC,CAAC;;AC3BxN,sBAAe,CAAC;EAAEoL,QAAQ;EAAEC,UAAU;EAAEE,SAAS;EAAExH,SAAS;EAAEyK,kBAAkB;EAAEC,oBAAoB;EAAEC,WAAW;EAAEC,WAAW;EAAErD;AAAS,CAAC,KAAK;EAC/I,IAAIA,OAAO,EAAE;IACT,OAAO,KAAK;GACf,MACI,IAAI,CAACqD,WAAW,IAAIpD,SAAS,EAAE;IAChC,OAAO,EAAExH,SAAS,IAAI2K,WAAW,CAAC;GACrC,MACI,IAAIC,WAAW,GAAGH,kBAAkB,GAAGpD,QAAQ,EAAE;IAClD,OAAO,CAACsD,WAAW;GACtB,MACI,IAAIC,WAAW,GAAGF,oBAAoB,GAAGpD,UAAU,EAAE;IACtD,OAAOqD,WAAW;;EAEtB,OAAO,IAAI;AACb,CAAC;;ACVD,uBAAe,CAACnL,GAAG,EAAElH,IAAI,KACvB,CAACe,OAAO,CAAC0C,GAAG,CAACyD,GAAG,EAAElH,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC2D,MAAM,IAAIyH,KAAK,CAAClE,GAAG,EAAElH,IAAI,CAAC;;ACHzD,iBAAgBX,KAAK,IAAKkT,QAAQ,CAAClT,KAAK,CAAC,IAAIqD,cAAoB,CAACrD,KAAK,CAAC;;ACFxE,eAAgBA,KAAK,IAAKA,KAAK,YAAYmT,MAAM;;ACElC,SAASC,gBAAgBA,CAAC3R,MAAM,EAAEoG,GAAG,EAAEhI,IAAI,GAAG,UAAU,EAAE;EACrE,IAAIwT,SAAS,CAAC5R,MAAM,CAAC,IAChBtB,KAAK,CAACC,OAAO,CAACqB,MAAM,CAAC,IAAIA,MAAM,CAAC6R,KAAK,CAACD,SAAS,CAAE,IACjD/G,SAAS,CAAC7K,MAAM,CAAC,IAAI,CAACA,MAAO,EAAE;IAChC,OAAO;MACH5B,IAAI;MACJoI,OAAO,EAAEoL,SAAS,CAAC5R,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE;MACxCoG;KACH;;AAET;;ACTA,0BAAgB0L,cAAc,IAC5BhT,QAAQ,CAACgT,cAAc,CAAC,IAAI,CAACC,OAAO,CAACD,cAAc,CAAC,GAChDA,cAAc,GACd;EACEvT,KAAK,EAAEuT,cAAc;EACrBtL,OAAO,EAAE;AACX,CAAC;;ACQP,qBAAe,OAAOlB,KAAK,EAAE0M,UAAU,EAAEhL,wBAAwB,EAAE2J,yBAAyB,KAAK;EAC7F,MAAM;IAAEvK,GAAG;IAAE+B,IAAI;IAAE9G,QAAQ;IAAEH,SAAS;IAAEC,SAAS;IAAEF,GAAG;IAAED,GAAG;IAAEI,OAAO;IAAEE,QAAQ;IAAEpC,IAAI;IAAEuQ,aAAa;IAAEhK;GAAQ,GAAGH,KAAK,CAACE,EAAE;EACxH,IAAI,CAACC,KAAK,EAAE;IACR,OAAO,EAAE;;EAEb,MAAMwM,QAAQ,GAAG9J,IAAI,GAAGA,IAAI,CAAC,CAAC,CAAC,GAAG/B,GAAG;EACrC,MAAM8L,gBAAgB,GAAI1L,OAAO,IAAK;IAClC,IAAImK,yBAAyB,IAAIsB,QAAQ,CAACxL,cAAc,EAAE;MACtDwL,QAAQ,CAAC1L,iBAAiB,CAACsE,SAAS,CAACrE,OAAO,CAAC,GAAG,EAAE,GAAGA,OAAO,IAAI,GAAG,CAAC;MACpEyL,QAAQ,CAACxL,cAAc,EAAE;;GAEhC;EACD,MAAMI,KAAK,GAAG,EAAE;EAChB,MAAMsL,OAAO,GAAG7D,YAAY,CAAClI,GAAG,CAAC;EACjC,MAAMkK,UAAU,GAAGtR,eAAe,CAACoH,GAAG,CAAC;EACvC,MAAMgM,iBAAiB,GAAGD,OAAO,IAAI7B,UAAU;EAC/C,MAAM+B,OAAO,GAAI,CAAC5C,aAAa,IAAIQ,WAAW,CAAC7J,GAAG,CAAC,KAAK,CAACA,GAAG,CAAC7H,KAAK,IAC9DyT,UAAU,KAAK,EAAE,IAChBtT,KAAK,CAACC,OAAO,CAACqT,UAAU,CAAC,IAAI,CAACA,UAAU,CAACnP,MAAO;EACrD,MAAMyP,iBAAiB,GAAGC,YAAY,CAACC,IAAI,CAAC,IAAI,EAAEtT,IAAI,EAAE8H,wBAAwB,EAAEH,KAAK,CAAC;EACxF,MAAM4L,gBAAgB,GAAGA,CAACC,SAAS,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,OAAO,GAAG9R,sBAAsB,CAACG,SAAS,EAAE4R,OAAO,GAAG/R,sBAAsB,CAACI,SAAS,KAAK;IAChK,MAAMqF,OAAO,GAAGkM,SAAS,GAAGC,gBAAgB,GAAGC,gBAAgB;IAC/D/L,KAAK,CAAC3H,IAAI,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAAC;MAAEtD,IAAI,EAAEsU,SAAS,GAAGG,OAAO,GAAGC,OAAO;MAAEtM,OAAO;MACtEJ;KAAK,EAAEkM,iBAAiB,CAACI,SAAS,GAAGG,OAAO,GAAGC,OAAO,EAAEtM,OAAO,CAAC,CAAC;GACxE;EACD,IAAInF,QAAQ,KACN,CAAC+Q,iBAAiB,KAAKC,OAAO,IAAI5T,iBAAiB,CAACuT,UAAU,CAAC,CAAC,IAC7DnH,SAAS,CAACmH,UAAU,CAAC,IAAI,CAACA,UAAW,IACrC1B,UAAU,IAAI,CAACC,gBAAgB,CAACpI,IAAI,CAAC,CAACrE,OAAQ,IAC9CqO,OAAO,IAAI,CAAChC,aAAa,CAAChI,IAAI,CAAC,CAACrE,OAAQ,CAAC,EAAE;IAChD,MAAM;MAAEvF,KAAK;MAAEiI;KAAS,GAAGoL,SAAS,CAACvQ,QAAQ,CAAC,GACxC;MAAE9C,KAAK,EAAE,CAAC,CAAC8C,QAAQ;MAAEmF,OAAO,EAAEnF;KAAU,GACxC0R,kBAAkB,CAAC1R,QAAQ,CAAC;IAClC,IAAI9C,KAAK,EAAE;MACPsI,KAAK,CAAC3H,IAAI,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAAC;QAAEtD,IAAI,EAAE2C,sBAAsB,CAACM,QAAQ;QAAEmF,OAAO;QAAEJ,GAAG,EAAE6L;OAAU,EAAEK,iBAAiB,CAACvR,sBAAsB,CAACM,QAAQ,EAAEmF,OAAO,CAAC,CAAC;MAC3J,IAAI,CAACQ,wBAAwB,EAAE;QAC3BkL,gBAAgB,CAAC1L,OAAO,CAAC;QACzB,OAAOK,KAAK;;;;EAIxB,IAAI,CAACwL,OAAO,KAAK,CAAC5T,iBAAiB,CAACwC,GAAG,CAAC,IAAI,CAACxC,iBAAiB,CAACuC,GAAG,CAAC,CAAC,EAAE;IAClE,IAAI0R,SAAS;IACb,IAAIM,SAAS;IACb,MAAMC,SAAS,GAAGF,kBAAkB,CAAC/R,GAAG,CAAC;IACzC,MAAMkS,SAAS,GAAGH,kBAAkB,CAAC9R,GAAG,CAAC;IACzC,IAAI,CAAC6G,KAAK,CAACkK,UAAU,CAAC,EAAE;MACpB,MAAMmB,WAAW,GAAG/M,GAAG,CAACqJ,aAAa,IAAI2D,UAAU,CAACpB,UAAU,CAAC;MAC/D,IAAI,CAACvT,iBAAiB,CAACwU,SAAS,CAAC1U,KAAK,CAAC,EAAE;QACrCmU,SAAS,GAAGS,WAAW,GAAGF,SAAS,CAAC1U,KAAK;;MAE7C,IAAI,CAACE,iBAAiB,CAACyU,SAAS,CAAC3U,KAAK,CAAC,EAAE;QACrCyU,SAAS,GAAGG,WAAW,GAAGD,SAAS,CAAC3U,KAAK;;KAEhD,MACI;MACD,MAAM8U,SAAS,GAAGjN,GAAG,CAACsJ,WAAW,IAAI,IAAIpR,IAAI,CAAC0T,UAAU,CAAC;MACzD,IAAIP,QAAQ,CAACwB,SAAS,CAAC1U,KAAK,CAAC,EAAE;QAC3BmU,SAAS,GAAGW,SAAS,GAAG,IAAI/U,IAAI,CAAC2U,SAAS,CAAC1U,KAAK,CAAC;;MAErD,IAAIkT,QAAQ,CAACyB,SAAS,CAAC3U,KAAK,CAAC,EAAE;QAC3ByU,SAAS,GAAGK,SAAS,GAAG,IAAI/U,IAAI,CAAC4U,SAAS,CAAC3U,KAAK,CAAC;;;IAGzD,IAAImU,SAAS,IAAIM,SAAS,EAAE;MACxBP,gBAAgB,CAAC,CAAC,CAACC,SAAS,EAAEO,SAAS,CAACzM,OAAO,EAAE0M,SAAS,CAAC1M,OAAO,EAAEzF,sBAAsB,CAACC,GAAG,EAAED,sBAAsB,CAACE,GAAG,CAAC;MAC3H,IAAI,CAAC+F,wBAAwB,EAAE;QAC3BkL,gBAAgB,CAACrL,KAAK,CAAC3H,IAAI,CAAC,CAACsH,OAAO,CAAC;QACrC,OAAOK,KAAK;;;;EAIxB,IAAI,CAAC3F,SAAS,IAAIC,SAAS,KAAK,CAACkR,OAAO,IAAIZ,QAAQ,CAACO,UAAU,CAAC,EAAE;IAC9D,MAAMsB,eAAe,GAAGP,kBAAkB,CAAC7R,SAAS,CAAC;IACrD,MAAMqS,eAAe,GAAGR,kBAAkB,CAAC5R,SAAS,CAAC;IACrD,MAAMuR,SAAS,GAAG,CAACjU,iBAAiB,CAAC6U,eAAe,CAAC/U,KAAK,CAAC,IACvDyT,UAAU,CAACnP,MAAM,GAAGyQ,eAAe,CAAC/U,KAAK;IAC7C,MAAMyU,SAAS,GAAG,CAACvU,iBAAiB,CAAC8U,eAAe,CAAChV,KAAK,CAAC,IACvDyT,UAAU,CAACnP,MAAM,GAAG0Q,eAAe,CAAChV,KAAK;IAC7C,IAAImU,SAAS,IAAIM,SAAS,EAAE;MACxBP,gBAAgB,CAACC,SAAS,EAAEY,eAAe,CAAC9M,OAAO,EAAE+M,eAAe,CAAC/M,OAAO,CAAC;MAC7E,IAAI,CAACQ,wBAAwB,EAAE;QAC3BkL,gBAAgB,CAACrL,KAAK,CAAC3H,IAAI,CAAC,CAACsH,OAAO,CAAC;QACrC,OAAOK,KAAK;;;;EAIxB,IAAIzF,OAAO,IAAI,CAACiR,OAAO,IAAIZ,QAAQ,CAACO,UAAU,CAAC,EAAE;IAC7C,MAAM;MAAEzT,KAAK,EAAEiV,YAAY;MAAEhN;KAAS,GAAGuM,kBAAkB,CAAC3R,OAAO,CAAC;IACpEyD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiN,OAAO,CAAC,IAAIL,MAAM,CAAC8B,YAAY,CAAC,CAAC,EAAE,CAACxB,UAAU,CAACyB,KAAK,CAACD,YAAY,CAAC,EAAEA,YAAY,EAAE,cAAc,CAAC;IACxH,IAAIzB,OAAO,CAAC,IAAIL,MAAM,CAAC8B,YAAY,CAAC,CAAC,IAAI,CAACxB,UAAU,CAACyB,KAAK,CAACD,YAAY,CAAC,EAAE;MACtE3M,KAAK,CAAC3H,IAAI,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAAC;QAAEtD,IAAI,EAAE2C,sBAAsB,CAACK,OAAO;QAAEoF,OAAO;QACvEJ;OAAK,EAAEkM,iBAAiB,CAACvR,sBAAsB,CAACK,OAAO,EAAEoF,OAAO,CAAC,CAAC;MACtE,IAAI,CAACQ,wBAAwB,EAAE;QAC3BkL,gBAAgB,CAAC1L,OAAO,CAAC;QACzB,OAAOK,KAAK;;;;EAIxB,IAAIvF,QAAQ,EAAE;IACV,IAAIoS,UAAU,CAACpS,QAAQ,CAAC,EAAE;MACtB,MAAMtB,MAAM,GAAG,MAAMsB,QAAQ,CAAC0Q,UAAU,CAAC;MACzC,MAAM2B,aAAa,GAAGhC,gBAAgB,CAAC3R,MAAM,EAAEiS,QAAQ,CAAC;MACxD,IAAI0B,aAAa,EAAE;QACf9M,KAAK,CAAC3H,IAAI,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiS,aAAa,CAAC,EAAErB,iBAAiB,CAACvR,sBAAsB,CAACO,QAAQ,EAAEqS,aAAa,CAACnN,OAAO,CAAC,CAAC;QACxI,IAAI,CAACQ,wBAAwB,EAAE;UAC3BkL,gBAAgB,CAACyB,aAAa,CAACnN,OAAO,CAAC;UACvC,OAAOK,KAAK;;;KAGvB,MACI,IAAI/H,QAAQ,CAACwC,QAAQ,CAAC,EAAE;MACzB,IAAIsS,gBAAgB,GAAG,EAAE;MACzB,KAAK,MAAMxT,GAAG,IAAIkB,QAAQ,EAAE;QACxB,IAAI,CAACyB,aAAa,CAAC6Q,gBAAgB,CAAC,IAAI,CAAC5M,wBAAwB,EAAE;UAC/D;;QAEJ,MAAM2M,aAAa,GAAGhC,gBAAgB,CAAC,MAAMrQ,QAAQ,CAAClB,GAAG,CAAC,CAAC4R,UAAU,CAAC,EAAEC,QAAQ,EAAE7R,GAAG,CAAC;QACtF,IAAIuT,aAAa,EAAE;UACfC,gBAAgB,GAAGnS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEiS,aAAa,CAAC,EAAErB,iBAAiB,CAAClS,GAAG,EAAEuT,aAAa,CAACnN,OAAO,CAAC,CAAC;UACjH0L,gBAAgB,CAACyB,aAAa,CAACnN,OAAO,CAAC;UACvC,IAAIQ,wBAAwB,EAAE;YAC1BH,KAAK,CAAC3H,IAAI,CAAC,GAAG0U,gBAAgB;;;;MAI1C,IAAI,CAAC7Q,aAAa,CAAC6Q,gBAAgB,CAAC,EAAE;QAClC/M,KAAK,CAAC3H,IAAI,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAAC;UAAE0E,GAAG,EAAE6L;SAAU,EAAE2B,gBAAgB,CAAC;QAChE,IAAI,CAAC5M,wBAAwB,EAAE;UAC3B,OAAOH,KAAK;;;;;EAK5BqL,gBAAgB,CAAC,IAAI,CAAC;EACtB,OAAOrL,KAAK;AAChB,CAAC;;ACpHD,MAAMgN,cAAc,GAAG;EACnB9F,IAAI,EAAEtN,eAAe,CAACG,QAAQ;EAC9BkT,cAAc,EAAErT,eAAe,CAACE,QAAQ;EACxCoT,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,iBAAiB,GAAG,OAAO3G,MAAM,KAAK,WAAW;AACvD,AAAO,SAAS4G,mBAAmBA,CAACjS,KAAK,GAAG,EAAE,EAAE;EAC5C,IAAIkS,WAAW,GAAGzS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmS,cAAc,CAAC,EAAE7R,KAAK,CAAC;EACzE,IAAImS,cAAc;EAClB,IAAI3Q,UAAU,GAAG;IACbE,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACf6N,WAAW,EAAE,KAAK;IAClB4C,WAAW,EAAE,CAAC;IACdxQ,aAAa,EAAE,EAAE;IACjByQ,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzBxQ,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,MAAM1B,eAAe,GAAG;IACpBqB,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAIwB,OAAO,GAAG,EAAE;EAChB,IAAIP,WAAW,GAAG,EAAE;EACpB,IAAIC,cAAc,GAAGiP,WAAW,CAAChD,aAAa,IAAI,EAAE;EACpD,IAAIjL,WAAW,GAAG,KAAK;EACvB,IAAIsO,UAAU,GAAG,KAAK;EACtB,MAAMtQ,SAAS,GAAG;IACdwI,KAAK,EAAE,IAAIyC,OAAO,EAAE;IACpB/L,OAAO,EAAE,IAAI+L,OAAO,EAAE;IACtBlJ,KAAK,EAAE,IAAIkJ,OAAO,EAAE;IACpBhL,KAAK,EAAE,IAAIgL,OAAO;GACrB;EACD,IAAInJ,MAAM,GAAG;IACTN,KAAK,EAAE,IAAI+O,GAAG,EAAE;IAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;IAClBxO,KAAK,EAAE,IAAIwO,GAAG,EAAE;IAChB/H,KAAK,EAAE,IAAI+H,GAAG,EAAE;IAChBjI,QAAQ,EAAE;GACb;EACD,MAAMmI,cAAc,GAAGC,kBAAkB,CAACT,WAAW,CAACnG,IAAI,CAAC;EAC3D,MAAM6G,0BAA0B,GAAGV,WAAW,CAACxD,YAAY,KAAKjQ,eAAe,CAACK,GAAG;EACnF,MAAM+T,cAAc,GAAI3V,IAAI,IAAK6G,MAAM,CAACwG,QAAQ,IAC5CxG,MAAM,CAAC0G,KAAK,CAACqI,GAAG,CAAC5V,IAAI,CAAC,IACtB6G,MAAM,CAAC0G,KAAK,CAACqI,GAAG,CAAC,CAAC5V,IAAI,CAACuU,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMsB,gBAAgB,GAAGA,CAAC7V,IAAI,EAAE2H,KAAK,KAAK;IACtCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC;IACnC5C,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAEP,UAAU,CAACO;KACtB,CAAC;GACL;EACD,MAAMiR,uBAAuB,GAAG,YAAY;IACxC,MAAMlR,OAAO,GAAG,MAAMmR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;IACjD,IAAIzB,OAAO,KAAKN,UAAU,CAACM,OAAO,EAAE;MAChCN,UAAU,CAACM,OAAO,GAAGA,OAAO;MAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBN;OACH,CAAC;;GAET;EACD,MAAMoR,uBAAuB,GAAG,OAAOC,gBAAgB,EAAEjW,IAAI,EAAE2H,KAAK,EAAEH,UAAU,EAAE0O,mBAAmB,EAAEC,SAAS,KAAK;IACjH,MAAMC,aAAa,GAAG3S,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;IAClD,MAAM4E,OAAO,GAAG,CAAC,EAAEzB,eAAe,CAACyB,OAAO,KACrCoQ,WAAW,CAACqB,QAAQ,GAAGH,mBAAmB,GAAGJ,uBAAuB,EAAE,CAAC,CAAC;IAC7E,IAAIhT,KAAK,CAACwT,UAAU,IAAI3O,KAAK,EAAE;MAC3BsN,cAAc,GACVA,cAAc,IAAIsB,QAAQ,CAACV,gBAAgB,EAAE/S,KAAK,CAACwT,UAAU,CAAC;MAClErB,cAAc,CAACjV,IAAI,EAAE2H,KAAK,CAAC;KAC9B,MACI;MACDA,KAAK,GACCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC,GACnCyD,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;IAExC,IAAI,CAACmW,SAAS,KACTxO,KAAK,GAAG,CAAC0G,SAAS,CAAC+H,aAAa,EAAEzO,KAAK,CAAC,GAAGyO,aAAa,CAAC,IAC1D,CAACvS,aAAa,CAAC2D,UAAU,CAAC,IAC1BlD,UAAU,CAACM,OAAO,KAAKA,OAAO,KAC9B,CAACqR,gBAAgB,EAAE;MACnB,MAAMO,gBAAgB,GAAGjU,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgF,UAAU,CAAC,EAAGrE,eAAe,CAACyB,OAAO,IAAIoQ,WAAW,CAACqB,QAAQ,GAAG;QAAEzR;OAAS,GAAG,EAAG,CAAC,EAAE;QAAEC,MAAM,EAAEP,UAAU,CAACO,MAAM;QAAE7E;OAAM,CAAC;MAC/LsE,UAAU,GAAG/B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE8B,UAAU,CAAC,EAAEkS,gBAAgB,CAAC;MAE3EzR,SAAS,CAACC,KAAK,CAACE,IAAI,CAACiR,SAAS,GAAG;QAAEnW;OAAM,GAAGwW,gBAAgB,CAAC;;IAEjEzR,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBP,YAAY,EAAE;KACjB,CAAC;GACL;EACD,MAAM8R,aAAa,GAAGA,CAACzW,IAAI,EAAEX,KAAK,EAAE6J,OAAO,GAAG,EAAE,EAAEwN,YAAY,KAAK;IAC/D,MAAMtQ,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,IAAIA,EAAE,EAAE;QAEJ6B,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEsR,eAAe,CAACjS,KAAK,EAAEiH,EAAE,CAAC,CAAC;QAClD,MAAMqQ,UAAU,GAAGC,KAAK,IAAIC,aAAa,CAACvQ,EAAE,CAACY,GAAG,CAAC,IAAI3H,iBAAiB,CAACF,KAAK,CAAC,GACvE,EAAE,GACFA,KAAK;QACX,IAAI0R,WAAW,CAACzK,EAAE,CAACY,GAAG,CAAC,IAAI,CAACqL,QAAQ,CAACoE,UAAU,CAAC,EAAE;UAC9CrQ,EAAE,CAACY,GAAG,CAAC8J,KAAK,GAAG2F,UAAU;SAC5B,MACI,IAAIzF,gBAAgB,CAAC5K,EAAE,CAACY,GAAG,CAAC,EAAE;UAC/B,CAAC,GAAGZ,EAAE,CAACY,GAAG,CAACgC,OAAO,CAAC,CAAC4N,OAAO,CAAEC,SAAS,IAAMA,SAAS,CAACpG,QAAQ,GAAGgG,UAAU,CAACvR,QAAQ,CAAC2R,SAAS,CAAC1X,KAAK,CAAE,CAAC;SAC1G,MACI,IAAIiH,EAAE,CAAC2C,IAAI,EAAE;UACd,IAAInJ,eAAe,CAACwG,EAAE,CAACY,GAAG,CAAC,EAAE;YACzBZ,EAAE,CAAC2C,IAAI,CAACtF,MAAM,GAAG,CAAC,GACZ2C,EAAE,CAAC2C,IAAI,CAAC6N,OAAO,CAAEE,WAAW,IAAMA,WAAW,CAACjX,OAAO,GAAGP,KAAK,CAACC,OAAO,CAACkX,UAAU,CAAC,GAC7E,CAAC,CAACA,UAAU,CAAC7S,IAAI,CAAE3E,IAAI,IAAKA,IAAI,KAAK6X,WAAW,CAAC3X,KAAK,CAAC,GACvDsX,UAAU,KAAKK,WAAW,CAAC3X,KAAM,CAAC,GACrCiH,EAAE,CAAC2C,IAAI,CAAC,CAAC,CAAC,CAAClJ,OAAO,GAAG,CAAC,CAAC4W,UAAW;WAC5C,MACI;YACDrQ,EAAE,CAAC2C,IAAI,CAAC6N,OAAO,CAAEG,QAAQ,IAAMA,QAAQ,CAAClX,OAAO,GAAGkX,QAAQ,CAAC5X,KAAK,KAAKsX,UAAW,CAAC;;SAExF,MACI;UACDrQ,EAAE,CAACY,GAAG,CAAC7H,KAAK,GAAGsX,UAAU;;QAE7B,IAAID,YAAY,EAAE;UACd3R,SAAS,CAACd,OAAO,CAACiB,IAAI,CAAC;YACnBuB,MAAM,EAAEyQ,SAAS,EAAE;YACnBlX;WACH,CAAC;;QAEN,CAACkJ,OAAO,CAACiO,WAAW,IAAIjO,OAAO,CAACkO,WAAW,KACvCC,wBAAwB,CAACrX,IAAI,EAAE2W,UAAU,EAAEzN,OAAO,CAACkO,WAAW,CAAC;QACnElO,OAAO,CAACoO,cAAc,IAAIC,OAAO,CAACvX,IAAI,CAAC;;;GAGlD;EACD,MAAMqX,wBAAwB,GAAGA,CAACrX,IAAI,EAAE8S,UAAU,EAAE0E,gBAAgB,EAAEd,YAAY,GAAG,IAAI,KAAK;IAC1F,MAAM1R,KAAK,GAAG;MACVhF;KACH;IACD,IAAIyX,SAAS,GAAG,KAAK;IACrB,IAAItU,eAAe,CAACqB,OAAO,EAAE;MACzB,MAAMkT,eAAe,GAAGpT,UAAU,CAACE,OAAO;MAC1CF,UAAU,CAACE,OAAO,GAAGmT,WAAW,EAAE;MAClC3S,KAAK,CAACR,OAAO,GAAGF,UAAU,CAACE,OAAO;MAClCiT,SAAS,GAAGC,eAAe,KAAK1S,KAAK,CAACR,OAAO;;IAEjD,IAAIrB,eAAe,CAACsB,WAAW,IAAI,CAAC+S,gBAAgB,EAAE;MAClD,MAAMI,oBAAoB,GAAGnU,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;MAC9D,MAAM6X,mBAAmB,GAAG,CAACxJ,SAAS,CAAC5K,GAAG,CAACsC,cAAc,EAAE/F,IAAI,CAAC,EAAE8S,UAAU,CAAC;MAC7E+E,mBAAmB,GACb1P,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,IAAI,CAAC,GACvCoL,KAAK,CAAC9G,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;MACzCgF,KAAK,CAACP,WAAW,GAAGH,UAAU,CAACG,WAAW;MAC1CgT,SAAS,GACLA,SAAS,IAAIG,oBAAoB,KAAKnU,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;;IAE/E,MAAM8X,sBAAsB,GAAGrU,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;IAClE,IAAIwX,gBAAgB,IAAI,CAACM,sBAAsB,EAAE;MAC7C3P,GAAG,CAAC7D,UAAU,CAACI,aAAa,EAAE1E,IAAI,EAAEwX,gBAAgB,CAAC;MACrDxS,KAAK,CAACN,aAAa,GAAGJ,UAAU,CAACI,aAAa;MAC9C+S,SAAS,GACLA,SAAS,IACJtU,eAAe,CAACuB,aAAa,IAC1BoT,sBAAsB,KAAKN,gBAAiB;;IAE5DC,SAAS,IAAIf,YAAY,IAAI3R,SAAS,CAACC,KAAK,CAACE,IAAI,CAACF,KAAK,CAAC;IACxD,OAAOyS,SAAS,GAAGzS,KAAK,GAAG,EAAE;GAChC;EACD,MAAM+S,eAAe,GAAG,MAAO/X,IAAI,IAAK;IACpC,OAAOgV,WAAW,CAACqB,QAAQ,GACrB,MAAMrB,WAAW,CAACqB,QAAQ,CAAC9T,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsD,WAAW,CAAC,EAAEkP,WAAW,CAACgD,OAAO,EAAEC,kBAAkB,CAACjY,IAAI,IAAI6G,MAAM,CAACN,KAAK,EAAEF,OAAO,EAAE2O,WAAW,CAACxD,YAAY,EAAEwD,WAAW,CAACvD,yBAAyB,CAAC,CAAC,GACnM,EAAE;GACX;EACD,MAAMyG,yBAAyB,GAAG,MAAO/X,KAAK,IAAK;IAC/C,MAAM;MAAE0E;KAAQ,GAAG,MAAMkT,eAAe,EAAE;IAC1C,IAAI5X,KAAK,EAAE;MACP,KAAK,MAAMH,IAAI,IAAIG,KAAK,EAAE;QACtB,MAAMwH,KAAK,GAAGlE,GAAG,CAACoB,MAAM,EAAE7E,IAAI,CAAC;QAC/B2H,KAAK,GACCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC,GACnCyD,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;KAE3C,MACI;MACDsE,UAAU,CAACO,MAAM,GAAGA,MAAM;;IAE9B,OAAOA,MAAM;GAChB;EACD,MAAMkR,YAAY,GAAG,OAAO1P,OAAO,EAAE8R,gBAAgB,EAAEH,OAAO,GAAG;IAC7DI,KAAK,EAAE;GACV,KAAK;IAEF,KAAK,MAAMpY,IAAI,IAAIqG,OAAO,EAAE;MACxB,MAAMD,KAAK,GAAGC,OAAO,CAACrG,IAAI,CAAC;MAC3B,IAAIoG,KAAK,EAAE;QACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;QACnB,MAAM7F,GAAG,GAAGuC,IAAI,CAACoD,KAAK,EAAE,IAAI,CAAC;QAE7B,IAAIE,EAAE,EAAE;UAEJ,MAAM+R,UAAU,GAAG,MAAMC,aAAa,CAAClS,KAAK,EAAE3C,GAAG,CAACqC,WAAW,EAAEQ,EAAE,CAACtG,IAAI,CAAC,EAAE0V,0BAA0B,EAAEV,WAAW,CAACvD,yBAAyB,CAAC;UAE3I9L,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEyS,UAAU,EAAC,YAAY,CAAC;UAC/C,IAAIF,gBAAgB,EAAE;YAClB,IAAIE,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;cACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;cACrB;;WAEP,MACI;YACD,IAAIC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;cACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;;YAEzBC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,GACbmI,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAEyB,EAAE,CAACtG,IAAI,EAAEqY,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,CAAC,GACpDoL,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAEyB,EAAE,CAACtG,IAAI,CAAC;;;QAG/CS,GAAG,KAAK,MAAMsV,YAAY,CAACtV,GAAG,EAAE0X,gBAAgB,EAAEH,OAAO,CAAC,CAAC;;;IAGnE,OAAOA,OAAO,CAACI,KAAK;GACvB;EACD,MAAMG,YAAY,GAAG,OAAO;IAAErZ,IAAI;IAAEW,MAAM;IAAEA,MAAM,EAAE;MAAER,KAAK;MAAEW,IAAI;MAAEd,IAAI,EAAEsZ;;GAAc,KAAK;IACxF,IAAI7Q,KAAK;IACT,IAAI/C,OAAO;IACX,MAAMwB,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,IAAI0M,UAAU,GAAG0F,SAAS,GAAG1H,aAAa,CAAC1K,KAAK,CAAC,GAAG1F,SAAS;MAC7DoS,UAAU,GAAG3R,WAAW,CAAC2R,UAAU,CAAC,GAAGzT,KAAK,GAAGyT,UAAU;MAEzD,MAAMT,WAAW,GAAGnT,IAAI,KAAKkC,MAAM,CAACC,IAAI;MACxC,MAAM;QAAE0N,QAAQ,EAAEoD,kBAAkB;QAAEnD,UAAU,EAAEoD;OAAsB,GAAGqD,kBAAkB,CAACT,WAAW,CAACJ,cAAc,CAAC;MACzH,MAAM6D,oBAAoB,GAAI,CAACC,aAAa,CAACtS,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACE,EAAE,CAACC,KAAK,CAAC,IAClE,CAACyO,WAAW,CAACqB,QAAQ,IACrB,CAAC5S,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,IAC7B2Y,cAAc,CAACpW,MAAM,CAACC,MAAM,CAAC;QAAE6P,WAAW;QAAE3K,SAAS,EAAE,CAAC,CAACjE,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;QAAEsS,WAAW,EAAEhO,UAAU,CAACgO,WAAW;QAAEH,kBAAkB;QACjJC;OAAsB,EAAEoD,cAAc,CAAC,CAAC;MAChD,MAAMW,SAAS,GAAG,CAAC9D,WAAW,IAAIsD,cAAc,CAAC3V,IAAI,CAAC;MACtD,IAAI,CAACmB,WAAW,CAAC2R,UAAU,CAAC,EAAE;QAC1B3K,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAE8S,UAAU,CAAC;;MAEtC,MAAMtL,UAAU,GAAG6P,wBAAwB,CAACrX,IAAI,EAAE8S,UAAU,EAAET,WAAW,EAAE,KAAK,CAAC;MACjF,MAAMqE,YAAY,GAAG,CAAC7S,aAAa,CAAC2D,UAAU,CAAC,IAAI2O,SAAS;MAC5D,IAAIsC,oBAAoB,EAAE;QACtB,CAACpG,WAAW,IACRtN,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;UACjBlF,IAAI;UACJd;SACH,CAAC;QACN,OAAQwX,YAAY,IAChB3R,SAAS,CAACC,KAAK,CAACE,IAAI,CAACiR,SAAS,GAAG;UAAEnW;SAAM,GAAGuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgF,UAAU,CAAC,EAAE;UAAExH;SAAM,CAAC,CAAC;;MAE3G+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MACF,IAAIqQ,WAAW,CAACqB,QAAQ,EAAE;QACtB,MAAM;UAAExR;SAAQ,GAAG,MAAMkT,eAAe,CAAC,CAAC/X,IAAI,CAAC,CAAC;QAChD2H,KAAK,GAAGlE,GAAG,CAACoB,MAAM,EAAE7E,IAAI,CAAC;QACzB,IAAIF,eAAe,CAACD,MAAM,CAAC,IAAI,CAAC8H,KAAK,EAAE;UACnC,MAAMiR,cAAc,GAAGtY,iBAAiB,CAACN,IAAI,CAAC;UAC9C,MAAM6Y,QAAQ,GAAGpV,GAAG,CAACoB,MAAM,EAAE+T,cAAc,EAAE,EAAE,CAAC;UAChDC,QAAQ,CAAC3Z,IAAI,IAAI2Z,QAAQ,CAACvR,OAAO,KAAKK,KAAK,GAAGkR,QAAQ,CAAC;UACvD,IAAIA,QAAQ,IAAIpV,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE+T,cAAc,CAAC,EAAE;YACpD5Y,IAAI,GAAG4Y,cAAc;;;QAG7BhU,OAAO,GAAGf,aAAa,CAACgB,MAAM,CAAC;OAClC,MACI;QACD8C,KAAK,GAAG,CAAC,MAAM2Q,aAAa,CAAClS,KAAK,EAAE3C,GAAG,CAACqC,WAAW,EAAE9F,IAAI,CAAC,EAAE0V,0BAA0B,EAAEV,WAAW,CAACvD,yBAAyB,CAAC,EAAEzR,IAAI,CAAC;;MAEzI,CAACqS,WAAW,IACRtN,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;QACjBlF,IAAI;QACJd,IAAI;QACJuH,MAAM,EAAEyQ,SAAS;OACpB,CAAC;MACNlB,uBAAuB,CAAC,KAAK,EAAEhW,IAAI,EAAE2H,KAAK,EAAEH,UAAU,EAAE5C,OAAO,EAAEuR,SAAS,CAAC;;GAElF;EACD,MAAM2C,yBAAyB,GAAGA,CAAC9Y,IAAI,EAAEkH,GAAG,EAAE6R,iBAAiB,KAAK;IAChE,MAAM3S,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,MAAMuQ,UAAU,GAAGlT,GAAG,CAACqC,WAAW,EAAE9F,IAAI,CAAC;MACzC,MAAMgZ,gBAAgB,GAAG7X,WAAW,CAACwV,UAAU,CAAC;MAChD,MAAM9V,YAAY,GAAGmY,gBAAgB,GAC/BvV,GAAG,CAACsC,cAAc,EAAE/F,IAAI,CAAC,GACzB2W,UAAU;MAChB,IAAIxV,WAAW,CAACN,YAAY,CAAC,IACxBqG,GAAG,IAAIA,GAAG,CAAC+R,cAAe,IAC3BF,iBAAiB,EAAE;QACnB7R,GAAG,IAAIA,GAAG,CAAC/C,OAAO,IAClBgE,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAE+Y,iBAAiB,GAAGlY,YAAY,GAAGiQ,aAAa,CAAC1K,KAAK,CAAC,CAAC;OAClF,MACI;QACDqQ,aAAa,CAACzW,IAAI,EAAEa,YAAY,CAAC;;;IAGzCwU,UAAU,IAAIlS,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;GAC1D;EACD,MAAMiK,WAAW,GAAGA,CAAC3X,IAAI,EAAEb,IAAI,KAAK;IAChCa,IAAI,IAAIb,IAAI,IAAIgJ,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEb,IAAI,CAAC;IAC5C,OAAO,CAACkP,SAAS,CAAC9L,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0U,SAAS,EAAE,CAAC,EAAEnR,cAAc,CAAC;GACpE;EACD,MAAM2H,YAAY,GAAG,YAAY;IAC7B,MAAM9I,OAAO,GAAGoQ,WAAW,CAACqB,QAAQ,GAC9BxS,aAAa,CAAC,CAAC,MAAMkU,eAAe,EAAE,EAAElT,MAAM,CAAC,GAC/C,MAAMkR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;IACvC,IAAIzB,OAAO,KAAKN,UAAU,CAACM,OAAO,EAAE;MAChCN,UAAU,CAACM,OAAO,GAAGA,OAAO;MAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBN;OACH,CAAC;;GAET;EACD,MAAMsU,SAAS,GAAGA,CAAClZ,IAAI,EAAEX,KAAK,EAAE6J,OAAO,KAAK3G,MAAM,CAAC4W,OAAO,CAAC9Z,KAAK,CAAC,CAACyX,OAAO,CAAC,CAAC,CAACsC,QAAQ,EAAEzC,UAAU,CAAC,KAAK;IAClG,MAAM0C,SAAS,GAAI,GAAErZ,IAAK,IAAGoZ,QAAS,EAAC;IACvC,MAAMhT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;IACrC,MAAMC,YAAY,GAAGzS,MAAM,CAACC,KAAK,CAAC8O,GAAG,CAAC5V,IAAI,CAAC;IAC3C,CAACsZ,YAAY,IAAI,CAAC9K,WAAW,CAACmI,UAAU,CAAC,IAAKvQ,KAAK,IAAI,CAACA,KAAK,CAACE,EAAG,KAC7D,CAAC5G,YAAY,CAACiX,UAAU,CAAC,GACvBuC,SAAS,CAACG,SAAS,EAAE1C,UAAU,EAAEzN,OAAO,CAAC,GACzCuN,aAAa,CAAC4C,SAAS,EAAE1C,UAAU,EAAEzN,OAAO,EAAE,IAAI,CAAC;GAC5D,CAAC;EACF,MAAMqQ,SAAS,GAAGA,CAACC,UAAU,EAAE3Y,YAAY,EAAE4Y,QAAQ,KAAK;IACtD,MAAM7N,WAAW,GAAGrJ,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG6S,UAAU,GAC3C9S,MAAM,CAACC,MAAM,CAAC,EAAE,EAAED,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEuD,cAAc,CAAC,EAAED,WAAW,CAAC,CAAC,GAAG3E,WAAW,CAACN,YAAY,CAAC,GAC5GkF,cAAc,GACdlF,YAAa,CAAC;IACpB,IAAI,CAAC2Y,UAAU,EAAE;MACbC,QAAQ,KAAK5S,MAAM,CAACwG,QAAQ,GAAG,IAAI,CAAC;MACpC,OAAOzB,WAAW;;IAEtB,MAAM8N,aAAa,GAAG,EAAE;IACxB,MAAM5Y,MAAM,GAAG,IAAI6Y,GAAG,EAAE;IACxB,KAAK,MAAMN,SAAS,IAAIlU,qBAAqB,CAACqU,UAAU,CAAC,EAAE;MACvDC,QAAQ,IAAI5S,MAAM,CAAC0G,KAAK,CAACrB,GAAG,CAACmN,SAAS,CAAC;MACvCK,aAAa,CAAChK,IAAI,CAACjM,GAAG,CAACmI,WAAW,EAAEyN,SAAS,CAAC,CAAC;MAC/CvY,MAAM,CAACqH,GAAG,CAACkR,SAAS,EAAE5V,GAAG,CAACmI,WAAW,EAAEyN,SAAS,CAAC,CAAC;;IAEtD,OAAO7Z,KAAK,CAACC,OAAO,CAAC+Z,UAAU,CAAC,GAC1B,CAACE,aAAa,EAAC5Y,MAAM,CAAC,GACtBlB,QAAQ,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC,GACfyB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE1B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGtB,KAAK,CAACC,OAAO,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,GACvD,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC,GACdA,MAAM,CAAC,CAAC,CAAC;GACtB;EACD,MAAM8Y,iBAAiB,GAAGA,CAAC5H,aAAa,EAAEhS,IAAI,GAAG,EAAE,KAAK;IACpD2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoM,aAAa,EAAC,mBAAmB,CAAC;IACzD,KAAK,MAAM9Q,GAAG,IAAI8Q,aAAa,EAAE;MAC7B,MAAM3S,KAAK,GAAG2S,aAAa,CAAC9Q,GAAG,CAAC;MAChC,MAAMmY,SAAS,GAAGrZ,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGkB,GAAG;MAChD,MAAMkF,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;MACrC,IAAI,CAACjT,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,EAAE;QACrB,IAAI1G,QAAQ,CAACP,KAAK,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;UACzCua,iBAAiB,CAACva,KAAK,EAAEga,SAAS,CAAC;SACtC,MACI,IAAI,CAACjT,KAAK,EAAE;UACb+B,GAAG,CAACrC,WAAW,EAAEuT,SAAS,EAAEha,KAAK,CAAC;;;;GAIjD;EACD,MAAMiN,qBAAqB,GAAGA,CAACxC,OAAO,EAAE9J,IAAI,EAAE6Z,MAAM,EAAE5L,IAAI,EAAE7B,uBAAuB,GAAG,EAAE,EAAE0N,SAAS,GAAG,IAAI,EAAEC,eAAe,GAAG,IAAI,KAAK;IACnIhT,WAAW,GAAG,IAAI;IAClB,IAAIgT,eAAe,IAAItW,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,EAAE;MACvC,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MAC/DgN,SAAS,IAAI3R,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAEga,MAAM,CAAC;;IAE3C7R,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEoM,uBAAuB,CAAC;IAC/C,IAAI5M,KAAK,CAACC,OAAO,CAACgE,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,CAAC,EAAE;MAC7C,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MACzEgN,SAAS,IAAI3R,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAEga,MAAM,CAAC;MACjDC,eAAe,CAAC3V,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;IAE5C,IAAImD,eAAe,CAACuB,aAAa,IAAIjB,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC,EAAE;MACtE,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MAChFgN,SAAS,IAAI3R,GAAG,CAAC7D,UAAU,CAACI,aAAa,EAAE1E,IAAI,EAAEga,MAAM,CAAC;MACxDC,eAAe,CAAC3V,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;;IAEnD,IAAImD,eAAe,CAACsB,WAAW,IAAItB,eAAe,CAACqB,OAAO,EAAE;MACxD2D,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAACzM,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,EAAErG,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC5KoM,uBAAuB,IACnBjE,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAACzM,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,EAAErG,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAChLia,eAAe,CAAC3V,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;;IAEjD+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBV,OAAO,EAAEmT,WAAW,CAAC3X,IAAI,EAAEyN,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;MACrErF,WAAW,EAAEH,UAAU,CAACG,WAAW;MACnCI,MAAM,EAAEP,UAAU,CAACO,MAAM;MACzBD,OAAO,EAAEN,UAAU,CAACM;KACvB,CAAC;GACL;EACD,MAAMqH,mBAAmB,GAAIjM,IAAI,IAAKyD,GAAG,CAAC4R,UAAU,GAAGvP,WAAW,GAAGC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC;EAC9F,MAAMma,QAAQ,GAAGA,CAACna,IAAI,EAAEX,KAAK,EAAE6J,OAAO,GAAG,EAAE,KAAK;IAC5C,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAChC,MAAMsZ,YAAY,GAAGzS,MAAM,CAACC,KAAK,CAAC8O,GAAG,CAAC5V,IAAI,CAAC;IAC3CmI,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEX,KAAK,CAAC;IAC7B,IAAIia,YAAY,EAAE;MACdvU,SAAS,CAAC+B,KAAK,CAAC5B,IAAI,CAAC;QACjBuB,MAAM,EAAEpH,KAAK;QACbW,IAAI;QACJ6N,OAAO,EAAE;OACZ,CAAC;MACF,IAAI,CAAC1K,eAAe,CAACqB,OAAO,IAAIrB,eAAe,CAACsB,WAAW,KACvDyE,OAAO,CAACiO,WAAW,EAAE;QACrBhP,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAAC7a,KAAK,EAAEoE,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxI+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBlF,IAAI;UACJyE,WAAW,EAAEH,UAAU,CAACG,WAAW;UACnCD,OAAO,EAAEmT,WAAW,CAAC3X,IAAI,EAAEX,KAAK;SACnC,CAAC;;KAET,MACI;MACD+G,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,IAAI,CAAC/G,iBAAiB,CAACF,KAAK,CAAC,GACzC6Z,SAAS,CAAClZ,IAAI,EAAEX,KAAK,EAAE6J,OAAO,CAAC,GAC/BuN,aAAa,CAACzW,IAAI,EAAEX,KAAK,EAAE6J,OAAO,EAAE,IAAI,CAAC;;IAEnDyM,cAAc,CAAC3V,IAAI,CAAC,IAAI+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IAChDH,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;MACjBlF;KACH,CAAC;GACL;EACD,MAAMuX,OAAO,GAAG,OAAOvX,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IAC1C,MAAMsQ,UAAU,GAAGrU,qBAAqB,CAACnF,IAAI,CAAC;IAC9C,IAAI4E,OAAO;IACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBP,YAAY,EAAE;KACjB,CAAC;IACF,IAAIqQ,WAAW,CAACqB,QAAQ,EAAE;MACtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAAC/W,WAAW,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAGwZ,UAAU,CAAC;MAC3F5U,OAAO,GAAG5E,IAAI,GACRwZ,UAAU,CAAC7G,KAAK,CAAE3S,IAAI,IAAK,CAACyD,GAAG,CAAC2W,YAAY,EAAEpa,IAAI,CAAC,CAAC,GACpD6D,aAAa,CAACuW,YAAY,CAAC;KACpC,MACI;MACD,IAAIpa,IAAI,EAAE;QACN4E,OAAO,GAAG,CAAC,MAAMyV,OAAO,CAACzY,GAAG,CAAC4X,UAAU,CAACzP,GAAG,CAAC,MAAOsP,SAAS,IAAK;UAC7D,MAAMjT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;UACrC,OAAO,MAAMtD,YAAY,CAAC3P,KAAK,CAACE,EAAE,GAAG;YAAE,CAAC+S,SAAS,GAAGjT;WAAO,GAAGA,KAAK,CAAC;SACvE,CAAC,CAAC,EAAEuM,KAAK,CAACnS,OAAO,CAAC;OACtB,MACI;QACD,MAAMuV,YAAY,CAAC1P,OAAO,CAAC;QAC3BzB,OAAO,GAAGf,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC;;;IAGlDE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG+P,QAAQ,CAACvS,IAAI,CAAC,GAAG;MAAEA;KAAM,GAAG,EAAG,CAAC,EAAE;MAAE6E,MAAM,EAAEP,UAAU,CAACO,MAAM;MAAEF,YAAY,EAAE;KAAO,CAAC,CAAC;IAC5I,IAAIuE,OAAO,CAACC,WAAW,IAAI,CAACvE,OAAO,EAAE;MACjCiE,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAElB,IAAI,GAAGwZ,UAAU,GAAG3S,MAAM,CAACN,KAAK,CAAC;;IAEjGpD,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IACzC,OAAO9I,OAAO;GACjB;EACD,MAAM0V,iBAAiB,GAAG,OAAOta,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACpD,MAAMsQ,UAAU,GAAGrU,qBAAqB,CAACnF,IAAI,CAAC;IAC9C,IAAI4E,OAAO;IAIXe,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAEtB,UAAU,CAACO,MAAM,CAAC;IACpD,IAAImQ,WAAW,CAACqB,QAAQ,EAAE;MACtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAAC/W,WAAW,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAGwZ,UAAU,CAAC;MAC3F5U,OAAO,GAAG5E,IAAI,GACRwZ,UAAU,CAAC7G,KAAK,CAAE3S,IAAI,IAAK,CAACyD,GAAG,CAAC2W,YAAY,EAAEpa,IAAI,CAAC,CAAC,GACpD6D,aAAa,CAACuW,YAAY,CAAC;KACpC,MACI;MACD,IAAIpa,IAAI,EAAE;QACN4E,OAAO,GAAG,CAAC,MAAMyV,OAAO,CAACzY,GAAG,CAAC4X,UAAU,CAACzP,GAAG,CAAC,MAAOsP,SAAS,IAAK;UAC7D,MAAMjT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;UACrC,OAAO,MAAMtD,YAAY,CAAC3P,KAAK,CAACE,EAAE,GAAG;YAAE,CAAC+S,SAAS,GAAGjT;WAAO,GAAGA,KAAK,CAAC;SACvE,CAAC,CAAC,EAAEuM,KAAK,CAACnS,OAAO,CAAC;OACtB,MACI;QACDoE,OAAO,GAAG,MAAMmR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;;;IAKnD,IAAI6C,OAAO,CAACC,WAAW,IAAI,CAACvE,OAAO,EAAE;MACjCiE,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAElB,IAAI,GAAGwZ,UAAU,GAAG3S,MAAM,CAACN,KAAK,CAAC;;IAEjGpD,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IACzC/H,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAEtB,UAAU,CAACO,MAAM,EAAE,KAAK,CAAC;IAC3D,OAAOD,OAAO;GACjB;EACD,MAAMsS,SAAS,GAAIsC,UAAU,IAAK;IAC9B7T,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEE,WAAW,EAAEO,OAAO,EAAE,cAAc,CAAC;IAC5D,MAAMI,MAAM,GAAGlE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEuD,cAAc,CAAC,EAAED,WAAW,CAAC;IAC5E,OAAO3E,WAAW,CAACqY,UAAU,CAAC,GACxB/S,MAAM,GACN8L,QAAQ,CAACiH,UAAU,CAAC,GAChB/V,GAAG,CAACgD,MAAM,EAAE+S,UAAU,CAAC,GACvBA,UAAU,CAACzP,GAAG,CAAE/J,IAAI,IAAKyD,GAAG,CAACgD,MAAM,EAAEzG,IAAI,CAAC,CAAC;GACxD;EACD,MAAMua,WAAW,GAAIva,IAAI,IAAK;IAC1BA,IAAI,GACEmF,qBAAqB,CAACnF,IAAI,CAAC,CAAC8W,OAAO,CAAE0D,SAAS,IAAKpP,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE2V,SAAS,CAAC,CAAC,GACtFlW,UAAU,CAACO,MAAM,GAAG,EAAG;IAC9BE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAEP,UAAU,CAACO;KACtB,CAAC;GACL;EACD,MAAM4V,QAAQ,GAAGA,CAACza,IAAI,EAAE2H,KAAK,EAAEuB,OAAO,KAAK;IACvC,MAAMhC,GAAG,GAAG,CAACzD,GAAG,CAAC4C,OAAO,EAAErG,IAAI,EAAE;MAAEsG,EAAE,EAAE;KAAI,CAAC,CAACA,EAAE,IAAI,EAAE,EAAEY,GAAG;IACzDiB,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAEuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmF,KAAK,CAAC,EAAE;MAAET;KAAK,CAAC,CAAC;IAC9EnC,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBlF,IAAI;MACJ6E,MAAM,EAAEP,UAAU,CAACO,MAAM;MACzBD,OAAO,EAAE;KACZ,CAAC;IACFsE,OAAO,IAAIA,OAAO,CAACC,WAAW,IAAIjC,GAAG,IAAIA,GAAG,CAACE,KAAK,IAAIF,GAAG,CAACE,KAAK,EAAE;GACpE;EACD,MAAMmG,KAAK,GAAGA,CAAC8L,SAAS,EAAExY,YAAY,KAAK2T,UAAU,CAAC6E,SAAS,CAAC,GAC1DtU,SAAS,CAACwI,KAAK,CAACtI,SAAS,CAAC;IACxBC,IAAI,EAAGwV,IAAI,IAAKrB,SAAS,CAACE,SAAS,CAAC7Y,SAAS,EAAEG,YAAY,CAAC,EAAE6Z,IAAI;GACrE,CAAC,GACAnB,SAAS,CAACF,SAAS,EAAExY,YAAY,EAAE,IAAI,CAAC;EAC9C,MAAMmG,UAAU,GAAGA,CAAChH,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACvC,KAAK,MAAMsR,SAAS,IAAIxa,IAAI,GAAGmF,qBAAqB,CAACnF,IAAI,CAAC,GAAG6G,MAAM,CAACN,KAAK,EAAE;MACvEM,MAAM,CAACN,KAAK,CAACoU,MAAM,CAACH,SAAS,CAAC;MAC9B3T,MAAM,CAACC,KAAK,CAAC6T,MAAM,CAACH,SAAS,CAAC;MAC9B,IAAI/W,GAAG,CAAC4C,OAAO,EAAEmU,SAAS,CAAC,EAAE;QACzB,IAAI,CAACtR,OAAO,CAAC0R,SAAS,EAAE;UACpBxP,KAAK,CAAC/E,OAAO,EAAEmU,SAAS,CAAC;UACzBpP,KAAK,CAACtF,WAAW,EAAE0U,SAAS,CAAC;;QAEjC,CAACtR,OAAO,CAAC2R,SAAS,IAAIzP,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE2V,SAAS,CAAC;QACzD,CAACtR,OAAO,CAAC4R,SAAS,IAAI1P,KAAK,CAAC9G,UAAU,CAACG,WAAW,EAAE+V,SAAS,CAAC;QAC9D,CAACtR,OAAO,CAAC6R,WAAW,IAAI3P,KAAK,CAAC9G,UAAU,CAACI,aAAa,EAAE8V,SAAS,CAAC;QAClE,CAACxF,WAAW,CAACvP,gBAAgB,IACzB,CAACyD,OAAO,CAAC8R,gBAAgB,IACzB5P,KAAK,CAACrF,cAAc,EAAEyU,SAAS,CAAC;;;IAG5CzV,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC,EAAE,CAAC;IACxBH,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE8B,UAAU,CAAC,EAAG,CAAC4E,OAAO,CAAC4R,SAAS,GAAG,EAAE,GAAG;MAAEtW,OAAO,EAAEmT,WAAW;KAAK,CAAC,CAAC;IAC1H,CAACzO,OAAO,CAAC+R,WAAW,IAAIvN,YAAY,EAAE;GACzC;EACD,MAAMwN,gBAAgB,GAAGA,CAAClb,IAAI,EAAEmb,QAAQ,EAAEjS,OAAO,KAAK;IAClDjD,QAAQ,CAACjG,IAAI,EAAEkJ,OAAO,CAAC;IACvB,IAAI9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAC9B,MAAMkH,GAAG,GAAG/F,WAAW,CAACga,QAAQ,CAAC9b,KAAK,CAAC,GACjC8b,QAAQ,CAACC,gBAAgB,GACrBD,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IACnDD,QAAQ,GACVA,QAAQ,GACZA,QAAQ;IACd,MAAMjI,iBAAiB,GAAGmI,yBAAyB,CAACnU,GAAG,CAAC;IACxD,IAAIA,GAAG,KAAKd,KAAK,CAACE,EAAE,CAACY,GAAG,IACnBgM,iBAAiB,IACdnS,OAAO,CAACqF,KAAK,CAACE,EAAE,CAAC2C,IAAI,IAAI,EAAE,CAAC,CAACnF,IAAI,CAAEuM,MAAM,IAAKA,MAAM,KAAKnJ,GAAG,CAAE,EAAE;MACpE;;IAEJd,KAAK,GAAG;MACJE,EAAE,EAAE4M,iBAAiB,GACf3Q,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4D,KAAK,CAACE,EAAE,CAAC,EAAE;QAAE2C,IAAI,EAAE,CAC7C,GAAGlI,OAAO,CAACqF,KAAK,CAACE,EAAE,CAAC2C,IAAI,IAAI,EAAE,CAAC,CAAC1I,MAAM,CAAE2G,GAAG,IAAK2P,aAAa,CAAC3P,GAAG,CAAC,IAAImI,QAAQ,CAACiM,QAAQ,CAACpU,GAAG,CAAC,CAAC,EAC7FA,GAAG,CACN;QAAEA,GAAG,EAAE;UAAEhI,IAAI,EAAEgI,GAAG,CAAChI,IAAI;UAAEc;;OAAQ,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4D,KAAK,CAACE,EAAE,CAAC,EAAE;QAAEY;OAAK;KACnG;IACDiB,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAEoG,KAAK,CAAC;IACzB0S,yBAAyB,CAAC9Y,IAAI,EAAEkH,GAAG,CAAC;GACvC;EACD,MAAMjB,QAAQ,GAAGA,CAACjG,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACrC,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhCmI,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAE;MACfsG,EAAE,EAAE/D,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG4D,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;QAAEY,GAAG,EAAE;UAAElH;;OAAS,CAAC,EAAE;QAAEA,IAAI;QAAEuG,KAAK,EAAE;OAAM,CAAC,EAAE2C,OAAO;KACzI,CAAC;IACFvD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG4D,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;MAAEY,GAAG,EAAE;QAAElH;;KAAS,CAAC,EAAE;MAAEA,IAAI;MAAEuG,KAAK,EAAE;KAAM,CAAC,EAAE2C,OAAO,CAAC,EAAC,wBAAwB,EAAE9C,KAAK,EAAEpG,IAAI,EAAEqG,OAAO,CAAC;IAC1M,IAAI6C,OAAO,CAAC7J,KAAK,EAAE;MACf8I,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEkJ,OAAO,CAAC7J,KAAK,CAAC;;IAEzC,IAAI,CAAC8B,WAAW,CAAC+H,OAAO,CAAChF,QAAQ,CAAC,IAC9BkC,KAAK,IACLA,KAAK,CAACE,EAAE,IACRF,KAAK,CAACE,EAAE,CAACY,GAAG,CAAChD,QAAQ,KAAKgF,OAAO,CAAChF,QAAQ,EAAE;MAC5CiE,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEkJ,OAAO,CAAChF,QAAQ,GAAGxD,SAAS,GAAG0F,KAAK,CAACE,EAAE,CAACY,GAAG,CAAC7H,KAAK,CAAC;;IAE7EwH,MAAM,CAACN,KAAK,CAAC2F,GAAG,CAAClM,IAAI,CAAC;IACtB,CAACoG,KAAK,IAAI0S,yBAAyB,CAAC9Y,IAAI,EAAEU,SAAS,EAAE,IAAI,CAAC;IAC1D,OAAOoU,iBAAiB,GAClB;MAAE9U,IAAI,EAAEA;KAAM,GACduC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;MAAExC;KAAM,EAAGmB,WAAW,CAAC+H,OAAO,CAAChF,QAAQ,CAAC,GAChE,EAAE,GACF;MAAEA,QAAQ,EAAEgF,OAAO,CAAChF;KAAW,CAAC,EAAE;MAAEzC,QAAQ,EAAE8W,YAAY;MAAE/W,MAAM,EAAE+W,YAAY;MAAErR,GAAG,EAAGA,GAAG,IAAK;QAC9F,IAAIA,GAAG,EAAE;UACLgU,gBAAgB,CAAClb,IAAI,EAAEkH,GAAG,EAAEgC,OAAO,CAAC;SACvC,MACI;UACD,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,EAAE,EAAE,CAAC;UACpC,MAAM2G,iBAAiB,GAAGqO,WAAW,CAACvP,gBAAgB,IAAIyD,OAAO,CAACzD,gBAAgB;UAClF,IAAIW,KAAK,CAACE,EAAE,EAAE;YACVF,KAAK,CAACE,EAAE,CAACC,KAAK,GAAG,KAAK;;UAE1BI,iBAAiB,IACb,EAAEC,kBAAkB,CAACC,MAAM,CAACC,KAAK,EAAE9G,IAAI,CAAC,IAAI+G,WAAW,CAAC,IACxDF,MAAM,CAAC0O,OAAO,CAACrJ,GAAG,CAAClM,IAAI,CAAC;;;KAEjC,CAAC;GACf;EACD,MAAMub,YAAY,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK,MAAOC,CAAC,IAAK;IACtD,IAAIA,CAAC,EAAE;MACHA,CAAC,CAACC,cAAc,IAAID,CAAC,CAACC,cAAc,EAAE;MACtCD,CAAC,CAACE,OAAO,IAAIF,CAAC,CAACE,OAAO,EAAE;;IAE5B,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIjQ,WAAW,GAAGrJ,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsD,WAAW,CAAC;IAEhDf,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBiQ,YAAY,EAAE;KACjB,CAAC;IACF,IAAI;MACA,IAAIH,WAAW,CAACqB,QAAQ,EAAE;QACtB,MAAM;UAAExR,MAAM;UAAE4B;SAAQ,GAAG,MAAMsR,eAAe,EAAE;QAClDzT,UAAU,CAACO,MAAM,GAAGA,MAAM;QAC1B+G,WAAW,GAAGnF,MAAM;OACvB,MACI;QACD,MAAMsP,YAAY,CAAC1P,OAAO,CAAC;;MAE/B,IAAIxC,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC,IAChCtC,MAAM,CAACmB,IAAI,CAACY,UAAU,CAACO,MAAM,CAAC,CAAC8N,KAAK,CAAE3S,IAAI,IAAKyD,GAAG,CAACmI,WAAW,EAAE5L,IAAI,CAAC,CAAC,EAAE;QACxE+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBL,MAAM,EAAE,EAAE;UACVsQ,YAAY,EAAE;SACjB,CAAC;QACF,MAAMqG,OAAO,CAAC5P,WAAW,EAAE8P,CAAC,CAAC;OAChC,MACI;QACDD,SAAS,KAAK,MAAMA,SAAS,CAACnX,UAAU,CAACO,MAAM,EAAE6W,CAAC,CAAC,CAAC;QACpD1G,WAAW,CAACH,gBAAgB,IACxBhM,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAE2F,MAAM,CAACN,KAAK,CAAC;;KAEpF,CACD,OAAOuV,GAAG,EAAE;MACRD,iBAAiB,GAAG,KAAK;MACzB,MAAMC,GAAG;KACZ,SACO;MACJxX,UAAU,CAACgO,WAAW,GAAG,IAAI;MAC7BvN,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBoN,WAAW,EAAE,IAAI;QACjB6C,YAAY,EAAE,KAAK;QACnBC,kBAAkB,EAAEvR,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC,IAAIgX,iBAAiB;QACzE3G,WAAW,EAAE5Q,UAAU,CAAC4Q,WAAW,GAAG,CAAC;QACvCrQ,MAAM,EAAEP,UAAU,CAACO;OACtB,CAAC;;GAET;EACD,MAAMkX,KAAK,GAAGA,CAACtV,MAAM,EAAEuV,gBAAgB,GAAG,EAAE,KAAK;IAC7C,MAAMC,aAAa,GAAGxV,MAAM,IAAIV,cAAc;IAC9C,IAAI6Q,KAAK,IAAI,CAACoF,gBAAgB,CAACE,UAAU,EAAE;MACvC,KAAK,MAAMlc,IAAI,IAAI6G,MAAM,CAACN,KAAK,EAAE;QAC7B,MAAMH,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;QAChC,IAAIoG,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;UACnB,MAAMyM,QAAQ,GAAGvT,KAAK,CAACC,OAAO,CAAC2G,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,GACvC7C,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,CAAC,CAAC,GAChB7C,KAAK,CAACE,EAAE,CAACY,GAAG;UAClB,IAAI;YACA2P,aAAa,CAAC9D,QAAQ,CAAC,IAAIA,QAAQ,CAACoJ,OAAO,CAAC,MAAM,CAAC,CAACJ,KAAK,EAAE;YAC3D;WACH,CACD,OAAOjK,EAAE,EAAE;;;;IAIvB,IAAI,CAACkK,gBAAgB,CAACI,iBAAiB,EAAE;MACrCrW,cAAc,GAAGxD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;MACjDnW,WAAW,GAAGvD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;;IAElD,IAAI,CAACD,gBAAgB,CAACE,UAAU,EAAE;MAC9B7V,OAAO,GAAG,EAAE;MACZP,WAAW,GAAG,EAAE;MAChBf,SAAS,CAACd,OAAO,CAACiB,IAAI,CAAC;QACnBuB,MAAM,EAAEuV,gBAAgB,CAACI,iBAAiB,GACpCrW,cAAc,GACdxD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa;OACxC,CAAC;MACFlX,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC,EAAE,CAAC;MACxBH,SAAS,CAAC+B,KAAK,CAAC5B,IAAI,CAAC;QACjBuB,MAAM,EAAElE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;QACxCpO,OAAO,EAAE;OACZ,CAAC;;IAENhH,MAAM,GAAG;MACLN,KAAK,EAAE,IAAI+O,GAAG,EAAE;MAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;MAClBxO,KAAK,EAAE,IAAIwO,GAAG,EAAE;MAChB/H,KAAK,EAAE,IAAI+H,GAAG,EAAE;MAChBjI,QAAQ,EAAE;KACb;IACDtI,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBgQ,WAAW,EAAE8G,gBAAgB,CAACK,eAAe,GACvC/X,UAAU,CAAC4Q,WAAW,GACtB,CAAC;MACP1Q,OAAO,EAAEwX,gBAAgB,CAAClB,SAAS,GAC7BxW,UAAU,CAACE,OAAO,GAClBwX,gBAAgB,CAACI,iBAAiB,GAC9B/N,SAAS,CAAC5H,MAAM,EAAEV,cAAc,CAAC,GACjC,KAAK;MACfuM,WAAW,EAAE0J,gBAAgB,CAACM,eAAe,GACvChY,UAAU,CAACgO,WAAW,GACtB,KAAK;MACX7N,WAAW,EAAEuX,gBAAgB,CAAClB,SAAS,GAAGxW,UAAU,CAACG,WAAW,GAAG,EAAE;MACrEC,aAAa,EAAEsX,gBAAgB,CAACjB,WAAW,GACrCzW,UAAU,CAACI,aAAa,GACxB,EAAE;MACRG,MAAM,EAAEmX,gBAAgB,CAACO,UAAU,GAAGjY,UAAU,CAACO,MAAM,GAAG,EAAE;MAC5DsQ,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACvB,CAAC;IACFC,UAAU,GAAG,CAAC,CAAC2G,gBAAgB,CAACf,WAAW;GAC9C;EACD,MAAMuB,QAAQ,GAAIxc,IAAI,IAAKyD,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,CAACsG,EAAE,CAACY,GAAG,CAACE,KAAK,EAAE;EAC5D,OAAO;IACHnD,OAAO,EAAE;MACLgC,QAAQ;MACRe,UAAU;MACV2Q,WAAW;MACX4B,SAAS;MACT7L,YAAY;MACZkM,iBAAiB;MACjBtN,qBAAqB;MACrBL,mBAAmB;MACnBlH,SAAS;MACT4B,iBAAiB,EAAEqO,WAAW,CAACvP,gBAAgB;MAC/CY,OAAO;MACPlD,eAAe;MACf,IAAI2C,WAAWA,GAAG;QACd,OAAOA,WAAW;OACrB;MACD,IAAIA,WAAWA,CAACzG,KAAK,EAAE;QACnByG,WAAW,GAAGzG,KAAK;OACtB;MACD,IAAIgW,UAAUA,GAAG;QACb,OAAOA,UAAU;OACpB;MACD,IAAIA,UAAUA,CAAChW,KAAK,EAAE;QAClBgW,UAAU,GAAGhW,KAAK;OACrB;MACD,IAAI0G,cAAcA,GAAG;QACjB,OAAOA,cAAc;OACxB;MACD,IAAIA,cAAcA,CAAC1G,KAAK,EAAE;QACtB0G,cAAc,GAAG1G,KAAK;OACzB;MACD,IAAIwH,MAAMA,GAAG;QACT,OAAOA,MAAM;OAChB;MACD,IAAIA,MAAMA,CAACxH,KAAK,EAAE;QACdwH,MAAM,GAAGxH,KAAK;OACjB;MACD0H,WAAW,EAAE;QACT,IAAItG,GAAGA,GAAG;UACN,OAAOsG,WAAW;SACrB;QACD,IAAItG,GAAGA,CAACpB,KAAK,EAAE;UACX0H,WAAW,GAAG1H,KAAK;;OAE1B;MACDiF,UAAU,EAAE;QACR,IAAI7D,GAAGA,GAAG;UACN,OAAO6D,UAAU;SACpB;QACD,IAAI7D,GAAGA,CAACpB,KAAK,EAAE;UACXiF,UAAU,GAAGjF,KAAK;;OAEzB;MACDod,YAAY,EAAGvT,OAAO,IAAK;QACvB8L,WAAW,GAAGzS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmS,cAAc,CAAC,EAAEzL,OAAO,CAAC;;KAE9E;IACDqO,OAAO;IACP+C,iBAAiB;IACjBrU,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL4M,QAAQ;IACRjD,SAAS;IACT6E,KAAK;IACLxB,WAAW;IACXvT,UAAU;IACVyT,QAAQ;IACR+B;GACH;AACL;;ACh0BA,YAAgBtV,GAAG,IAAK,CAAC2P,aAAa,CAAC3P,GAAG,CAAC,IAAI,CAACmI,QAAQ,CAACiM,QAAQ,CAACpU,GAAG,CAAC;;ACO/D,SAASwV,OAAOA,CAAC5Z,KAAK,GAAG,EAAE,EAAE;EAChC,MAAM6Z,YAAY,GAAGja,MAAY,EAAE;EACnC,MAAM,CAACQ,SAAS,EAAEmB,eAAe,CAAC,GAAG3B,QAAc,CAAC;IAChD8B,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACf6N,WAAW,EAAE,KAAK;IAClB4C,WAAW,EAAE,CAAC;IACdxQ,aAAa,EAAE,EAAE;IACjByQ,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzBxQ,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX,CAAC;EACF,IAAI8X,YAAY,CAACtc,OAAO,EAAE;IACtBsc,YAAY,CAACtc,OAAO,CAAC4D,OAAO,CAACwY,YAAY,CAAC3Z,KAAK,CAAC;GACnD,MACI;IACD6Z,YAAY,CAACtc,OAAO,GAAGkC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEoa,mBAAmB,CAAC9Z,KAAK,CAAC,CAAC,EAAE;MAAEI;KAAW,CAAC;;EAEtG,MAAMe,OAAO,GAAG0Y,YAAY,CAACtc,OAAO,CAAC4D,OAAO;EAC5CvB,SAAe,CAAC,MAAM;IAClB,MAAMoC,qBAAqB,GAAGb,OAAO,CAACc,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAIA,CAAChC,SAAS,EAAE;QAEZ,IAAImC,qBAAqB,CAACnC,SAAS,EAAEe,OAAO,CAACd,eAAe,EAAE,IAAI,CAAC,EAAE;UACjEc,OAAO,CAACK,UAAU,CAAC7D,GAAG,GAAG8B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC,EAAEyC,SAAS,CAAC;UAC5FmB,eAAe,CAAC9B,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC,CAAC;;;KAGrE,CAAC;IACF,MAAMoc,yBAAyB,GAAG5Y,OAAO,CAACc,SAAS,CAAC+B,KAAK,CAAC7B,SAAS,CAAC;MAChEC,IAAIA,CAACF,KAAK,EAAE;QACR,IAAIA,KAAK,CAACyB,MAAM,IAAIzB,KAAK,CAAChF,IAAI,IAAIiE,OAAO,CAACd,eAAe,CAACyB,OAAO,EAAE;UAC/DuD,GAAG,CAAClE,OAAO,CAAC6B,WAAW,EAAEd,KAAK,CAAChF,IAAI,EAAEgF,KAAK,CAACyB,MAAM,CAAC;UAClDxC,OAAO,CAACyJ,YAAY,EAAE;;;KAGjC,CAAC;IACF,OAAO,MAAM;MACT5I,qBAAqB,CAACQ,WAAW,EAAE;MACnCuX,yBAAyB,CAACvX,WAAW,EAAE;KAC1C;GACJ,EAAE,CAACrB,OAAO,CAAC,CAAC;EACbvB,SAAe,CAAC,MAAM;IAClB,MAAMoa,oBAAoB,GAAG,EAAE;IAC/B,IAAI,CAAC7Y,OAAO,CAACoR,UAAU,EAAE;MACrBpR,OAAO,CAACoR,UAAU,GAAG,IAAI;MACzBpR,OAAO,CAACd,eAAe,CAACyB,OAAO,IAAIX,OAAO,CAACyJ,YAAY,EAAE;MACzD,CAAC5K,KAAK,CAAC2C,gBAAgB,IACnBxB,OAAO,CAAC2V,iBAAiB,CAAC3V,OAAO,CAAC8B,cAAc,CAAC;;IAEzD,KAAK,MAAM/F,IAAI,IAAIiE,OAAO,CAAC4C,MAAM,CAAC0O,OAAO,EAAE;MACvC,MAAMnP,KAAK,GAAG3C,GAAG,CAACQ,OAAO,CAACoC,OAAO,EAAErG,IAAI,CAAC;MACxCoG,KAAK,KACAA,KAAK,CAACE,EAAE,CAAC2C,IAAI,GAAG7C,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC0J,KAAK,CAACoK,IAAI,CAAC,GAAGA,IAAI,CAAC3W,KAAK,CAACE,EAAE,CAACY,GAAG,CAAC,CAAC,IAChE4V,oBAAoB,CAACpN,IAAI,CAAC1P,IAAI,CAAC;;IAEvC2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEkX,oBAAoB,EAAC,sBAAsB,EAAC7Y,OAAO,CAAC4C,MAAM,EAAC5C,OAAO,CAAC;IAC1F6Y,oBAAoB,CAACnZ,MAAM,IACvBgZ,YAAY,CAACtc,OAAO,CAAC2G,UAAU,CAAC8V,oBAAoB,CAAC;IACzD7Y,OAAO,CAAC4C,MAAM,CAAC0O,OAAO,GAAG,IAAID,GAAG,EAAE;GACrC,CAAC;EACFqH,YAAY,CAACtc,OAAO,CAAC6C,SAAS,GAAGqC,iBAAiB,CAACrC,SAAS,EAAEe,OAAO,CAACd,eAAe,CAAC;EACtF,OAAOwZ,YAAY,CAACtc,OAAO;AAC/B;;ACrEO,SAAS2c,QAAQA,CAACla,KAAK,EAAE;EAC5B,MAAMkB,OAAO,GAAGpB,cAAc,EAAE;EAChC,MAAM;IAAEqB,OAAO,GAAGD,OAAO,CAACC,OAAO;IAAEjE,IAAI;IAAEa,YAAY;IAAEqD;GAAW,GAAGpB,KAAK,IAAI,EAAE;EAChF,MAAMma,KAAK,GAAGva,MAAY,CAAC1C,IAAI,CAAC;EAChCid,KAAK,CAAC5c,OAAO,GAAGL,IAAI;EACpB,MAAM,CAACX,KAAK,EAAE6d,WAAW,CAAC,GAAGxa,QAAc,CAACvB,WAAW,CAACN,YAAY,CAAC,GAC/DoD,OAAO,CAACsV,SAAS,CAACvZ,IAAI,CAAC,GACvBa,YAAY,CAAC;EACnB6B,SAAe,CAAC,MAAM;IAClB,MAAMya,iBAAiB,GAAGlZ,OAAO,CAACc,SAAS,CAACwI,KAAK,CAACtI,SAAS,CAAC;MACxDC,IAAI,EAAEA,CAAC;QAAElF;OAAM,KAAK;QAChB2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,uBAAuB,EAAE5F,IAAI,CAAC;QACrD,OAAM,CAAC,CAACid,KAAK,CAAC5c,OAAO,IACrB,CAACL,IAAI,IACLmF,qBAAqB,CAAC8X,KAAK,CAAC5c,OAAO,CAAC,CAACD,IAAI,CAAEiZ,SAAS,IAAKrZ,IAAI,IACzDqZ,SAAS,KACRA,SAAS,CAAC7L,UAAU,CAACxN,IAAI,CAAC,IACvBA,IAAI,CAACwN,UAAU,CAAC6L,SAAS,CAAC,CAAC,CAAC,KACpC6D,WAAW,CAACjZ,OAAO,CAACsV,SAAS,CAAC0D,KAAK,CAAC5c,OAAO,EAAEQ,YAAY,CAAC,CAAC;;KAClE,CAAC;IACFqD,QAAQ,IAAIiZ,iBAAiB,CAAC7X,WAAW,EAAE;IAC3C,OAAO,MAAM6X,iBAAiB,CAAC7X,WAAW,EAAE;GAC/C,EAAE,CAACpB,QAAQ,EAAED,OAAO,EAAEpD,YAAY,CAAC,CAAC;EACrC,OAAOxB,KAAK;AAChB;;ACzBA,MAAM+d,cAAc,GAAGA,CAACC,OAAO,GAAG,EAAE,EAAE/S,EAAE,GAAG,CAAC,EAAED,IAAI,GAAG,CAAC,KAAK;EACvD,MAAMiT,UAAU,GAAG,CAAC,GAAGD,OAAO,CAAC,CAACjT,KAAK,CAACC,IAAI,EAAEC,EAAE,CAAC;EAC/C3E,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,gBAAgB,EAAE0X,UAAU,EAAEhT,EAAE,CAAC;EACxD,OAAO,IAAIgL,GAAG,CAACgI,UAAU,CAAC;AAC9B,CAAC;AAED,AAAe,SAASC,UAAUA,CAACC,IAAI,GAAG;EAAExd,IAAI,EAAE;AAAG,CAAC,EAAE;EAEpD,MAAM,CAACyd,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAACH,IAAI,CAAC;EAG1C,MAAM,CAACH,OAAO,EAAEO,aAAa,CAAC,GAAGD,QAAQ,CAAC,IAAIrI,GAAG,EAAE,CAAC;EACpD,MAAM,CAACjN,KAAK,EAAEwV,QAAQ,CAAC,GAAGF,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACG,WAAW,EAAEC,iBAAiB,CAAC,GAAGJ,QAAQ,CAACH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAExd,IAAI,CAAC;EAE7D,MAAMgF,KAAK,GAAGgZ,OAAO,CAAC,MAAMP,MAAM,CAACK,WAAW,CAAC,EAAE,CAACzV,KAAK,EAAEyV,WAAW,CAAC,CAAC;EAOtE,MAAMG,QAAQ,GAAI5e,KAAK,IAAK;IACxB,IAAIA,KAAK,KAAKqB,SAAS,IAAIrB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,EAAE,EAAE;IAG3D,MAAM6e,QAAQ,GAAG7e,KAAK,CAACW,IAAI;IAE3B,MAAMme,QAAQ,GAAGC,CAAC,CAAC3a,GAAG,CAACga,MAAM,EAAES,QAAQ,CAAC;IAGxC,IAAIb,OAAO,CAACzH,GAAG,CAACsI,QAAQ,CAAC,EAAE;MAIvB,MAAMZ,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEc,QAAQ,CAAC,SAAS,CAAC,CAAC;MAC/DP,aAAa,CAACN,UAAU,CAAC;MAEzB,MAAMhb,KAAI,GAAG8b,CAAC,CAACC,SAAS,CAACD,CAAC,CAACjW,GAAG,CAACsV,MAAM,EAAES,QAAQ,EAAE;QAAE,GAAG7e,KAAK;QAAE,SAAS,EAAE8e,QAAQ,CAAC,SAAS;OAAG,CAAC,CAAC;MAC/FT,SAAS,CAACpb,KAAI,CAAC;MAGfub,QAAQ,CAACM,QAAQ,CAAC,SAAS,CAAC,CAAC;MAC7BJ,iBAAiB,CAACG,QAAQ,CAAC;MAE3BvY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,uBAAuB,EAAEyX,OAAO,EAAE,OAAO,EAAEc,QAAQ,CAAC,SAAS,CAAC,EAAEb,UAAU,CAAC;MAClG;;IAEJ3X,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,UAAU,EAAEvG,KAAK,EAAE+e,CAAC,CAACjW,GAAG,CAACsV,MAAM,EAAES,QAAQ,EAAE7e,KAAK,CAAC,EAAE2F,KAAK,EAAEqY,OAAO,CAACiB,IAAI,CAAC;IAC9F,MAAMC,QAAQ,GAAGlW,KAAK,GAAG,CAAC;IAC1B,MAAM/F,IAAI,GAAG8b,CAAC,CAACC,SAAS,CAACD,CAAC,CAACjW,GAAG,CAACsV,MAAM,EAAES,QAAQ,EAAE;MAAE,GAAG7e,KAAK;MAAE,SAAS,EAAEkf;KAAU,CAAC,CAAC;IAEpFV,QAAQ,CAACU,QAAQ,CAAC;IAElBX,aAAa,CAACP,OAAO,CAACnR,GAAG,CAACgS,QAAQ,CAAC,CAAC;IACpCR,SAAS,CAACpb,IAAI,CAAC;IACfyb,iBAAiB,CAACG,QAAQ,CAAC;IAC3BvY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAEyX,OAAO,CAAC;IAC9C1X,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEvG,KAAK,EAAE,2BAA2B,EAAE8e,QAAQ,CAAC;IACpExY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE6X,MAAM,EAAE,gBAAgB,EAAEzY,KAAK,EAAE8Y,WAAW,EAAEM,CAAC,CAACI,OAAO,CAACL,QAAQ,EAAE9e,KAAK,CAAC,CAAC;GACnG;EAcD,MAAMof,UAAU,GAAGA,CAACjB,IAAI,GAAG;IAAExd,IAAI,EAAE;GAAI,KAAK;IACxC6d,QAAQ,CAAC,CAAC,CAAC;IACXH,SAAS,CAAC,EAAE,CAAC;IACbE,aAAa,CAAC,EAAE,CAAC;IACjBjY,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,iBAAiB,EAAEyX,OAAO,EAAEI,MAAM,EAAEpV,KAAK,CAAC;GACpE;EAED,MAAMqW,MAAM,GAAGA,CAACC,KAAK,GAAG,CAAC,EAAE5C,KAAK,GAAG,KAAK,KAAK;IACzC,IAAG6C,MAAM,CAACD,KAAK,CAAC,EAAC;MACbE,aAAa,CAACF,KAAK,EAAE5C,KAAK,CAAC;MAC3B;;IAEJpW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,cAAc,EAAE+Y,KAAK,CAAC;IAC7C,IAAG,CAAClB,MAAM,CAACkB,KAAK,CAAC,EAAC;MACd,MAAM,kCAAkC;;IAE5CG,YAAY,CAACH,KAAK,EAAE5C,KAAK,CAAC;GAC7B;EAGD,MAAM8C,aAAa,GAAGA,CAACF,KAAK,GAAG,CAAC,EAAE5C,KAAK,GAAG,KAAK,KAAK;IAChDpW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+Y,KAAK,EAAE,aAAa,CAAC;IAC5C,MAAMJ,QAAQ,GAAG5U,IAAI,CAAC7H,GAAG,CAAC,CAAC,EAAE8c,MAAM,CAACvW,KAAK,CAAC,IAAIuW,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,MAAMI,gBAAgB,GAAGxc,MAAM,CAACmB,IAAI,CAAC+Z,MAAM,CAAC,CAACc,QAAQ,GAAG,CAAC,CAAC;IAE1D5Y,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+D,IAAI,CAAC7H,GAAG,CAAC,CAAC,EAAE8c,MAAM,CAACvW,KAAK,CAAC,IAAIuW,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,0DAA0D,EAAEtW,KAAK,EAAE0W,gBAAgB,EAAEtB,MAAM,CAACsB,gBAAgB,CAAC,CAAC;IACxLhB,iBAAiB,CAACgB,gBAAgB,CAAC;IACnClB,QAAQ,CAACU,QAAQ,CAAC;IAClB,IAAIxC,KAAK,EAAE;MACP,MAAMiD,YAAY,GAAGZ,CAAC,CAAC3a,GAAG,CAACga,MAAM,EAAEsB,gBAAgB,CAAC;MACpD,MAAMzB,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEkB,QAAQ,CAAC;MAIpDX,aAAa,CAACN,UAAU,CAAC;MACzB3X,OAAO,CAACC,GAAG,CAAC,SAAS,EACjBmZ,gBAAgB,EAChBR,QAAQ,EACR,kBAAkB,EAClBlB,OAAO,EACPC,UAAU,EACV0B,YAAY,CAAC,SAAS,CAE1B,CAAC;;GAER;EAED,MAAMF,YAAY,GAAGA,CAACH,KAAK,GAAG,CAAC,EAAE5C,KAAK,GAAG,KAAK,KAAK;IAC/CpW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+Y,KAAK,EAAE,aAAa,CAAC;IAC5C,MAAMK,YAAY,GAAGZ,CAAC,CAAC3a,GAAG,CAACga,MAAM,EAAEkB,KAAK,CAAC;IAGzC,MAAMJ,QAAQ,GAAG5U,IAAI,CAAC7H,GAAG,CAAC,CAAC,EAAE8c,MAAM,CAACvW,KAAK,CAAC,IAAIuW,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IAClE,MAAMI,gBAAgB,GAAGxc,MAAM,CAACmB,IAAI,CAAC+Z,MAAM,CAAC,CAACc,QAAQ,GAAG,CAAC,CAAC;IAE1D5Y,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+D,IAAI,CAAC7H,GAAG,CAAC,CAAC,EAAE8c,MAAM,CAACvW,KAAK,CAAC,IAAIuW,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,0DAA0D,EAAEtW,KAAK,EAAE0W,gBAAgB,EAAEtB,MAAM,CAACsB,gBAAgB,CAAC,CAAC;IACxLhB,iBAAiB,CAACgB,gBAAgB,CAAC;IACnClB,QAAQ,CAACU,QAAQ,CAAC;IAClB,IAAIxC,KAAK,EAAE;MACP,MAAMiD,aAAY,GAAGZ,CAAC,CAAC3a,GAAG,CAACga,MAAM,EAAEsB,gBAAgB,CAAC;MACpD,MAAMzB,UAAU,GAAGF,cAAc,CAACC,OAAO,EAAEkB,QAAQ,CAAC;MAIpDX,aAAa,CAACN,UAAU,CAAC;MACzB3X,OAAO,CAACC,GAAG,CAAC,SAAS,EACjBmZ,gBAAgB,EAChBR,QAAQ,EACR,kBAAkB,EAClBlB,OAAO,EACPC,UAAU,EACV0B,aAAY,CAAC,SAAS,CAE1B,CAAC;;GAER;EAED,MAAMC,SAAS,GAAGA,CAACN,KAAK,GAAG,CAAC,KAAK;IAC7Bd,QAAQ,CAAClU,IAAI,CAAC5H,GAAG,CAAC0b,MAAM,CAAC9Z,MAAM,GAAG,CAAC,EAAEib,MAAM,CAACvW,KAAK,CAAC,IAAIuW,MAAM,CAACD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GAC9E;EAED,MAAMO,UAAU,GAAI7f,KAAK,IAAK;IAC1B,MAAM8e,QAAQ,GAAGC,CAAC,CAAC3a,GAAG,CAACga,MAAM,EAAEK,WAAW,CAAC;IAC3CK,QAAQ,CAACnM,aAAa,GAAG;MAAE,GAAG3S;KAAO;IACrCsG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEvG,KAAK,EAAE,wBAAwB,EAAE8e,QAAQ,CAAC;GACpE;EAED,OAAO;IACHnZ,KAAK,EAAEA,KAAK;IACZiZ,QAAQ,EAAEA,QAAQ;IAClBQ,UAAU,EAAEA,UAAU;IACtBX,WAAW;IACXzV,KAAK,EAAEA,KAAK;IACZI,SAAS,EAAE,CAAAgV,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE9Z,MAAM,IAAG,CAAC,IAAI,CAAC;IAClC+a,MAAM,EAAEA,MAAM;IACdO,SAAS,EAAEA,SAAS;IACpBC,UAAU,EAAEA,UAAU;IACtB7B;GACH;AACL;;AChLA,MAAM8B,eAAe,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE1C,MAAMC,UAAU,GAAGA,CAAChgB,KAAK,EAAE6J,OAAO,KAAK;EACnC,OAAQ,GAAE7J,KAAM,gBAAe;AACnC,CAAC;AAED,MAAMigB,mBAAmB,GAAIC,UAAU,IAAK;EACxC,IAAI,OAAOA,UAAU,KAAK,WAAW,IAAI,OAAOA,UAAU,CAACC,gBAAgB,KAAK,WAAW,EAAE;IAC3F,MAAM,IAAIC,SAAS,CAAC,4BAA4B,CAAC;;EAEnDF,UAAU,CAACC,gBAAgB,CACzB,YAAY,EACZ,CAACngB,KAAK,EAAE6J,OAAO,KAAKmW,UAAU,CAAChgB,KAAK,AAAS,CAAC,EAC9C,UACF,CAAC;AACL,CAAC;AAED,SAASqgB,eAAeA,CAACC,IAAI,EAAEzW,OAAO,EAAE;EACpC,MAAMqW,UAAU,GAAGJ,eAAe,CAACQ,IAAI,EAAEzW,OAAO,CAAC;EACjDoW,mBAAmB,CAACC,UAAU,CAAC;EAC/B,OAAOA,UAAU;AACrB;;ACnBe,eAAeK,WAAWA,CAACzgB,IAAI,EAAE0gB,MAAM,EAAG;EACrD,MAAMN,UAAU,GAAGO,eAAO,CAACD,MAAM,CAAC;EAClC,MAAM/e,MAAM,GAAG,MAAMye,UAAU,CAACQ,QAAQ,CAAC5gB,IAAI,CAAC;EAC9C,OAAO2B,MAAM;AACjB;;ACJA,MAAMkf,gBAAgB,GAAGA,CAACC,UAAU,EAAE7Z,KAAK,EAAE8Z,EAAE,EAAEC,iBAAiB,GAAG,KAAK,EAAEC,gBAAgB,GAAG,KAAK,KAAK;EACvG,IAAI,CAAC5gB,KAAK,CAACC,OAAO,CAACwgB,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAII,KAAK,CAAC,8BAA8B,CAAC;;EAGjD,MAAM,CAAChD,OAAO,EAAEiD,UAAU,CAAC,GAAG3C,QAAQ,CAACsC,UAAU,CAAC;EAClD,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAG7C,QAAQ,CAAC,CAAC,CAAC;EAEnD8C,SAAS,CAAC,MAAM;IACd,IAAIpD,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;MACxB6c,eAAe,CAAC,CAAC,CAAC;KACnB,MAAM;MACL,MAAMjC,QAAQ,GAAGlB,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAK8Z,EAAE,CAAC;MACxDM,eAAe,CAACjC,QAAQ,IAAI,CAAC,GAAGA,QAAQ,GAAG,CAAC,CAAC;;GAEhD,EAAE,CAAC2B,EAAE,CAAC,CAAC;EAERO,SAAS,CAAC,MAAM;IAEd,IAAIpD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,IAAI,CAAC0Z,OAAO,CAAC,CAAC,CAAC,CAACne,IAAI,EAAE;MAC1CohB,UAAU,CAACK,WAAW,IAAI;QACxB,MAAMC,eAAe,GAAG;UAAE,GAAGD,WAAW,CAAC,CAAC,CAAC;UAAEzhB,IAAI,EAAE;SAAW;QAC9D,OAAO,CAAC0hB,eAAe,EAAE,GAAGD,WAAW,CAACvW,KAAK,CAAC,CAAC,CAAC,CAAC;OAClD,CAAC;;GAEL,EAAE,CAACiT,OAAO,CAAC,CAAC;EAEb,MAAMwD,YAAY,GAAGA,MAAON,YAAY,GAAG,CAAC,IAAIlD,OAAO,CAAC1Z,MAAM,GAAG,KAAK,GAAG4c,YAAY,GAAG,CAAE;EAC1F,MAAMO,gBAAgB,GAAGA,MAAOP,YAAY,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,GAAGA,YAAY,GAAG,CAAE;EAEhF,MAAMrb,IAAI,GAAGA,MAAM;IACjB,IAAImY,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IACtC,MAAMod,SAAS,GAAGF,YAAY,EAAE;IAChC,OAAOE,SAAS,KAAK,KAAK,GAAG1D,OAAO,CAAC0D,SAAS,CAAC,GAAG,KAAK;GACxD;EAED,MAAM1gB,OAAO,GAAGA,MAAOkgB,YAAY,IAAI,CAAC,IAAIA,YAAY,GAAGlD,OAAO,CAAC1Z,MAAM,GAAG0Z,OAAO,CAACkD,YAAY,CAAC,GAAG,KAAM;EAE1G,MAAM1P,QAAQ,GAAGA,MAAM;IACrB,IAAIwM,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE,OAAO,KAAK;IACtC,MAAMqd,aAAa,GAAGF,gBAAgB,EAAE;IACxC,OAAOE,aAAa,KAAK,KAAK,GAAG3D,OAAO,CAAC2D,aAAa,CAAC,GAAG,KAAK;GAChE;EAED,MAAMC,SAAS,GAAGA,MAAM;IACtB,IAAI5D,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B6c,eAAe,CAAC,CAAC,CAAC;GACnB;EAED,MAAMU,IAAI,GAAGA,CAACC,KAAK,EAAEC,WAAW,GAAG,KAAK,KAAK;IAC3C,IAAI/D,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B,MAAM4a,QAAQ,GAAGlB,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAK+a,KAAK,CAAC;IAC3D,IAAI5C,QAAQ,IAAI,CAAC,EAAE;MACjBiC,eAAe,CAACjC,QAAQ,CAAC;MACzB,IAAI6C,WAAW,EAAE;QACfC,gBAAgB,CAAC9C,QAAQ,CAAC;;;GAG/B;EAED,MAAM+C,MAAM,GAAGA,MAAM;IACnB,IAAIjE,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B,MAAMod,SAAS,GAAGF,YAAY,EAAE;IAChC,IAAIE,SAAS,KAAK,KAAK,EAAE;MACvBP,eAAe,CAACO,SAAS,CAAC;;GAE7B;EAED,MAAMQ,SAAS,GAAGA,CAAClZ,KAAK,EAAE+Y,WAAW,GAAG,KAAK,KAAK;IAChD,IAAI/D,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B,IAAI0E,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGgV,OAAO,CAAC1Z,MAAM,EAAE;MACxC6c,eAAe,CAACnY,KAAK,CAAC;MACtB,IAAI+Y,WAAW,EAAE;QACfC,gBAAgB,CAAChZ,KAAK,CAAC;;;GAG5B;EAED,MAAMqW,MAAM,GAAGA,CAAC0C,WAAW,GAAG,KAAK,KAAK;IACtC,IAAI/D,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B,MAAMqd,aAAa,GAAGF,gBAAgB,EAAE;IACxC,IAAIE,aAAa,KAAK,KAAK,EAAE;MAC3BR,eAAe,CAACQ,aAAa,CAAC;MAC9B,IAAII,WAAW,EAAE;QACfC,gBAAgB,CAACL,aAAa,CAAC;;;GAGpC;EAED,MAAMQ,eAAe,GAAGA,CAACJ,WAAW,GAAG,KAAK,EAAEK,aAAa,GAAG,IAAI,KAAK;IACrE,IAAIpE,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAE1B,IAAIqd,aAAa,GAAGT,YAAY,GAAG,CAAC;IACpC,IAAIkB,aAAa,EAAE;MACjB,OAAOT,aAAa,IAAI,CAAC,IAAI3D,OAAO,CAAC2D,aAAa,CAAC,CAAC9hB,IAAI,KAAK,WAAW,EAAE;QACxE8hB,aAAa,EAAE;;;IAInB,IAAIA,aAAa,IAAI,CAAC,EAAE;MACtBR,eAAe,CAACQ,aAAa,CAAC;MAC9B,IAAII,WAAW,EAAE;QACfC,gBAAgB,CAACL,aAAa,CAAC;;;GAGpC;EAED,MAAMU,eAAe,GAAGA,CAACN,WAAW,GAAG,KAAK,EAAEK,aAAa,GAAG,IAAI,EAAEviB,IAAI,GAAG,SAAS,KAAK;IACvF,IAAIme,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAE1B,IAAIod,SAAS,GAAGR,YAAY,GAAG,CAAC;IAChC,IAAIkB,aAAa,EAAE;MACjB,OAAOV,SAAS,GAAG1D,OAAO,CAAC1Z,MAAM,IAAI0Z,OAAO,CAAC0D,SAAS,CAAC,CAAC7hB,IAAI,KAAKA,IAAI,EAAE;QACrE6hB,SAAS,EAAE;;;IAIf,IAAIA,SAAS,GAAG1D,OAAO,CAAC1Z,MAAM,EAAE;MAC9B6c,eAAe,CAACO,SAAS,CAAC;MAC1B,IAAIK,WAAW,EAAE;QACfC,gBAAgB,CAACN,SAAS,CAAC;;;GAGhC;EAED,MAAMY,OAAO,GAAGA,MAAM;IACpB,IAAItE,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAC1B6c,eAAe,CAACnD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,CAAC;GACpC;EAED,MAAMie,mBAAmB,GAAGA,CAACxZ,MAAM,EAAEyZ,WAAW,KAAK;IACnD,IAAGA,WAAW,GAAGxE,OAAO,CAAC1Z,MAAM,EAAE;IACjC,MAAMme,QAAQ,GAAG,CAAC,GAAGzE,OAAO,CAAC;IAC7ByE,QAAQ,CAACvX,MAAM,CAACsX,WAAW,EAAE,CAAC,EAAEzZ,MAAM,CAAC;IACvCkY,UAAU,CAACwB,QAAQ,CAAC;IACpBtB,eAAe,CAACqB,WAAW,CAAC;GAC7B;EAED,MAAME,YAAY,GAAGA,CAAC3Z,MAAM,EAAEyZ,WAAW,EAAEG,sBAAsB,GAAG,KAAK,EAAEC,sBAAsB,GAAGvhB,SAAS,KAAK;IAChH,IAAIyf,iBAAiB,IAAI,CAAC6B,sBAAsB,EAAE;MAChD,MAAME,aAAa,GAAG7E,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAKgC,MAAM,CAAChC,KAAK,CAAC,CAAC;MACxE,IAAI8b,aAAa,KAAK,CAAC,CAAC,EAAE;QACxB,IAAID,sBAAsB,KAAKvhB,SAAS,GAAGuhB,sBAAsB,GAAG7B,gBAAgB,EAAE;UACpF,MAAM0B,QAAQ,GAAG,CAAC,GAAGzE,OAAO,CAAC;UAC7ByE,QAAQ,CAACI,aAAa,CAAC,GAAG9Z,MAAM;UAChCkY,UAAU,CAACwB,QAAQ,CAAC;UACpBtB,eAAe,CAAC0B,aAAa,CAAC;SAC/B,MAAM;UACL1B,eAAe,CAAC0B,aAAa,CAAC;;QAEhC;;;IAIJ,MAAMC,cAAc,GAAGtR,QAAQ,EAAE;IACjC,MAAMuR,UAAU,GAAGD,cAAc,IAAIA,cAAc,CAACjjB,IAAI,KAAK,SAAS,GAAG,WAAW,GAAG,SAAS;IAEhG,MAAMmjB,qBAAqB,GAAG;MAC5B,GAAGja,MAAM;MACT,IAAI,CAACA,MAAM,CAAClJ,IAAI,IAAI;QAACA,IAAI,EAAEkjB;OAAW;KACvC;IAED,IAAIP,WAAW,KAAKnhB,SAAS,EAAE;MAC7BkhB,mBAAmB,CAACS,qBAAqB,EAAER,WAAW,CAAC;KACxD,MAAM;MACLvB,UAAU,CAAC,CAAC,GAAGjD,OAAO,EAAEgF,qBAAqB,CAAC,CAAC;MAC/C7B,eAAe,CAACnD,OAAO,CAAC1Z,MAAM,CAAC;;GAElC;EAED,MAAM2e,aAAa,GAAIC,aAAa,IAAK;IACvC,IAAIlF,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAI1B,IAAI4c,YAAY,KAAK,CAAC,IAAIgC,aAAa,CAACrjB,IAAI,KAAK,WAAW,EAAE;MAC5DqjB,aAAa,CAACrjB,IAAI,GAAG,SAAS;;IAGhC,MAAMsjB,YAAY,GAAG,CAAC,GAAGnF,OAAO,CAAC;IACjCmF,YAAY,CAACjC,YAAY,CAAC,GAAGgC,aAAa;IAC1CjC,UAAU,CAACkC,YAAY,CAAC;GACzB;EAED,MAAMC,gBAAgB,GAAIF,aAAa,IAAK;IAC1C,IAAIlF,OAAO,CAAC1Z,MAAM,KAAK,CAAC,EAAE;IAI1B,IAAI4c,YAAY,KAAK,CAAC,IAAIgC,aAAa,CAACrjB,IAAI,KAAK,WAAW,EAAE;MAC5DqjB,aAAa,CAACrjB,IAAI,GAAG,SAAS;;IAGhC,MAAMmJ,KAAK,GAAGgV,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAKmc,aAAa,CAACnc,KAAK,CAAC,CAAC;IACvE,IAAIiC,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,MAAMma,YAAY,GAAG,CAAC,GAAGnF,OAAO,CAAC;MACjCmF,YAAY,CAACna,KAAK,CAAC,GAAGka,aAAa;MACnCjC,UAAU,CAACkC,YAAY,CAAC;;GAE3B;EAED,MAAME,mBAAmB,GAAGC,WAAW,IAAI;IACzC,IAAIA,WAAW,IAAI,CAAC,IAAIA,WAAW,GAAGtF,OAAO,CAAC1Z,MAAM,EAAE;MACpD,MAAMme,QAAQ,GAAG,CAAC,GAAGzE,OAAO,CAAC;MAC7ByE,QAAQ,CAACvX,MAAM,CAACoY,WAAW,EAAE,CAAC,CAAC;MAC/BrC,UAAU,CAACwB,QAAQ,CAAC;MAGpB,IAAIa,WAAW,GAAGpC,YAAY,EAAE;QAC9BC,eAAe,CAACD,YAAY,GAAG,CAAC,CAAC;;MAGnC,IAAIA,YAAY,IAAIlD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,EAAE;QACtC6c,eAAe,CAACnD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,CAAC;;;GAGxC;EAED,MAAMif,kBAAkB,GAAGC,UAAU,IAAI;IACvC,MAAMF,WAAW,GAAGtF,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAKyc,UAAU,CAAC;IACnEH,mBAAmB,CAACC,WAAW,CAAC;GACjC;EAED,MAAMG,aAAa,GAAGza,KAAK,IAAI;IAC7B,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGgV,OAAO,CAAC1Z,MAAM,EAAE;MACxC,MAAMof,MAAM,GAAG,CAAC,GAAG1F,OAAO,CAAC;MAC3B0F,MAAM,CAACxY,MAAM,CAAClC,KAAK,EAAE,CAAC,CAAC;MACvBiY,UAAU,CAACyC,MAAM,CAAC;MAClB,IAAIxC,YAAY,IAAIlD,OAAO,CAAC1Z,MAAM,EAAE;QAClC6c,eAAe,CAACnD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,GAAG0Z,OAAO,CAAC1Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;;GAGjE;EAED,MAAMqf,YAAY,GAAGhjB,IAAI,IAAI;IAC3B,MAAMqI,KAAK,GAAGgV,OAAO,CAACqD,SAAS,CAAChF,CAAC,IAAIA,CAAC,CAACtV,KAAK,CAAC,KAAKpG,IAAI,CAAC;IACvD,IAAIqI,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBya,aAAa,CAACza,KAAK,CAAC;;GAEvB;EAED,MAAM4a,WAAW,GAAGA,MAAM;IACxB,IAAI5F,OAAO,CAAC1Z,MAAM,GAAG,CAAC,EAAE;MACtBmf,aAAa,CAAC,CAAC,CAAC;;GAEnB;EAED,MAAMI,UAAU,GAAGA,MAAM;IACvB,IAAI7F,OAAO,CAAC1Z,MAAM,GAAG,CAAC,EAAE;MACtBmf,aAAa,CAACzF,OAAO,CAAC1Z,MAAM,GAAG,CAAC,CAAC;;GAEpC;EAED,MAAMwf,SAAS,GAAGA,MAAM;IACtB7C,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,CAAC,CAAC;GACnB;EAED,MAAMa,gBAAgB,GAAGhZ,KAAK,IAAI;IAChC,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAGgV,OAAO,CAAC1Z,MAAM,GAAG,CAAC,EAAE;MAC5C,MAAMof,MAAM,GAAG,CAAC,GAAG1F,OAAO,CAAC;MAC3B0F,MAAM,CAACxY,MAAM,CAAClC,KAAK,GAAG,CAAC,CAAC;MACxBiY,UAAU,CAACyC,MAAM,CAAC;MAClB,IAAIxC,YAAY,IAAIlD,OAAO,CAAC1Z,MAAM,EAAE;QAClC6c,eAAe,CAACnD,OAAO,CAAC1Z,MAAM,GAAG,CAAC,GAAG0Z,OAAO,CAAC1Z,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;;;GAGjE;EAED,MAAMyf,UAAU,GAAGA,MAAM;IACvB,MAAMC,WAAW,GAAG,EAAE;IACtBhG,OAAO,CAACvG,OAAO,CAAC,CAACnW,GAAG,EAAE0H,KAAK,KAAK;MAC9B,MAAMib,KAAK,GAAG3iB,GAAG,CAACyF,KAAK,CAAC;MACxBid,WAAW,CAACC,KAAK,CAAC,GAAG3iB,GAAG;KACzB,CAAC;IACF,OAAO0iB,WAAW;GACnB;EAED,OAAO;IACLhG,OAAO;IACPkD,YAAY;IACZrb,IAAI;IACJ7E,OAAO;IACPwQ,QAAQ;IACRoQ,SAAS;IACTC,IAAI;IACJI,MAAM;IACNC,SAAS;IACT7C,MAAM;IACNiD,OAAO;IACPI,YAAY;IACZH,mBAAmB;IACnBkB,aAAa;IACbE,YAAY;IACZC,WAAW;IACXC,UAAU;IACVC,SAAS;IACT9B,gBAAgB;IAChBqB,mBAAmB;IACnBE,kBAAkB;IAClBN,aAAa;IACbd,eAAe;IACfiB,gBAAgB;IAChBf,eAAe;IACf0B;GACD;AACH,CAAC;;AC5SD,MAAMG,eAAe,GAAGA,CAACpkB,IAAI,EAAEa,IAAI,EAAEW,GAAG,KAAM6iB,KAAK,IAAK;EAMpD,MAAM;IAAEtM,SAAS;IAAEuM,SAAS;IAAGpb,KAAK,GAAG;GAAG,GAAGmb,KAAK,CAACE,WAAW,IAAI;IAAExM,SAAS,EAAExW;GAAW;EAC1F,MAAM+F,MAAM,GAAG;IAAE,GAAGgd,SAAS;IAAE,IAAIvM,SAAS,IAAIA,SAAS,EAAE,IAAI,EAAE,CAAC;IAAE7O,KAAK;IAAEsb,YAAY,EAAEtb,KAAK,GAAG;GAAG;EAQpG,IAAI,OAAOlJ,IAAI,KAAK,QAAQ,EAAE;IAM1B,MAAMykB,KAAK,GAAG,2BAA2B;IACzC,MAAMC,OAAO,GAAG1kB,IAAI,CAACoV,KAAK,CAACqP,KAAK,CAAC;IACjC,IAAIC,OAAO,EAAE;MACTle,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5F,IAAI,EAAE,oBAAoB,CAAC;MAClD,IAAI;QACA,MAAMc,MAAM,GAAG,IAAIgjB,QAAQ,CAAC,MAAM,EAAG,eAAcD,OAAO,CAAC,CAAC,CAAE,EAAC,CAAC,CAAC;UAC7D,GAAGpd,MAAM;UACT+c;SACH,CAAC;QAQF,OAAO1iB,MAAM;OAChB,CAAC,OAAO6G,KAAK,EAAE;QACZhC,OAAO,CAACC,GAAG,CAAC+B,KAAK,EAAE,yBAAyB,CAAC;QAC7C,OAAOxI,IAAI;;;IAOnB,IAAIA,IAAI,KAAKuB,SAAS,IAAIvB,IAAI,CAACiG,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC3CO,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAEzG,IAAI,EAAEskB,SAAS,EAAErF,CAAC,CAAC3a,GAAG,CAACgD,MAAM,EAAEtH,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACvF,OAAOme,CAAC,CAAC3a,GAAG,CAACgD,MAAM,EAAEtH,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC;;IAG3C,IAAId,IAAI,KAAKuB,SAAS,IAAIvB,IAAI,CAACiG,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC3CO,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzG,IAAI,CAACiL,KAAK,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC;MACpD,IAAI;QAIA,MAAMtJ,MAAM,GAAG,IAAIgjB,QAAQ,CAAC,MAAM,EAAG,eAAc3kB,IAAI,CAACiL,KAAK,CAAC,CAAC,CAAE,EAAC,CAAC,CAAC;UAChE,GAAG3D,MAAM;UACT+c;SACH,CAAC;QAEF,IAAI,OAAO1iB,MAAM,KAAK,UAAU,EAAE;UAC9B6E,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9E,MAAM,EAAE,8BAA8B,CAAC;UAC9D,OAAOA,MAAM,CAAC2F,MAAM,CAAC;;QAEzB,IAAI3F,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEijB,IAAI,EAAE;UACdpe,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9E,MAAM,EAAE,mCAAmC,CAAC;UACnE,OAAOA,MAAM,CAACijB,IAAI,CAAC,UAAUC,QAAQ,EAAE;YACnCre,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoe,QAAQ,EAAE,8CAA8C,CAAC;YAChF,OAAOA,QAAQ;WAClB,CAAC;;QAENre,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9E,MAAM,EAAE,2CAA2C,CAAC;QAC3E,OAAOA,MAAM;OAChB,CAAC,OAAO6G,KAAK,EAAE;QACZhC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5F,IAAI,EAAE,QAAQ,EAAE2H,KAAK,EAAE,sCAAsC,CAAC;;;IAI7F,IAAIsc,aAAa,GAAG9kB,IAAI;IAIxB,IAAIA,IAAI,KAAKuB,SAAS,IAAIvB,IAAI,CAACiG,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC3C6e,aAAa,GAAGA,aAAa,CAAC/b,OAAO,CAAC,eAAe,EAAE,CAACkW,CAAC,EAAEpe,IAAI,KAAK;QAEhE,IAAI;UACA2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEwY,CAAC,EAAEpe,IAAI,EAAE,2BAA2B,EAAEikB,aAAa,CAAC;UAC3E,MAAMnjB,MAAM,GAAGojB,IAAI,CAAE,SAAQ9F,CAAE,EAAC,CAAC;UACjC,IAAI,OAAOtd,MAAM,KAAK,UAAU,EAAE;YAC9B,OAAOA,MAAM,CAAC2F,MAAM,CAAC;;UAEzB,OAAO3F,MAAM;SAChB,CAAC,OAAO6G,KAAK,EAAE;UACZhC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+B,KAAK,EAAE,yBAAyB,CAAC;UACxD,OAAOyW,CAAC;;OAEf,CAAC;;IAGN6F,aAAa,GAAGA,aAAa,CAAC/b,OAAO,CAAC,cAAc,EAAE,CAACic,CAAC,EAAEnkB,IAAI,KAAK;MAE/D,MAAMc,MAAM,GAAGsd,CAAC,CAAC3a,GAAG,CAACgD,MAAM,EAAEzG,IAAI,CAAC,IAAI,EAAE;MAIxC,OAAOc,MAAM,KAAKJ,SAAS,IAAII,MAAM;KACxC,CAAC;IAEF,OAAOmjB,aAAa;;EAIxB,OAAO9kB,IAAI;AACf,CAAC;;AC1HD,MAAMilB,oBAAoB,GAAGA,CAACjlB,IAAI,EAAEa,IAAI,EAAEW,GAAG,KAAM6iB,KAAK,IAAK;EACzD,MAAM/c,MAAM,GAAG;IAAE,GAAG9F,GAAG,CAAC+iB;GAAa;EACrC,IAAIvkB,IAAI,KAAKuB,SAAS,IAAIvB,IAAI,KAAK,IAAI,EAAE,OAAOA,IAAI;EAEpD,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAE1B,IAAIA,IAAI,KAAKuB,SAAS,IAAIvB,IAAI,CAACiG,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC3C,IAAI;QAEA,MAAMtE,MAAM,GAAGojB,IAAI,CAAE,kBAAiB/kB,IAAI,CAACiL,KAAK,CAAC,CAAC,CAAE,EAAC,CAAC;QACtD,IAAI,OAAOtJ,MAAM,KAAK,UAAU,EAAE;UAC9B,OAAOA,MAAM,CAAC2F,MAAM,CAAC;;QAEzB,OAAO3F,MAAM;OAChB,CAAC,OAAO6G,KAAK,EAAE;QACZhC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE+B,KAAK,EAAE,sCAAsC,CAAC;;;IAI7E,IAAIxI,IAAI,KAAK,EAAE,EAAE;MACb,MAAM2B,MAAM,GAAGsd,CAAC,CAAC3a,GAAG,CAACgD,MAAM,EAAEtH,IAAI,CAACc,SAAS,CAAC,CAAC,CAAC,CAAC,IAAId,IAAI;MAEvD,OAAO2B,MAAM;;;EAIrB,OAAO3B,IAAI;AACf,CAAC;;AC7BD,MAAMklB,aAAa,GAAGA,CAACC,aAAa,EAAEC,SAAS,EAAEC,eAAe,KAAK;EACjE,KAAK,IAAItjB,GAAG,IAAIojB,aAAa,EAAE;IAC3B,IAAIjlB,KAAK,GAAGilB,aAAa,CAACpjB,GAAG,CAAC;IAE9B,IAAI,CAAA7B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEkQ,WAAW,MAAKhN,MAAM,EAAE;MAC/B,IAAIiiB,eAAe,IAAI,IAAI,IAAIA,eAAe,IAAI,EAAE,EAAE;QAClDD,SAAS,CAACrjB,GAAG,CAAC,GAAG7B,KAAK;OACzB,MAAM;QACH,IAAI6B,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAI,EAAE,EAAE;UAC1BqjB,SAAS,CAACC,eAAe,CAAC,GAAGnlB,KAAK;SACrC,MAAM;UACHklB,SAAS,CAACC,eAAe,GAAG,GAAG,GAAGtjB,GAAG,CAAC,GAAG7B,KAAK;;;KAGzD,MAAM;MACH,IAAImlB,eAAe,IAAI,IAAI,IAAIA,eAAe,IAAI,EAAE,EAAE;QAClDH,aAAa,CAAChlB,KAAK,EAAEklB,SAAS,EAAErjB,GAAG,CAAC;OACvC,MAAM;QACHmjB,aAAa,CAAChlB,KAAK,EAAEklB,SAAS,EAAEC,eAAe,GAAG,GAAG,GAAGtjB,GAAG,CAAC;;;;AAI5E,CAAC;AAED,MAAMujB,aAAa,GAAIC,SAAS,IAAK;EACjC,MAAMH,SAAS,GAAG,EAAE;EAEpBF,aAAa,CAACK,SAAS,EAAEH,SAAS,EAAE,EAAE,CAAC;EAEvC,OAAOA,SAAS;AACpB,CAAC;;AC3BD,MAAMI,WAAW,GAAGA,CAACjf,IAAI,EAAEkf,WAAW,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,KAAK;EACjE,IAAInf,IAAI,KAAKhF,SAAS,EAAE,OAAO,EAAE;EAEjC,MAAMokB,YAAY,GAAG;IACjBrhB,GAAGA,CAAC5D,MAAM,EAAE0D,IAAI,EAAEwhB,QAAQ,EAAE;MACxB,IAAI,OAAOllB,MAAM,CAAC0D,IAAI,CAAC,KAAK,QAAQ,IAAI1D,MAAM,CAAC0D,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3DoC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE/F,MAAM,CAAC0D,IAAI,CAAC,EAAE,uBAAuB,CAAC;QAC7D,OAAO,IAAIyhB,KAAK,CAACnlB,MAAM,CAAC0D,IAAI,CAAC,EAAEuhB,YAAY,CAAC;OAC/C,MAAM;QACH,OAAOV,oBAAoB,CACvBvkB,MAAM,CAAC0D,IAAI,CAAC,EACZA,IAAI,EACJ1D,MACJ,CAAC,CAAC;UACE,GAAGglB;SACN,CAAC;;;GAGb;EAED,MAAMI,WAAW,GAAG,IAAID,KAAK,CACzB;IACI,GAAGP,aAAa,CAAC;MACb,GAAG/e,IAAI,CAACwf,MAAM,CAACrF;KAClB,CAAC;IACF6D,WAAW,EAAE;MAAE,GAAGkB,WAAW;MAAE,GAAGlf;;GACrC,EACDof,YACJ,CAAC;EACD,OAAOG,WAAW;AACtB,CAAC;;AC9BD,MAAME,UAAU,GAAGA,CAACzf,IAAI,EAAEkf,WAAW,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,KAAK;EAChE,MAAMO,UAAU,GAAGT,WAAW,CAACjf,IAAI,EAAEkf,WAAW,EAAEC,cAAc,CAAC;EAEjE,IAAIQ,SAAS,GAAG,EAAE;EAClB,MAAMC,CAAC,GAAG/iB,MAAM,CAACmB,IAAI,CAAC0hB,UAAU,CAAC,CAACrb,GAAG,CAAEwb,EAAE,IAAK;IAC1C,IAAIA,EAAE,KAAK,aAAa,EAAE;IAC1BF,SAAS,GAAGjH,CAAC,CAACjW,GAAG,CAACkd,SAAS,EAAEE,EAAE,EAAEH,UAAU,CAACG,EAAE,CAAC,CAAC;IAChD5f,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE2f,EAAE,EAAE,gBAAgB,CAAC;GAC/C,CAAC;EAEF,OAAOnH,CAAC,CAACC,SAAS,CAACgH,SAAS,CAAC;AACjC,CAAC;;ACdD,SAASG,aAAaA,CAACN,MAAM,EAAEO,aAAa,EAAE/f,IAAI,EAAE+d,SAAS,EAAE;EAC3D,IAAIiC,aAAa,GAAGrL,OAAO,CAACsL,OAAO,CAACjgB,IAAI,CAAC;EAEzC,KAAK,MAAMkgB,YAAY,IAAIV,MAAM,EAAE;IAC/B,MAAMW,MAAM,GAAGX,MAAM,CAACU,YAAY,CAAC;IACnC,MAAME,aAAa,GAAGL,aAAa,CAACG,YAAY,CAAC;IACjDF,aAAa,GAAGA,aAAa,CAAC3B,IAAI,CAAEjjB,MAAM,IAAK;MAC3C6E,OAAO,CAACC,GAAG,CAACggB,YAAY,EAAEE,aAAa,EAAE,oBAAoB,EAAEhlB,MAAM,CAAC;MACtE,OAAOglB,aAAa,CAACD,MAAM,CAAC,CAACpC,SAAS,CAAC,CAAC3iB,MAAM,CAAC;KAClD,CAAC;;EAGN,OAAO4kB,aAAa;AACxB;;ACbA,MAAMK,yBAAyB,GAAG;EAC9BC,KAAK,EAAE,OAAOtgB,IAAI,EAAErG,KAAK,KAAK;IAC1B,OAAQA,KAAK,KAAK,EAAE,IAAI,CAACqG,IAAI,CAACrG,KAAK,CAAC+F,QAAQ,CAAC/F,KAAK,CAAC,IAAK,KAAK;GAChE;EACD4mB,EAAE,EAAE,OAAOvgB,IAAI,EAAErG,KAAK,KAAK;IACvB,OAAO,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEwK,QAAQ,EAAE,MAAKnE,IAAI,CAACrG,KAAK;GAC1C;EACD6mB,gBAAgB,EAAE,OAAOxgB,IAAI,EAAErG,KAAK,KAAK;IACrC,OAAQA,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACrG,KAAK,CAAC+F,QAAQ,CAAC/F,KAAK,CAAC,IAAK,KAAK;;AAEpE,CAAC;;ACyDM,MAAM8mB,sBAAsB,GAAIrjB,KAAK,IAAK;EAAA,IAAAsjB,aAAA;EAG7C,MAAM,CAAChgB,KAAK,EAAEigB,QAAQ,CAAC,GAAG1I,QAAQ,CAAC7a,KAAK,CAACmB,OAAO,CAAC5D,OAAO,IAAIyC,KAAK,CAACmB,OAAO,CAAC5D,OAAO,CAACyC,KAAK,CAAC9C,IAAI,CAAC,CAAC;EAG9F2F,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB9C,KAAK,CAAC9C,IAAI,EACV,4CAA4C,EAC5CoG,KAAK,EACLtD,KAAK,CAAC+B,MAAM,EACZ/B,KAAK,CAAC9C,IACV,CAAC;EAGD,MAAM2H,KAAK,GAAG7E,KAAK,CAAC+B,MAAM,IAAI/B,KAAK,CAAC+B,MAAM,CAACxE,OAAO,MAAA+lB,aAAA,GAAItjB,KAAK,CAAC+B,MAAM,cAAAuhB,aAAA,uBAAZA,aAAA,CAAc/lB,OAAO,CAACyC,KAAK,CAAC9C,IAAI,CAAC;EAEvF,MAAM,CAAC8I,MAAM,EAAEiD,SAAS,CAAC,GAAG4R,QAAQ,CAAC,EAAE,CAAC;EAIxC,MAAMlc,QAAQ,GAAIpC,KAAK,IAAK;IAGxBsG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAEvG,KAAK,CAAC;IAK3CyD,KAAK,CAACwjB,eAAe,CAACjnB,KAAK,EAAEyD,KAAK,CAAC9C,IAAI,CAAC;IACxCqmB,QAAQ,CAAC;MAAE,GAAGjgB,KAAK;MAAE/G,KAAK,EAAEA;KAAO,CAAC;GAEvC;EAUD,OAAOyD,KAAK,CAAC+E,MAAM,CAAC;IAAEpG,QAAQ;IAAEpC,KAAK,EAAE+G,KAAK,CAAC/G,KAAK;IAAE+G,KAAK;IAAEuB,KAAK;IAAEU,KAAK,EAAEvF,KAAK,CAACuF;GAAO,CAAC;AAC3F,CAAC;AAED,AAEA,MAAMke,GAAG,GAAG7jB,cAAK,CAAC8jB,IAAI,CACjB1jB,KAAK,iBAAKJ,cAAA,CAAA+jB,aAAA,CAACN,sBAAsB,EAAKrjB,KAAQ,CAAC,EAChD,CAAC4jB,SAAS,EAAEC,SAAS,KAAK;EAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,iBAAA,EAAAC,kBAAA;EAEtB,MAAMC,IAAI,GAAI,EAAAJ,iBAAA,GAAAF,SAAS,CAAC7hB,MAAM,cAAA+hB,iBAAA,uBAAhBA,iBAAA,CAAkBvmB,OAAO,OAAAwmB,kBAAA,GAAIH,SAAS,CAAC7hB,MAAM,cAAAgiB,kBAAA,uBAAhBA,kBAAA,CAAkBxmB,OAAO,CAACqmB,SAAS,CAAC1mB,IAAI,CAAC,KAAK,EAAE;EAC3F,MAAMinB,IAAI,GAAG,EAAAH,iBAAA,GAAAH,SAAS,CAAC9hB,MAAM,cAAAiiB,iBAAA,uBAAhBA,iBAAA,CAAkBzmB,OAAO,CAACsmB,SAAS,CAAC3mB,IAAI,CAAC,KAAI,EAAE;EAE5D,MAAMknB,MAAM,GAAG9I,CAAC,CAACI,OAAO,CAACwI,IAAI,EAAEC,IAAI,CAAC;EACpC,MAAME,SAAS,IAAAJ,kBAAA,GAAGJ,SAAS,CAAC9hB,MAAM,cAAAkiB,kBAAA,uBAAhBA,kBAAA,CAAkB1mB,OAAO,CAACqmB,SAAS,CAAC1mB,IAAI,CAAC;EAE3D2F,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB8gB,SAAS,EACTC,SAAS,EACTD,SAAS,CAAC1mB,IAAI,GAAG,6CAA6C,EAC9DknB,MAAM,EACN,OAAO,EACPC,SAAS,EACTT,SAAS,CAAC1mB,IACd,CAAC;EAID,IAAIonB,IAAI,CAACC,SAAS,CAACV,SAAS,CAAC,KAAKS,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,EAAE;IACzD,OAAO,IAAI;;EAEf,OAAO,KAAK;AAChB,CACJ,CAAC;AAED,AAKA,MAAMY,UAAU,GAAGA,CACfnoB,IAAI,EACJmnB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3iB,MAAM,EACN4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfzV,UAAU,EACVwR,WAAW,EACXvJ,QAAQ,KACP;EACDxU,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEf,MAAM,EAAE,YAAY,CAAC;EAE5C,MAAM6E,CAAC,GAAGvK,IAAI,CACToB,MAAM,CAAEtB,OAAO,IAAKA,OAAO,CAACkF,OAAO,CAAC,CACpC4F,GAAG,CAAC,CAACrE,IAAI,EAAE2C,KAAK,KAAK;IAGlB,MAAM;MACFpC,QAAQ;MACRsV,YAAY;MACZhO,KAAK;MACL1I,MAAM;MACNZ,OAAO;MACPsT,OAAO;MACPiF,QAAQ;MACRtF,SAAS;MACTiD,QAAQ;MACRtO,aAAa;MACbmR,QAAQ;MACR1C;KACH,GAAGoJ,WAAW;IAGf,MAAM1jB,IAAI,GAAGkS,UAAU,IAAK,GAAEA,UAAW,IAAGxM,IAAI,CAAC1F,IAAK,EAAC,IAAI0F,IAAI,CAAC1F,IAAI;IAEpE,IAAIc,MAAM,GAAG,IAAI;IACjB,IAAI8mB,KAAK,GAAG,EAAE;IACd,IAAIliB,IAAI,CAACmiB,KAAK,EAAE;MACZD,KAAK,GAAGN,UAAU,CACd5hB,IAAI,CAACmiB,KAAK,EACVvB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3iB,MAAM,EACN4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACf,CAAAjiB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS,EAChCgjB,WAAW,AAEf,CAAC;;IAGL,MAAMoE,UAAU,GAAG;MACf9lB,SAAS,EAAE0D,IAAI,CAAC1D,SAAS,IAAI0D,IAAI,CAAC1D,SAAS,CAAC3C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC1D,SAAS,IAAItB,SAAS;MACvFuB,SAAS,EAAEyD,IAAI,CAACzD,SAAS,IAAIyD,IAAI,CAACzD,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACzD,SAAS,IAAIvB,SAAS;MACvFoB,GAAG,EAAE4D,IAAI,CAAC5D,GAAG,IAAI4D,IAAI,CAAC5D,GAAG,CAACzC,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC5D,GAAG,IAAIpB,SAAS;MAC/DqB,GAAG,EAAE2D,IAAI,CAAC3D,GAAG,IAAI2D,IAAI,CAAC3D,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC3D,GAAG,IAAIrB,SAAS;MAC/DwB,OAAO,EAAEwD,IAAI,CAACxD,OAAO,IAAIwD,IAAI,CAACxD,OAAO,CAAC7C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACxD,OAAO,IAAIxB,SAAS;MAC/EyB,QAAQ,EAAEuD,IAAI,CAACvD,QAAQ,IAAIuD,IAAI,CAACvD,QAAQ,CAAC9C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACvD,QAAQ,IAAIzB;KAC7E;IAODI,MAAM,gBACF4B,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;MACP1G,GAAG,EAAEwE,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;MACzDA,IAAI,EAAE0F,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;MAC1DiE,OAAO,EAAEA,OAAQ;MACjByB,IAAI,EAAEA,IAAK;MAGXQ,KAAK,EAAER,IAAI,CAACqiB,IAAI,IAAID,UAAW;MAC/BjgB,MAAM,EAAEA,CAAC;QAAEzB;OAAO,KAAK;QA2BnB,IAAIV,IAAI,CAACjG,OAAO,EAAE;UAEd,MAAM;YAAEqJ,MAAM;YAAEmB,MAAM;YAAE0C;WAAQ,GAAGd,aAAa,CAAC;YAC7C5H,OAAO;YACPjE,IAAI,EAAEA;WACT,CAAC;UAQF4nB,KAAK,gBACDllB,cAAA,CAAA+jB,aAAA,CAAAuB,QAAA,qBAWItlB,cAAA,CAAA+jB,aAAA,aACK3d,MAAM,CAACiB,GAAG,CAAC,CAACwb,EAAE,EAAEld,KAAK,kBAClB3F,cAAA,CAAA+jB,aAAA;YAAIvlB,GAAG,EAAEqkB,EAAE,CAACrF;aACPxa,IAAI,CAACmiB,KAAK,CAAC9d,GAAG,CAAC,CAAC9K,OAAO,EAAEgpB,IAAI,kBAC1BvlB,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;YACP5H,IAAI,EAAG,GAAEA,IAAK,IAAGqI,KAAM,IAAGpJ,OAAO,CAACe,IAAK,EAAE;YACzCiE,OAAO,EAAEA,OAAQ;YACjB4D,MAAM,EAAEA,CAAC;cAAEzB;aAAO,KAAK;cACnB,MAAM8hB,SAAS,GAAGR,UAAU,CAACzoB,OAAO,CAACC,IAAI,EAAE;gBACvCkH,KAAK;gBACLV,IAAI,EAAEzG,OAAO;gBACbe,IAAI,EAAG,GAAEA,IAAK,IAAGqI,KAAM,IAAGpJ,OAAO,CAACe,IAAK,EAAC;gBACxCioB,IAAI;gBACJN,eAAe;gBACfC,KAAK;gBACL/b;eACH,CAAC;cACF,OAAOqc,SAAS;;WAEvB,CACJ,CAAC,eACFxlB,cAAA,CAAA+jB,aAAA;YAAQvnB,IAAI,EAAC,QAAQ;YAACipB,OAAO,EAAEA,MAAMxb,MAAM,CAACtE,KAAK;aAAG,GAAS,CAC7D,CACP,CAED,CAAC,eAOL3F,cAAA,CAAA+jB,aAAA;YACIvnB,IAAI,EAAC,QAAQ;YAEbipB,OAAO,EAAEA,MAAMle,MAAM,CAAC,EAAE;aAE3B,GAEO,CACV,CAAC;;QAIX,MAAMie,SAAS,GAAGR,UAAU,CAAChiB,IAAI,CAACxG,IAAI,EAAE;UACpCkH,KAAK;UACLV,IAAI;UACJ1F,IAAI;UACJqI,KAAK;UACLsf,eAAe;UACfC,KAAK;UACL/b,aAAa;UACblE,KAAK,EAAE9C,MAAM;UACb6e;SACH,CAAC;QACF,OAAOwE,SAAS;;KAGvB,CACJ;IAED,OAAOpnB,MAAM;GAChB,CAAC;EAEN,OAAO4I,CAAC;AACZ,CAAC;AAED,AAOA,MAAM0e,UAAU,GAAGA,CACfjpB,IAAI,EACJmnB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3iB,MAAM,EACN4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfzV,UAAU,EACVjO,OAAO,EACPkW,QAAQ,KACP;EACDxU,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEf,MAAM,EAAE,YAAY,CAAC;EAE5C,IAAI1F,IAAI,KAAKuB,SAAS,EAAE,OAAO,IAAI;EACnC,MAAMgJ,CAAC,GAAGvK,IAAI,CACToB,MAAM,CAAEtB,OAAO,IAAKA,OAAO,CAACkF,OAAO,CAAC,CACpC4F,GAAG,CAAC,CAACrE,IAAI,EAAE2C,KAAK,KAAK;IAIlB,MAAMrI,IAAI,GAAGkS,UAAU,IAAK,GAAEA,UAAW,IAAGxM,IAAI,CAAC1F,IAAK,EAAC,IAAI0F,IAAI,CAAC1F,IAAI;IAEpE,IAAIc,MAAM,GAAG,IAAI;IACjB,IAAI8mB,KAAK,GAAG,EAAE;IACd,IAAIliB,IAAI,CAACmiB,KAAK,EAAE;MACZD,KAAK,GAAGQ,UAAU,CACd1iB,IAAI,CAACmiB,KAAK,EACVvB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACR3iB,MAAM,EACN4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACf,CAAAjiB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS,EAChCuD,OAAO,AAEX,CAAC;;IAQLnD,MAAM,gBACF4B,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;MACP1G,GAAG,EAAElB,IAAK;MACVA,IAAI,EAAEA,IAAK;MACXiE,OAAO,EAAEA,OAAQ;MACjByB,IAAI,EAAEA,IAAK;MAGXQ,KAAK,EAAER,IAAI,CAACqiB,IAAI,IAAI,EAAG;MACvBlgB,MAAM,EAAEA,CAAC;QAAEzB;OAAO,KAAK;QA6EnB,MAAM8hB,SAAS,GAAGR,UAAU,CAAChiB,IAAI,CAACxG,IAAI,EAAE;UACpCkH,KAAK;UACLV,IAAI;UACJ1F,IAAI;UACJqI,KAAK;UACLsf;SACH,CAAC;QAEF,OAAOO,SAAS;;KAGvB,CA8CJ;IAED,OAAOpnB,MAAM;GAChB,CAAC;EAEN,OAAO4I,CAAC;AACZ,CAAC;AACD,MAAM2e,YAAY,GAAG3lB,cAAK,CAAC8jB,IAAI,CAAC1jB,KAAK,IAAIslB,UAAU,CAACtlB,KAAK,CAAC,EACtD,CAAC4jB,SAAS,EAAEC,SAAS,KAAK;EACtB,IAAI,CAACtY,SAAS,CAACsY,SAAS,EAAED,SAAS,CAAC,EAAE;IAClC,OAAO,IAAI;;EAEf,OAAO,KAAK;AAChB,CACJ,CAAC;AACD2B,YAAY,CAAC1lB,WAAW,GAAG,YAAY;AACvC0lB,YAAY,CAACC,eAAe,GAAG,IAAI;AASnC,MAAMC,cAAc,GAAGA,CAACzhB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,EAAE/oB,OAAO,KAAK;EAG1D,MAAMqB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAErD,MAAMkI,QAAQ,GAAGhpB,OAAO,KAAKiB,SAAS,IAAIgF,IAAI,CAACxE,GAAG,CAAC,IAAK,GAAEsnB,MAAO,MAAK9iB,IAAI,CAACxE,GAAG,CAAE,EAAC;IAGjF,MAAMwnB,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC8nB,QAAQ,GAAG;QACR,GAAG/iB,IAAI;QACP1F,IAAI,EAAEyoB,QAAQ;QACdC,KAAK;QACL,IAAIF,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,cAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,EAAEwE,IAAI,CAACjG,OAAO,CAAC;KACrG;GACJ,EAAE,IAAIka,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,MAAM6nB,UAAU,GAAGA,CAAC7hB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,KAAK;EAG7C,MAAM1nB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAGrD,MAAMmI,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAG;QACT,GAAGwE,IAAI;QACPgjB,KAAK;QACLrpB,KAAK,EAAE,EAAE;QACT,IAAImpB,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,cAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,CAAC;KACvF;GACJ,EAAE,IAAIyY,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,AAmBA,MAAM8nB,wBAAwB,GAAGA,CAACf,KAAK,EAAE3mB,GAAG,KAAK;EAG7C,MAAM2nB,YAAY,GAAG,IAAIlP,GAAG,EAAE;EAE9BpX,MAAM,CAACmB,IAAI,CAACmkB,KAAK,CAAC,CAAC/Q,OAAO,CAAE5V,GAAG,IAAK;IAChC,IAAI2mB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE;MACzB,MAAMC,eAAe,GAAGC,oBAAoB,CAACnB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE,OAAO,CAAC;MAM9E,MAAMplB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAACqlB,eAAe,CAAC;MACzC,KAAK,IAAI1gB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG3E,IAAI,CAACC,MAAM,EAAE0E,KAAK,EAAE,EAAE;QAC9C,MAAM4gB,YAAY,GAAGF,eAAe,CAACrlB,IAAI,CAAC2E,KAAK,CAAC,CAAC;QACjDwgB,YAAY,CAAC1gB,GAAG,CAAC8gB,YAAY,CAACjpB,IAAI,EAAE,CAChC,IAAK6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAI6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAK,EAAE,CAAC,EACvF;UAAE0oB,KAAK,EAAEb,KAAK,CAAC3mB,GAAG,CAAC,CAACwnB,KAAK;UAAE,GAAGO;SAAc,CAC/C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAYD,MAAMG,oBAAoB,GAAGA,CAACliB,KAAK,EAAE5F,GAAG,EAAE7B,KAAK,KAAK;EAChD,MAAMwpB,YAAY,GAAG,EAAE;EACvB,IAAI,CAACrpB,KAAK,CAACC,OAAO,CAACqH,KAAK,CAAC,EAAE;EAC3B,MAAMoiB,UAAU,GAAGpiB,KAAK,CAACqiB,MAAM,EAAE;EACjC,OAAOD,UAAU,CAACjoB,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,KAAK;IACpC,OAAO;MACH,GAAG/E,GAAG;MACN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAI7B,KAAK,IAAIqG,IAAI,CAACrG,KAAK,CAAC,IAAMA,KAAK,KAAKqB,SAAS,IAAIgF,IAAK,IAAI;KAC3E;GACJ,EAAEmjB,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,WAAW,GAAG,CAAC;AACnB,MAAMC,aAAa,GAAG3mB,cAAK,CAAC4mB,UAAU,CAAC,CAAC;EAAEzB,KAAK;EAC3C0B,kBAAkB,EAAlBA,mBAAkB,GAAGxD,yBAAyB;EAC9C0B,oBAAoB;EACpBC,UAAU;EACVC,eAAe;EACf3V,aAAa,EAAbA,cAAa,GAAG;AAAG,CAAC,EAAE9K,GAAG,KAAK;EAE9BvB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoM,cAAa,EAAE,eAAe,CAAC;EAEtD,MAAM;IACF/L,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACLrK,SAAS,EAAE;MAAE2B;KAAQ;IACrBZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRG;GACH,GAAGoC,OAAO,CAAC;IACR7N,IAAI,EAAE,UAAU;IAGhBmD,aAAa,EAAbA;GACH,CAAC;EAEF,MAAM0R,WAAW,GAAG;IAChBzd,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL1I,MAAM;IACNZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRtO,aAAa;IACbmR,QAAQ;IACR1C;GACH;EAED,MAAMkP,YAAY,GAAG9mB,cAAK,CAAC+mB,MAAM,EAAE;EAEnC,MAAMC,kBAAkB,GAAGhnB,cAAK,CAAC+mB,MAAM,EAAE;EACzC,MAAME,iBAAiB,GAAGjnB,cAAK,CAAC+mB,MAAM,EAAE;EAGxC,MAAM,CAACtqB,IAAI,EAAEyqB,OAAO,CAAC,GAAGjM,QAAQ,EAAE;EAElCjb,cAAK,CAAC+d,SAAS,CAAC,MAAM;IAClB,IAAIoH,KAAK,KAAKnnB,SAAS,EAAE;IAGzB8oB,YAAY,CAACnpB,OAAO,GAAGkoB,cAAc,CAACV,KAAK,EAAE,MAAM,CAAC;IAEpD6B,kBAAkB,CAACrpB,OAAO,GAAGuoB,wBAAwB,CAACY,YAAY,CAACnpB,OAAO,CAAC;IAC3EsF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,EAAE,0BAA0B,CAAC;IAChE7jB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE8jB,kBAAkB,EAAE,0BAA0B,EAAE,CAAC,GAAGA,kBAAkB,CAACrpB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,MAAMoM,YAAY,GAAGvC,KAAK,CAAC,OAAOlO,KAAK,EAAE;MAAEW,IAAI;MAAEd;KAAM,KAAK;MACxD,IAAIwqB,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC,EAAE;QAEtC2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,wCAAwC,EAAEvG,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE0oB,KAAK,CAAC;QAChG,MAAM,CAAC/c,CAAC,EAAEC,CAAC,CAAC,GAAG,MAAM8e,iBAAiB,CAAC7pB,IAAI,EAAEX,KAAK,CAACW,IAAI,CAAC,EAAE6nB,KAAK,CAAC;QAChE,IAAI,CAACxZ,SAAS,CAAClP,IAAI,EAAE4L,CAAC,CAAC,IAAID,CAAC,EAAE;UAC1B8e,OAAO,CAAC,CAAC,GAAG7e,CAAC,CAAC,CAAC;UAEf;;;KAIX,CAAC;IAEF6e,OAAO,CAAC/B,KAAK,CAAC;GACjB,EAAEA,KAAK,CAAC;EAgBT,MAAMiC,WAAW,GAAGA,MAAM;IACtBN,YAAY,CAACnpB,OAAO,GAAGsoB,UAAU,CAACd,KAAK,EAAE,MAAM,CAAC;IAChD+B,OAAO,CAAC/B,KAAK,CAAC;GACjB;EAOD,MAAMkC,YAAY,GAAG,YAAY;IAE7B,IAAIxnB,MAAM,CAACmB,IAAI,CAACmB,MAAM,CAAC,CAAClB,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;IAChD,MAAM7C,MAAM,GAAG,MAAMyW,OAAO,EAAE;IAC9B5R,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAE9E,MAAM,EAAE+D,MAAM,CAAC;IAC9E,IAAI/D,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,MAAMoW,SAAS,EAAE;KAC3B,MAAM;MACH,OAAO,KAAK;;GAEnB;EAEDhQ,GAAG,CAAC7G,OAAO,GAAG;IACV6W,SAAS,EAAE6S,YAAY;IACvBD,WAAW,EAAEA;GAChB;EAED,MAAME,cAAc,GAAG,OAAOhqB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAElD,MAAMmpB,aAAa,GAAGT,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC;IAChD,IAAIkqB,CAAC,GAAGppB,MAAM;IACd,MAAMqpB,cAAc,GAAG;MAAE,GAAGtlB,MAAM,CAACxE;KAAS,IAAI,EAAE;IAClD,MAAM+pB,SAAS,GAAGvlB,MAAM,CAACxE,OAAO,IAAI,EAAE;IAKtC,IAAIhB,KAAK,KAAK,EAAE,EAAE;MACd,MAAMsI,MAAK,GAAGtI,KAAK,KAAK,KAAK;MAC7B,IAAIsI,MAAK,EAAE;QACPyiB,SAAS,CAACpqB,IAAI,CAAC,GAAG;UACd2H,KAAK,EAALA,MAAK;UACL0iB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;SACjE;OACJ,MAAM;QACH,OAAOD,SAAS,CAACpqB,IAAI,CAAC;;KAI7B,MAAM;MACH,OAAOoqB,SAAS,CAACpqB,IAAI,CAAC;;IAI1B6E,MAAM,CAACxE,OAAO,GAAG;MAAE,GAAG+pB;KAAW;IAEjCzkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEf,MAAM,EAAE,aAAa,EAAEulB,SAAU,CAAC;IAgBzD,OAAO,CAAC,CAAChM,CAAC,CAACI,OAAO,CAAC2L,cAAc,EAAEC,SAAS,CAAC,EAAE,CAAC,GAAGF,CAAC,CAAC,EAAEE,SAAS,CAACpqB,IAAI,CAAC,CAAC;GAC1E;EAED,MAAMsmB,eAAe,GAAG,OAAOjnB,KAAK,EAAEW,IAAI,KAAK;IAG3CwpB,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;IAGxCsG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,CAACnpB,OAAO,EAAE,WAAW,EAAE,MAAM0pB,YAAY,EAAE,CAAC;IAG/E,MAAM,CAACO,oBAAoB,EAAExpB,MAAM,EAAE6G,KAAK,CAAC,GAAG,MAAMqiB,cAAc,CAAChqB,IAAI,EAAEX,KAAK,EAAE,CAAC,GAAGF,IAAI,CAAC,CAAC;IAC1F,MAAM,CAACorB,sBAAsB,EAAEC,SAAS,CAAC,GAAG,MAAMX,iBAAiB,CAAC7pB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,CAAC;IAGxF,IAAIwpB,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI,EAAE;MAGlE5kB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5B0kB,oBAAoB,EACpBC,sBAAsB,EACtB1lB,MACJ,CAAC;MACD+kB,OAAO,CAAC,CAAC,GAAGY,SAAS,CAAC,CAAC;;GAM9B;EAED,MAAMX,iBAAiB,GAAG,OAAO7pB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAErD,MAAM2pB,YAAY,GAAGf,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC;IAEzD2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzG,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEwpB,YAAY,CAACnpB,OAAO,EAAEoqB,YAAY,EAAEf,kBAAkB,CAACrpB,OAAO,CAAC;IAM7H,IAAI6pB,CAAC,GAAG,CAAC,GAAGppB,MAAM,CAAC;IAEnB,IAAI4pB,OAAO,GAAG,KAAK;IAEnB,IAAID,YAAY,KAAK/pB,SAAS,EAAE;MAQ5B,MAAM+pB,YAAY,CAAC1gB,GAAG,CAAC,MAAOrE,IAAI,IAAK;QACnC,MAAMilB,SAAS,GAAGtrB,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;QACzC,MAAMurB,OAAO,GAAG,CAAAllB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAExG,IAAI,MAAK,MAAMqqB,mBAAkB,CAAC7jB,IAAI,CAACxG,IAAI,CAAC,CAACwG,IAAI,EAAEilB,SAAS,CAAC,CAAC;QAEpF,IAAIvM,CAAC,CAAC3a,GAAG,CAAC;UAAEqH,CAAC,EAAEof;SAAG,EAAG,IAAGxkB,IAAI,CAACgjB,KAAM,UAAS,CAAC,KAAKkC,OAAO,EAAE;UAEvDV,CAAC,GAAG9L,CAAC,CAACjW,GAAG,CAAC;YAAE2C,CAAC,EAAEof;WAAG,EAAG,IAAGxkB,IAAI,CAACgjB,KAAM,UAAS,EAAEkC,OAAO,CAAC,CAAC9f,CAAC;UACxD4f,OAAO,GAAG,IAAI;UACd/kB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,QAAQ,EACR,MAAMwY,CAAC,CAAC3a,GAAG,CAAC;YAAEqH,CAAC,EAAEof;WAAG,EAAG,IAAGxkB,IAAI,CAACgjB,KAAM,UAAS,CAAC,EAC/C,MAAMkC,OAAO,EACbH,YAAY,EACZC,OACJ,CAAC;;OAIR,CAAC;;IAEN,OAAO,CAACA,OAAO,EAAE,CAAC,GAAGR,CAAC,CAAC,CAAC;GAC3B;EAEDvkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAEwjB,WAAW,EAAE,CAAC;EACpD,OACKjqB,IAAI,IACDmoB,UAAU,CACNnoB,IAAI,EACJmnB,eAAe,EACfkD,YAAY,EACZtS,SAAS,EACT;IAAE,GAAGrS;GAAQ,EACb4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfjnB,SAAS,EACTgjB,WAAW,AAEf,CAAC,IAEL,IAAI;AAEZ,CAAC,CAAC;AAEF2F,aAAa,CAACf,eAAe,GAAG,IAAI;AACpCe,aAAa,CAAC1mB,WAAW,GAAG,eAAe;;AC17B3C,MAAMkoB,kBAAkB,GAAGA,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;EAAEmnB,eAAe;EACrDkD,YAAY;EACZtS,SAAS;EACTrS,MAAM;EACN4iB,oBAAoB;EACpBC,UAAU;EACVC,eAAe;aACfjnB,WAAS;EACTgjB,WAAW;EACXrb,KAAK;EACLmgB,MAAM;EACNsC,SAAS,EAATA,UAAS,GAAGpqB;AAChB,CAAC,KACI;EAED,MAAMqqB,iBAAiB,GAAG;IAAC,GAAG5rB,IAAI,CAACa,IAAI,CAAC;IAAE8qB,SAAS,EAATA;GAAW;EAIrD,IAAIC,iBAAiB,KAAKrqB,WAAS,EAAE,OAAO,IAAI;EAEhD,IAAI,CAAAqqB,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAE5mB,OAAO,MAAK,KAAK,EAAE,OAAO,IAAI;EACrD,OAAO6mB,mBAAmB,CACtBD,iBAAiB,EACjBzE,eAAe,EACfkD,YAAY,EACZtS,SAAS,EACT;IAAE,GAAGrS;GAAQ,EACb4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfjnB,WAAS,EACTgjB,WAAW,EACXrb,KAAK,EACLlJ,IAAI,EACJqpB,MACJ,CAAC;AACL,CAAC;AAED,MAAMwC,mBAAmB,GAAGA,CACxBtlB,IAAI,EACJ4gB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACRyD,OAAO,EACPxD,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfzV,UAAU,EACVwR,WAAW,EACXrb,KAAK,EACLlJ,IAAI,EACJqpB,MAAM,KACL;EACD7iB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqlB,OAAO,EAAE,YAAY,CAAC;EAO7C,MAAM;IACFhlB,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL1I,MAAM;IACNZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRtO,aAAa;IACbmR,QAAQ;IACR1C;GACH,GAAGoJ,WAAW;EAGf,MAAM1jB,IAAI,GAAGkS,UAAU,IAAK,GAAEA,UAAW,IAAGxM,IAAI,CAAC1F,IAAK,EAAC,IAAI0F,IAAI,CAAColB,SAAS,IAAIplB,IAAI,CAAColB,SAAS,IAAIplB,IAAI,CAAC1F,IAAI;EAExG,IAAIc,MAAM,GAAG,IAAI;EACjB,IAAI8mB,KAAK,GAAG,EAAE;EACd,IAAIliB,IAAI,CAACmiB,KAAK,EAAE;IACZD,KAAK,GAAGliB,IAAI,CAACmiB,KAAK,CAAC9d,GAAG,CAAC,CAAC/J,IAAI,EAACkrB,GAAG,KAAKL,kBAAkB,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;MAChEmnB,eAAe;MACfiB,SAAS;MACTC,QAAQ;MACR3iB,MAAM;MACN4iB,oBAAoB;MACpBC,UAAU;MACVC,eAAe;MACfzV,UAAU,EAAE,CAAAxM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS;MAC5CgjB,WAAW;MACXrb,KAAK,EAAE6iB,GAAG;MACV/rB,IAAI;MACJqpB,MAAM,EAAE;QAAExoB,IAAI,EAAE0F,IAAI,CAAC1F,IAAI;QAAEqI,KAAK;QAAE6X,EAAE,EAAExa,IAAI,CAACwa;OAAI;MAC/CuI,QAAQ,EAAEzoB;KACb,CAAC,CAAC;;EAiBP,MAAM8nB,UAAU,GAAG;IACf9lB,SAAS,EAAE0D,IAAI,CAAC1D,SAAS,IAAI0D,IAAI,CAAC1D,SAAS,CAAC3C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC1D,SAAS,IAAItB,SAAS;IACvFuB,SAAS,EAAEyD,IAAI,CAACzD,SAAS,IAAIyD,IAAI,CAACzD,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACzD,SAAS,IAAIvB,SAAS;IACvFoB,GAAG,EAAE4D,IAAI,CAAC5D,GAAG,IAAI4D,IAAI,CAAC5D,GAAG,CAACzC,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC5D,GAAG,IAAIpB,SAAS;IAC/DqB,GAAG,EAAE2D,IAAI,CAAC3D,GAAG,IAAI2D,IAAI,CAAC3D,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC3D,GAAG,IAAIrB,SAAS;IAC/DwB,OAAO,EAAEwD,IAAI,CAACxD,OAAO,IAAIwD,IAAI,CAACxD,OAAO,CAAC7C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACxD,OAAO,IAAIxB,SAAS;IAC/EyB,QAAQ,EAAEuD,IAAI,CAACvD,QAAQ,IAAIuD,IAAI,CAACvD,QAAQ,CAAC9C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACvD,QAAQ,IAAIzB;GAC7E;EAODI,MAAM,gBACF4B,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;IACP1G,GAAG,EAAEwE,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;IACzDA,IAAI,EAAE0F,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;IAC1DiE,OAAO,EAAEA,OAAQ;IACjByB,IAAI,EAAEA,IAAK;IACXQ,KAAK,EAAER,IAAI,CAACqiB,IAAI,IAAID,UAAW;IAC/BjgB,MAAM,EAAEA,CAAC;MAAEzB;KAAO,KAAK;MAEnB,IAAIV,IAAI,CAACjG,OAAO,EAAE;QACdkG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5F,IAAI,EAAC0F,IAAI,CAACmiB,KAAK,EAAE,eAAe,CAAC;QACxD,MAAM;UAAE/e,MAAM;UAAEmB,MAAM;UAAE0C;SAAQ,GAAGd,aAAa,CAAC;UAC7C5H,OAAO;UACPjE,IAAI,EAAEA;SACT,CAAC;QAEF4nB,KAAK,gBACDllB,cAAA,CAAA+jB,aAAA,CAAAuB,QAAA,qBACItlB,cAAA,CAAA+jB,aAAA,aACK3d,MAAM,CAACiB,GAAG,CAAC,CAACwb,EAAE,EAAEld,KAAK,kBAClB3F,cAAA,CAAA+jB,aAAA;UAAIvlB,GAAG,EAAEqkB,EAAE,CAACrF;WACPxa,IAAI,CAACmiB,KAAK,CAAC9d,GAAG,CAAC,CAAC9K,OAAO,EAAEgpB,IAAI,kBAC1BvlB,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;UACP1G,GAAG,EAAG,GAAElB,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK,EAAE;UAC9CA,IAAI,EAAG,GAAEA,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK,EAAE;UAC/CiE,OAAO,EAAEA,OAAQ;UACjB4D,MAAM,EAAEA,CAAC;YAAEzB;WAAO,KAAK;YACnBT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAG,GAAE5F,IAAK,IAAGqI,KAAM,IAAGpJ,OAAQ,EAAC,EAAC,+BAA+B,CAAC;YACrF,OAAO4rB,kBAAkB,CAAC5rB,OAAO,EAAEE,IAAI,EAAE;cACrCmnB,eAAe;cACfiB,SAAS;cACTC,QAAQ;cACR3iB,MAAM;cACN4iB,oBAAoB;cACpBC,UAAU;cACVC,eAAe;cACfzV,UAAU,EAAE,CAAAxM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS;cAC5CgjB,WAAW;cACXrb,KAAK,EAAEA,KAAK;cACZlJ,IAAI;cACJqpB,MAAM,EAAE;gBAAExoB,IAAI,EAAE0F,IAAI,CAAC1F,IAAI;gBAAEqI,KAAK;gBAAE6X,EAAE,EAAExa,IAAI,CAACwa;eAAI;cAC/C4K,SAAS,EAAG,GAAE9qB,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK;aACrD,CAAC;;SAaT,CACJ,CAAC,eACF0C,cAAA,CAAA+jB,aAAA;UAAQvnB,IAAI,EAAC,QAAQ;UAACipB,OAAO,EAAEA,MAAMxb,MAAM,CAACtE,KAAK;WAAG,GAAS,CAC7D,CACP,CAED,CAAC,eAOL3F,cAAA,CAAA+jB,aAAA;UACIvnB,IAAI,EAAC,QAAQ;UAEbipB,OAAO,EAAEA,MAAMle,MAAM,CAAC,EAAE;WAE3B,GAEO,CACV,CAAC;;MAGX,MAAMie,SAAS,GAAGR,UAAU,CAAChiB,IAAI,CAACxG,IAAI,EAAE;QACpCkH,KAAK;QACLV,IAAI;QACJ1F,IAAI;QACJqI,KAAK;QACLsf,eAAe;QACfC,KAAK;QACL/b,aAAa;QACblE,KAAK,EAAE9C,MAAM;QACb6e,WAAW;QACX8E;OACH,CAAC;MAEF,OAAON,SAAS;;GAGvB,CACJ;EAKD,OAAOpnB,MAAM;AACjB,CAAC;AAED,AAmLA,MAAMynB,gBAAc,GAAGA,CAACzhB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,EAAE/oB,OAAO,KAAK;EAG1D,MAAMqB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAErD,MAAMkI,QAAQ,GAAGhpB,OAAO,KAAKiB,SAAS,IAAIgF,IAAI,CAACxE,GAAG,CAAC,IAAK,GAAEsnB,MAAO,MAAK9iB,IAAI,CAACxE,GAAG,CAAE,EAAC;IAGjF,MAAMwnB,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC8nB,QAAQ,GAAG;QACR,GAAG/iB,IAAI;QACP1F,IAAI,EAAEyoB,QAAQ;QACdC,KAAK;QACL,IAAIF,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,gBAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,EAAEwE,IAAI,CAACjG,OAAO,CAAC;KACrG;GACJ,EAAE,IAAIka,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,MAAM6nB,YAAU,GAAGA,CAAC7hB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,KAAK;EAG7C,MAAM1nB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAGrD,MAAMmI,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAG;QACT,GAAGwE,IAAI;QACPgjB,KAAK;QACLrpB,KAAK,EAAE,EAAE;QACT,IAAImpB,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,gBAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,CAAC;KACvF;GACJ,EAAE,IAAIyY,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,AAmBA,MAAM8nB,0BAAwB,GAAGA,CAACf,KAAK,EAAE3mB,GAAG,KAAK;EAG7C,MAAM2nB,YAAY,GAAG,IAAIlP,GAAG,EAAE;EAE9BpX,MAAM,CAACmB,IAAI,CAACmkB,KAAK,CAAC,CAAC/Q,OAAO,CAAE5V,GAAG,IAAK;IAChC,IAAI2mB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE;MACzB,MAAMC,eAAe,GAAGC,sBAAoB,CAACnB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE,OAAO,CAAC;MAM9E,MAAMplB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAACqlB,eAAe,CAAC;MACzC,KAAK,IAAI1gB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG3E,IAAI,CAACC,MAAM,EAAE0E,KAAK,EAAE,EAAE;QAC9C,MAAM4gB,YAAY,GAAGF,eAAe,CAACrlB,IAAI,CAAC2E,KAAK,CAAC,CAAC;QACjD1C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiiB,KAAK,CAAC3mB,GAAG,CAAC,EAAE,YAAY,CAAC;QAChD2nB,YAAY,CAAC1gB,GAAG,CAAC8gB,YAAY,CAACjpB,IAAI,EAAE,CAChC,IAAK6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAI6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAK,EAAE,CAAC,EACvF;UAAE0oB,KAAK,EAAEb,KAAK,CAAC3mB,GAAG,CAAC,CAACgf,EAAE;UAAE,GAAG+I;SAAc,CAC5C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAED,MAAMG,sBAAoB,GAAGA,CAACliB,KAAK,EAAE5F,GAAG,EAAE7B,KAAK,KAAK;EAChD,MAAMwpB,YAAY,GAAG,EAAE;EACvB,IAAI,CAACrpB,KAAK,CAACC,OAAO,CAACqH,KAAK,CAAC,EAAE;EAC3B,MAAMoiB,UAAU,GAAGpiB,KAAK,CAACqiB,MAAM,EAAE;EACjC,OAAOD,UAAU,CAACjoB,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,KAAK;IACpC,OAAO;MACH,GAAG/E,GAAG;MACN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAI7B,KAAK,IAAIqG,IAAI,CAACrG,KAAK,CAAC,IAAMA,KAAK,KAAKqB,SAAS,IAAIgF,IAAK,IAAI;KAC3E;GACJ,EAAEmjB,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,aAAW,GAAG,CAAC;AACnB,MAAM+B,eAAe,GAAGzoB,cAAK,CAAC4mB,UAAU,CAAC,CAAC;EAAEzB,KAAK;EAC7C0B,kBAAkB;EAElB9B,oBAAoB;EACpBC,UAAU;EACVC,eAAe;EACfliB,gBAAgB,EAAhBA,iBAAgB,GAAG,IAAI;EACvBuM,aAAa,EAAbA,cAAa,GAAG;AAAG,CAAC,EAAE9K,GAAG,KAAK;EAAA,IAAAkkB,UAAA,EAAAC,gBAAA;EAE9B1lB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoM,cAAa,EAAE,eAAe,CAAC;EAEtD,MAAM;IACF/L,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACLrK,SAAS,EAAE;MAAE2B;KAAQ;IACrBZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRG,iBAAiB;IACjBtT;GACH,GAAG0V,OAAO,CAAC;IACR7N,IAAI,EAAE,UAAU;IAChBpJ,gBAAgB,EAAE,IAAI;IAGtBuM,aAAa,EAAEA;GAClB,CAAC;EAEF,MAAM0R,WAAW,GAAG;IAChBzd,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL1I,MAAM;IACNZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRtO,aAAa;IACbmR,QAAQ;IACR1C,iBAAiB;IACjBtT;GACH;EAED,MAAMwiB,YAAY,GAAG9mB,cAAK,CAAC+mB,MAAM,EAAE;EAEnC,MAAMC,kBAAkB,GAAGhnB,cAAK,CAAC+mB,MAAM,EAAE;EACzC,MAAME,iBAAiB,GAAGjnB,cAAK,CAAC+mB,MAAM,EAAE;EAGxC,MAAM,CAACtqB,IAAI,EAAEyqB,OAAO,CAAC,GAAGjM,QAAQ,EAAE;EAElCjb,cAAK,CAAC+d,SAAS,CAAC,MAAM;IAClB,IAAIoH,KAAK,KAAKnnB,SAAS,EAAE;IAUzB8oB,YAAY,CAACnpB,OAAO,GAAGwnB,KAAK;IAE5B6B,kBAAkB,CAACrpB,OAAO,GAAGuoB,0BAAwB,CAACY,YAAY,CAACnpB,OAAO,CAAC;IAC3EsF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,EAAE,0BAA0B,CAAC;IAChE7jB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE8jB,kBAAkB,EAAE,0BAA0B,EAAE,CAAC,GAAGA,kBAAkB,CAACrpB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,MAAMoM,YAAY,GAAGvC,KAAK,CAAC,OAAOlO,KAAK,EAAE;MAAEW,IAAI;MAAEd;KAAM,KAAK;MAKxD,IAAIwqB,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC,EAAE;QAEtC2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,wCAAwC,EAAEvG,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE0oB,KAAK,CAAC;QAChG,MAAM,CAAC/c,CAAC,EAAEC,CAAC,CAAC,GAAG,MAAM8e,iBAAiB,CAAC7pB,IAAI,EAAEX,KAAK,CAACW,IAAI,CAAC,EAAE6nB,KAAK,CAAC;QAChE,IAAI,CAACxZ,SAAS,CAAClP,IAAI,EAAE4L,CAAC,CAAC,IAAID,CAAC,EAAE;UAE1B8e,OAAO,CAAC;YAAE,GAAG7e;WAAG,CAAC;UAEjB;;;KAGX,CAAC;IAEF6e,OAAO,CAAC/B,KAAK,CAAC;GACjB,EAAE,CAACA,KAAK,CAAC,CAAC;EAMX,MAAMiC,WAAW,GAAGA,MAAM;IACtBN,YAAY,CAACnpB,OAAO,GAAGsoB,YAAU,CAACd,KAAK,EAAE,MAAM,CAAC;IAChD+B,OAAO,CAAC/B,KAAK,CAAC;GACjB;EAOD,MAAMkC,YAAY,GAAG,YAAY;IAE7B,IAAIxnB,MAAM,CAACmB,IAAI,CAACmB,MAAM,CAAC,CAAClB,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;IAChD,MAAM7C,MAAM,GAAG,MAAMyW,OAAO,EAAE;IAC9B5R,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAE9E,MAAM,EAAE+D,MAAM,CAAC;IAC9E,IAAI/D,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,MAAMoW,SAAS,EAAE;KAC3B,MAAM;MACH,OAAO,KAAK;;GAEnB;EAEDhQ,GAAG,CAAC7G,OAAO,GAAG;IACV6W,SAAS,EAAE6S,YAAY;IACvBD,WAAW,EAAEA,WAAW;IACxB3P,QAAQ,EAAEA;GACb;EAED,MAAM6P,cAAc,GAAG,OAAOhqB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAElD,MAAMmpB,aAAa,GAAGT,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC;IAChD,IAAIkqB,CAAC,GAAGppB,MAAM;IACd,MAAMqpB,cAAc,GAAG;MAAE,GAAGtlB,MAAM,CAACxE;KAAS,IAAI,EAAE;IAClD,MAAM+pB,SAAS,GAAGvlB,MAAM,CAACxE,OAAO,IAAI,EAAE;IAKtC,IAAIhB,KAAK,KAAK,EAAE,EAAE;MACd,MAAMsI,MAAK,GAAGtI,KAAK,KAAK,KAAK;MAC7B,IAAIsI,MAAK,EAAE;QACPyiB,SAAS,CAACpqB,IAAI,CAAC,GAAG;UACd2H,KAAK,EAALA,MAAK;UACL0iB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;SACjE;OACJ,MAAM;QACH,OAAOD,SAAS,CAACpqB,IAAI,CAAC;;KAI7B,MAAM;MACH,OAAOoqB,SAAS,CAACpqB,IAAI,CAAC;;IAI1B6E,MAAM,CAACxE,OAAO,GAAG;MAAE,GAAG+pB;KAAW;IAEjCzkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEf,MAAM,EAAE,aAAa,EAAEulB,SAAU,CAAC;IAgBzD,OAAO,CAAC,CAAChM,CAAC,CAACI,OAAO,CAAC2L,cAAc,EAAEC,SAAS,CAAC,EAAE,CAAC,GAAGF,CAAC,CAAC,EAAEE,SAAS,CAACpqB,IAAI,CAAC,CAAC;GAC1E;EAED,MAAMsmB,eAAe,GAAG,OAAOjnB,KAAK,EAAEW,IAAI,KAAK;IAG3CwpB,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;IAGxCsG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,CAACnpB,OAAO,EAAE,WAAW,EAAE,MAAM0pB,YAAY,EAAE,CAAC;IAG/E,MAAM,CAACO,oBAAoB,EAAExpB,MAAM,EAAE6G,KAAK,CAAC,GAAG,MAAMqiB,cAAc,CAAChqB,IAAI,EAAEX,KAAK,EAAE;MAAE,GAAGF;KAAM,CAAC;IAC5F,MAAM,CAACorB,sBAAsB,EAAEC,SAAS,CAAC,GAAG,MAAMX,iBAAiB,CAAC7pB,IAAI,EAAEX,KAAK,EAAEF,IAAI,CAAC;IAGtF,IAAImrB,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI,EAAE;MAGlE5kB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5B0kB,oBAAoB,EACpBC,sBAAsB,EACtB1lB,MACJ,CAAC;MACD+kB,OAAO,CAAC;QAAE,GAAGY;OAAW,CAAC;;GAMhC;EAED,MAAMX,iBAAiB,GAAG,OAAO7pB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAErD,MAAM2pB,YAAY,GAAGf,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC;IAEzD2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzG,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEwpB,YAAY,CAACnpB,OAAO,EAAEoqB,YAAY,EAAEf,kBAAkB,CAACrpB,OAAO,CAAC;IAO7H,IAAI6pB,CAAC,GAAG;MAAC,GAAGppB;KAAO;IAEnB,IAAI4pB,OAAO,GAAG,KAAK;IAEnB,IAAID,YAAY,KAAK/pB,SAAS,EAAE;MAQ5B,MAAM+pB,YAAY,CAAC1gB,GAAG,CAAC,MAAOrE,IAAI,IAAK;QACnC,MAAMilB,SAAS,GAAGtrB,KAAK,IAAIA,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;QAClD,MAAMurB,OAAO,GAAG,CAAAllB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAExG,IAAI,MAAK,MAAMqqB,kBAAkB,CAAC7jB,IAAI,CAACxG,IAAI,CAAC,CAACwG,IAAI,EAAEilB,SAAS,CAAC,CAAC;QAOpF,MAAMhgB,CAAC,GAAGuf,CAAC,CAACxkB,IAAI,CAACgjB,KAAK,CAAC;QACvB/iB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEskB,CAAC,CAAC,WAAW,CAAC,EAAC,oBAAoB,EAAC,OAAO,EAACvf,CAAC,CAAC;QACrE,IAAGA,CAAC,KAAKjK,SAAS,IAAIiK,CAAC,CAACxG,OAAO,KAAKymB,OAAO,EAAE;UACzCV,CAAC,CAACxkB,IAAI,CAACgjB,KAAK,CAAC,CAACvkB,OAAO,GAAGymB,OAAO;UAC/BF,OAAO,GAAG,IAAI;;OAgBrB,CAAC;;IAEN,OAAO,CAACA,OAAO,EAAER,CAAC,CAAC;GAEtB;EAEDvkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAEwjB,aAAW,EAAE,CAAC;EAEpD,OACKjqB,IAAI,MAAAisB,UAAA,GAAIjsB,IAAI,CAACmsB,IAAI,cAAAF,UAAA,wBAAAC,gBAAA,GAATD,UAAA,CAAWvD,KAAK,cAAAwD,gBAAA,uBAAhBA,gBAAA,CAAkBthB,GAAG,CAAC,CAAC/J,IAAI,EAAEqI,KAAK,KAAKwiB,kBAAkB,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;IAC3EmnB,eAAe;IACfkD,YAAY;IACZtS,SAAS;IACTrS,MAAM;IACN4iB,oBAAoB;IACpBC,UAAU;IACVC,eAAe;IACfjnB,SAAS;IACTgjB,WAAW;IACXrb;GACH,CACD,CAAC,KAAK,IAAI;AAsBlB,CAAC,CAAC;AAEF8iB,eAAe,CAAC7C,eAAe,GAAG,IAAI;AACtC6C,eAAe,CAACxoB,WAAW,GAAG,iBAAiB;;AC12B/C,MAAMgS,gBAAc,GAAG;EACnB9F,IAAI,EAAEtN,eAAe,CAACG,QAAQ;EAC9BkT,cAAc,EAAErT,eAAe,CAACE,QAAQ;EACxCoT,gBAAgB,EAAE;AACtB,CAAC;AACD,MAAMC,mBAAiB,GAAG,OAAO3G,MAAM,KAAK,WAAW;AACvD,AAAO,SAASod,mBAAmBA,CAACzoB,KAAK,GAAG,EAAE,EAAE;EAC5C,IAAIkS,WAAW,GAAGzS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmS,gBAAc,CAAC,EAAE7R,KAAK,CAAC;EACzE6C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoP,WAAW,EAAE,aAAa,CAAC;EAClD,IAAIC,cAAc;EAClB,IAAI3Q,UAAU,GAAG;IACbE,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACf6N,WAAW,EAAE,KAAK;IAClB4C,WAAW,EAAE,CAAC;IACdxQ,aAAa,EAAE,EAAE;IACjByQ,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzBxQ,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,MAAM1B,eAAe,GAAG;IACpBqB,OAAO,EAAE,KAAK;IACdC,WAAW,EAAE,KAAK;IAClBC,aAAa,EAAE,KAAK;IACpBC,YAAY,EAAE,KAAK;IACnBC,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX;EACD,IAAIwB,OAAO,GAAG,EAAE;EAChB,IAAIP,WAAW,GAAG,EAAE;EACpB,IAAIC,cAAc,GAAGiP,WAAW,CAAChD,aAAa,IAAI,EAAE;EACpD,IAAIjL,WAAW,GAAG,KAAK;EACvB,IAAIsO,UAAU,GAAG,KAAK;EACtB,MAAMtQ,SAAS,GAAG;IACdwI,KAAK,EAAE,IAAIyC,OAAO,EAAE;IACpB/L,OAAO,EAAE,IAAI+L,OAAO,EAAE;IACtBlJ,KAAK,EAAE,IAAIkJ,OAAO,EAAE;IACpBhL,KAAK,EAAE,IAAIgL,OAAO;GACrB;EACD,IAAInJ,MAAM,GAAG;IACTN,KAAK,EAAE,IAAI+O,GAAG,EAAE;IAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;IAClBxO,KAAK,EAAE,IAAIwO,GAAG,EAAE;IAChB/H,KAAK,EAAE,IAAI+H,GAAG,EAAE;IAChBjI,QAAQ,EAAE;GACb;EACD,MAAMmI,cAAc,GAAGC,kBAAkB,CAACT,WAAW,CAACnG,IAAI,CAAC;EAC3D,MAAM6G,0BAA0B,GAAGV,WAAW,CAACxD,YAAY,KAAKjQ,eAAe,CAACK,GAAG;EACnF,MAAM+T,cAAc,GAAI3V,IAAI,IAAK6G,MAAM,CAACwG,QAAQ,IAC5CxG,MAAM,CAAC0G,KAAK,CAACqI,GAAG,CAAC5V,IAAI,CAAC,IACtB6G,MAAM,CAAC0G,KAAK,CAACqI,GAAG,CAAC,CAAC5V,IAAI,CAACuU,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;EAClD,MAAMsB,gBAAgB,GAAGA,CAAC7V,IAAI,EAAE2H,KAAK,KAAK;IACtCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC;IACnC5C,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAEP,UAAU,CAACO;KACtB,CAAC;GACL;EACD,MAAMiR,uBAAuB,GAAG,YAAY;IACxC,MAAMlR,OAAO,GAAG,MAAMmR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;IACjD,IAAIzB,OAAO,KAAKN,UAAU,CAACM,OAAO,EAAE;MAChCN,UAAU,CAACM,OAAO,GAAGA,OAAO;MAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBN;OACH,CAAC;;GAET;EACD,MAAMoR,uBAAuB,GAAG,OAAOC,gBAAgB,EAAEjW,IAAI,EAAE2H,KAAK,EAAEH,UAAU,EAAE0O,mBAAmB,EAAEC,SAAS,KAAK;IACjH,MAAMC,aAAa,GAAG3S,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;IAClD,MAAM4E,OAAO,GAAG,CAAC,EAAEzB,eAAe,CAACyB,OAAO,KACrCoQ,WAAW,CAACqB,QAAQ,GAAGH,mBAAmB,GAAGJ,uBAAuB,EAAE,CAAC,CAAC;IAC7E,IAAIhT,KAAK,CAACwT,UAAU,IAAI3O,KAAK,EAAE;MAC3BsN,cAAc,GACVA,cAAc,IAAIsB,QAAQ,CAACV,gBAAgB,EAAE/S,KAAK,CAACwT,UAAU,CAAC;MAClErB,cAAc,CAACjV,IAAI,EAAE2H,KAAK,CAAC;KAC9B,MACI;MACDA,KAAK,GACCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC,GACnCyD,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;IAExC,IAAI,CAACmW,SAAS,KACTxO,KAAK,GAAG,CAAC0G,SAAS,CAAC+H,aAAa,EAAEzO,KAAK,CAAC,GAAGyO,aAAa,CAAC,IAC1D,CAACvS,aAAa,CAAC2D,UAAU,CAAC,IAC1BlD,UAAU,CAACM,OAAO,KAAKA,OAAO,KAC9B,CAACqR,gBAAgB,EAAE;MACnB,MAAMO,gBAAgB,GAAGjU,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgF,UAAU,CAAC,EAAGrE,eAAe,CAACyB,OAAO,IAAIoQ,WAAW,CAACqB,QAAQ,GAAG;QAAEzR;OAAS,GAAG,EAAG,CAAC,EAAE;QAAEC,MAAM,EAAEP,UAAU,CAACO,MAAM;QAAE7E;OAAM,CAAC;MAC/LsE,UAAU,GAAG/B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE8B,UAAU,CAAC,EAAEkS,gBAAgB,CAAC;MAE3EzR,SAAS,CAACC,KAAK,CAACE,IAAI,CAACiR,SAAS,GAAG;QAAEnW;OAAM,GAAGwW,gBAAgB,CAAC;;IAEjEzR,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBP,YAAY,EAAE;KACjB,CAAC;GACL;EACD,MAAM8R,aAAa,GAAGA,CAACzW,IAAI,EAAEX,KAAK,EAAE6J,OAAO,GAAG,EAAE,EAAEwN,YAAY,KAAK;IAC/D,MAAMtQ,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;MACnB,IAAIA,EAAE,EAAE;QAEJ6B,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEsR,eAAe,CAACjS,KAAK,EAAEiH,EAAE,CAAC,CAAC;QAClD,MAAMqQ,UAAU,GAAGC,KAAK,IAAIC,aAAa,CAACvQ,EAAE,CAACY,GAAG,CAAC,IAAI3H,iBAAiB,CAACF,KAAK,CAAC,GACvE,EAAE,GACFA,KAAK;QACX,IAAI0R,WAAW,CAACzK,EAAE,CAACY,GAAG,CAAC,IAAI,CAACqL,QAAQ,CAACoE,UAAU,CAAC,EAAE;UAC9CrQ,EAAE,CAACY,GAAG,CAAC8J,KAAK,GAAG2F,UAAU;SAC5B,MACI,IAAIzF,gBAAgB,CAAC5K,EAAE,CAACY,GAAG,CAAC,EAAE;UAC/B,CAAC,GAAGZ,EAAE,CAACY,GAAG,CAACgC,OAAO,CAAC,CAAC4N,OAAO,CAAEC,SAAS,IAAMA,SAAS,CAACpG,QAAQ,GAAGgG,UAAU,CAACvR,QAAQ,CAAC2R,SAAS,CAAC1X,KAAK,CAAE,CAAC;SAC1G,MACI,IAAIiH,EAAE,CAAC2C,IAAI,EAAE;UACd,IAAInJ,eAAe,CAACwG,EAAE,CAACY,GAAG,CAAC,EAAE;YACzBZ,EAAE,CAAC2C,IAAI,CAACtF,MAAM,GAAG,CAAC,GACZ2C,EAAE,CAAC2C,IAAI,CAAC6N,OAAO,CAAEE,WAAW,IAAMA,WAAW,CAACjX,OAAO,GAAGP,KAAK,CAACC,OAAO,CAACkX,UAAU,CAAC,GAC7E,CAAC,CAACA,UAAU,CAAC7S,IAAI,CAAE3E,IAAI,IAAKA,IAAI,KAAK6X,WAAW,CAAC3X,KAAK,CAAC,GACvDsX,UAAU,KAAKK,WAAW,CAAC3X,KAAM,CAAC,GACrCiH,EAAE,CAAC2C,IAAI,CAAC,CAAC,CAAC,CAAClJ,OAAO,GAAG,CAAC,CAAC4W,UAAW;WAC5C,MACI;YACDrQ,EAAE,CAAC2C,IAAI,CAAC6N,OAAO,CAAEG,QAAQ,IAAMA,QAAQ,CAAClX,OAAO,GAAGkX,QAAQ,CAAC5X,KAAK,KAAKsX,UAAW,CAAC;;SAExF,MACI;UACDrQ,EAAE,CAACY,GAAG,CAAC7H,KAAK,GAAGsX,UAAU;;QAE7B,IAAID,YAAY,EAAE;UACd3R,SAAS,CAACd,OAAO,CAACiB,IAAI,CAAC;YACnBuB,MAAM,EAAEyQ,SAAS,EAAE;YACnBlX;WACH,CAAC;;QAEN,CAACkJ,OAAO,CAACiO,WAAW,IAAIjO,OAAO,CAACkO,WAAW,KACvCC,wBAAwB,CAACrX,IAAI,EAAE2W,UAAU,EAAEzN,OAAO,CAACkO,WAAW,CAAC;QACnElO,OAAO,CAACoO,cAAc,IAAIC,OAAO,CAACvX,IAAI,CAAC;;;GAGlD;EACD,MAAMqX,wBAAwB,GAAGA,CAACrX,IAAI,EAAE8S,UAAU,EAAE0E,gBAAgB,EAAEd,YAAY,GAAG,IAAI,KAAK;IAC1F,MAAM1R,KAAK,GAAG;MACVhF;KACH;IACD,IAAIyX,SAAS,GAAG,KAAK;IACrB,IAAItU,eAAe,CAACqB,OAAO,EAAE;MACzB,MAAMkT,eAAe,GAAGpT,UAAU,CAACE,OAAO;MAC1CF,UAAU,CAACE,OAAO,GAAGmT,WAAW,EAAE;MAClC3S,KAAK,CAACR,OAAO,GAAGF,UAAU,CAACE,OAAO;MAClCiT,SAAS,GAAGC,eAAe,KAAK1S,KAAK,CAACR,OAAO;;IAEjD,IAAIrB,eAAe,CAACsB,WAAW,IAAI,CAAC+S,gBAAgB,EAAE;MAClD,MAAMI,oBAAoB,GAAGnU,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;MAC9D,MAAM6X,mBAAmB,GAAG,CAACxJ,SAAS,CAAC5K,GAAG,CAACsC,cAAc,EAAE/F,IAAI,CAAC,EAAE8S,UAAU,CAAC;MAC7E+E,mBAAmB,GACb1P,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,IAAI,CAAC,GACvCoL,KAAK,CAAC9G,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;MACzCgF,KAAK,CAACP,WAAW,GAAGH,UAAU,CAACG,WAAW;MAC1CgT,SAAS,GACLA,SAAS,IAAIG,oBAAoB,KAAKnU,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;;IAE/E,MAAM8X,sBAAsB,GAAGrU,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;IAClE,IAAIwX,gBAAgB,IAAI,CAACM,sBAAsB,EAAE;MAC7C3P,GAAG,CAAC7D,UAAU,CAACI,aAAa,EAAE1E,IAAI,EAAEwX,gBAAgB,CAAC;MACrDxS,KAAK,CAACN,aAAa,GAAGJ,UAAU,CAACI,aAAa;MAC9C+S,SAAS,GACLA,SAAS,IACRtU,eAAe,CAACuB,aAAa,IAC1BoT,sBAAsB,KAAKN,gBAAiB;;IAExDC,SAAS,IAAIf,YAAY,IAAI3R,SAAS,CAACC,KAAK,CAACE,IAAI,CAACF,KAAK,CAAC;IACxD,OAAOyS,SAAS,GAAGzS,KAAK,GAAG,EAAE;GAChC;EACD,MAAM+S,eAAe,GAAG,MAAO/X,IAAI,IAAK;IACpC,OAAOgV,WAAW,CAACqB,QAAQ,GACrB,MAAMrB,WAAW,CAACqB,QAAQ,CAAC9T,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsD,WAAW,CAAC,EAAEkP,WAAW,CAACgD,OAAO,EAAEC,kBAAkB,CAACjY,IAAI,IAAI6G,MAAM,CAACN,KAAK,EAAEF,OAAO,EAAE2O,WAAW,CAACxD,YAAY,EAAEwD,WAAW,CAACvD,yBAAyB,CAAC,CAAC,GACnM,EAAE;GACX;EACD,MAAMyG,yBAAyB,GAAG,MAAO/X,KAAK,IAAK;IAC/C,MAAM;MAAE0E;KAAQ,GAAG,MAAMkT,eAAe,EAAE;IAC1C,IAAI5X,KAAK,EAAE;MACP,KAAK,MAAMH,IAAI,IAAIG,KAAK,EAAE;QACtB,MAAMwH,KAAK,GAAGlE,GAAG,CAACoB,MAAM,EAAE7E,IAAI,CAAC;QAC/B2H,KAAK,GACCQ,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAE2H,KAAK,CAAC,GACnCyD,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;KAE3C,MACI;MACDsE,UAAU,CAACO,MAAM,GAAGA,MAAM;;IAE9B,OAAOA,MAAM;GAChB;EACD,MAAMkR,YAAY,GAAG,OAAO1P,OAAO,EAAE8R,gBAAgB,EAAEH,OAAO,GAAG;IAC7DI,KAAK,EAAE,IAAI;IACXoT,UAAU,EAAE;GACf,EAAEC,MAAM,GAAG,KAAK,KAAK;IAElB,KAAK,MAAMzrB,IAAI,IAAIqG,OAAO,EAAE;MACxB,MAAMD,KAAK,GAAGC,OAAO,CAACrG,IAAI,CAAC;MAE3B,IAAIoG,KAAK,EAAE;QACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;QACnB,MAAM7F,GAAG,GAAGuC,IAAI,CAACoD,KAAK,EAAE,IAAI,CAAC;QAE7B,IAAIE,EAAE,EAAE;UAGJ,IAAIA,EAAE,CAACmlB,MAAM,KAAKA,MAAM,IAAIA,MAAM,KAAK,KAAK,EAAE;YAC1C,MAAMpT,UAAU,GAAG,MAAMC,aAAa,CAAClS,KAAK,EAAE3C,GAAG,CAACqC,WAAW,EAAEQ,EAAE,CAACtG,IAAI,CAAC,EAAE0V,0BAA0B,EAAEV,WAAW,CAACvD,yBAAyB,CAAC;YAG3I,IAAI0G,gBAAgB,EAAE;cAClB,IAAIE,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;gBACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;gBACrB;;aAEP,MACI;cACD,IAAIC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;gBACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;;cAEzBC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,GACbmI,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAEyB,EAAE,CAACtG,IAAI,EAAEqY,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,CAAC,GACpDoL,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAEyB,EAAE,CAACtG,IAAI,CAAC;cAIvC,IAAIgY,OAAO,CAACwT,UAAU,KAAK,KAAK,IAAIjpB,MAAM,CAACmB,IAAI,CAACY,UAAU,CAACO,MAAM,CAAC,CAAClB,MAAM,IAAI,CAAC,EAAE;;;;QAI5FlD,GAAG,KAAK,MAAMsV,YAAY,CAACtV,GAAG,EAAE0X,gBAAgB,EAAEH,OAAO,CAAC,CAAC;;;IAGnE,OAAOA,OAAO,CAACI,KAAK;GACvB;EACD,MAAMsT,sBAAsB,GAAG,OAAOrlB,OAAO,EAAE8R,gBAAgB,EAAEH,OAAO,GAAG;IACvEI,KAAK,EAAE;GACV,EAAEqT,MAAM,GAAG,KAAK,KAAK;IAElB,IAAIE,WAAW,GAAG,EAAE;IACpB,KAAK,MAAM3rB,IAAI,IAAIqG,OAAO,EAAE;MACxB,MAAMD,KAAK,GAAGC,OAAO,CAACrG,IAAI,CAAC;MAE3B,IAAIoG,KAAK,EAAE;QACP,MAAME,EAAE,GAAGF,KAAK,CAACE,EAAE;QACnB,MAAM7F,GAAG,GAAGuC,IAAI,CAACoD,KAAK,EAAE,IAAI,CAAC;QAE7B,IAAIE,EAAE,EAAE;UAGJ,IAAIA,EAAE,CAACmlB,MAAM,KAAKA,MAAM,IAAIA,MAAM,KAAK,KAAK,EAAE;YAC1C,MAAMpT,UAAU,GAAG,MAAMC,aAAa,CAAClS,KAAK,EAAE3C,GAAG,CAACqC,WAAW,EAAEQ,EAAE,CAACtG,IAAI,CAAC,EAAE0V,0BAA0B,EAAEV,WAAW,CAACvD,yBAAyB,CAAC;YAG3I,IAAI0G,gBAAgB,EAAE;cAClB,IAAIE,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;gBACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;gBACrB;;aAEP,MACI;cACD,IAAIC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,EAAE;gBACrBgY,OAAO,CAACI,KAAK,GAAG,KAAK;;cAEzBC,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,GACbmI,GAAG,CAACwjB,WAAW,EAAErlB,EAAE,CAACtG,IAAI,EAAEqY,UAAU,CAAC/R,EAAE,CAACtG,IAAI,CAAC,CAAC,GAC9CoL,KAAK,CAACugB,WAAW,EAAErlB,EAAE,CAACtG,IAAI,CAAC;;;;QAO7CS,GAAG,KAAK,MAAMsV,YAAY,CAACtV,GAAG,EAAE0X,gBAAgB,EAAEH,OAAO,CAAC,CAAC;;;IAGnE,OAAO2T,WAAW;GACrB;EACD,MAAMpT,YAAY,GAAG,OAAO;IAAErZ,IAAI;IAAEW,MAAM;IAAEA,MAAM,EAAE;MAAER,KAAK;MAAEW,IAAI;MAAEd,IAAI,EAAEsZ;;GAAc,KAAK;IACxF,IAAI7Q,KAAK;IACT,IAAI/C,OAAO;IACX,MAAMwB,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,IAAI0M,UAAU,GAAG0F,SAAS,GAAG1H,aAAa,CAAC1K,KAAK,CAAC,GAAG1F,SAAS;MAC7DoS,UAAU,GAAG3R,WAAW,CAAC2R,UAAU,CAAC,GAAGzT,KAAK,GAAGyT,UAAU;MAEzD,MAAMT,WAAW,GAAGnT,IAAI,KAAKkC,MAAM,CAACC,IAAI;MACxC,MAAM;QAAE0N,QAAQ,EAAEoD,kBAAkB;QAAEnD,UAAU,EAAEoD;OAAsB,GAAGqD,kBAAkB,CAACT,WAAW,CAACJ,cAAc,CAAC;MACzH,MAAM6D,oBAAoB,GAAI,CAACC,aAAa,CAACtS,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACE,EAAE,CAACC,KAAK,CAAC,IAClE,CAACyO,WAAW,CAACqB,QAAQ,IACrB,CAAC5S,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,IAC7B2Y,cAAc,CAACpW,MAAM,CAACC,MAAM,CAAC;QACzB6P,WAAW;QAAE3K,SAAS,EAAE,CAAC,CAACjE,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;QAAEsS,WAAW,EAAEhO,UAAU,CAACgO,WAAW;QAAEH,kBAAkB;QACtHC;OACH,EAAEoD,cAAc,CAAC,CAAC;MACvB,MAAMW,SAAS,GAAG,CAAC9D,WAAW,IAAIsD,cAAc,CAAC3V,IAAI,CAAC;MACtD,IAAI,CAACmB,WAAW,CAAC2R,UAAU,CAAC,EAAE;QAC1B3K,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAE8S,UAAU,CAAC;;MAEtC,MAAMtL,UAAU,GAAG6P,wBAAwB,CAACrX,IAAI,EAAE8S,UAAU,EAAET,WAAW,EAAE,KAAK,CAAC;MACjF,MAAMqE,YAAY,GAAGtQ,KAAK,CAACE,EAAE,CAACiH,KAAK,IAAI,CAAC1J,aAAa,CAAC2D,UAAU,CAAC,IAAI2O,SAAS;MAE9ExQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE8Q,YAAY,EAAG,mBAAkB1W,IAAK,sBAAqB,EAAEoG,KAAK,CAACE,EAAE,CAACiH,KAAK,EAAE,uBAAuB,EAAEkL,oBAAoB,EAAE,cAAc,EAAEpG,WAAW,EAAE,kCAAkC,EAAE8D,SAAS,CAAC;MAC9N,IAAIsC,oBAAoB,EAAE;QACtB,CAACpG,WAAW,IACRtN,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;UACjBlF,IAAI;UACJd;SACH,CAAC;QACN,OAAQwX,YAAY,IAChB3R,SAAS,CAACC,KAAK,CAACE,IAAI,CAACiR,SAAS,GAAG;UAAEnW;SAAM,GAAGuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEgF,UAAU,CAAC,EAAE;UAAExH;SAAM,CAAC,CAAC;;MAE3G+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBP,YAAY,EAAE;OACjB,CAAC;MACF,IAAIqQ,WAAW,CAACqB,QAAQ,EAAE;QACtB,MAAM;UAAExR;SAAQ,GAAG,MAAMkT,eAAe,CAAC,CAAC/X,IAAI,CAAC,CAAC;QAChD2H,KAAK,GAAGlE,GAAG,CAACoB,MAAM,EAAE7E,IAAI,CAAC;QACzB,IAAIF,eAAe,CAACD,MAAM,CAAC,IAAI,CAAC8H,KAAK,EAAE;UACnC,MAAMiR,cAAc,GAAGtY,iBAAiB,CAACN,IAAI,CAAC;UAC9C,MAAM6Y,QAAQ,GAAGpV,GAAG,CAACoB,MAAM,EAAE+T,cAAc,EAAE,EAAE,CAAC;UAChDC,QAAQ,CAAC3Z,IAAI,IAAI2Z,QAAQ,CAACvR,OAAO,KAAKK,KAAK,GAAGkR,QAAQ,CAAC;UACvD,IAAIA,QAAQ,IAAIpV,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE+T,cAAc,CAAC,EAAE;YACpD5Y,IAAI,GAAG4Y,cAAc;;;QAG7BhU,OAAO,GAAGf,aAAa,CAACgB,MAAM,CAAC;OAClC,MACI;QAED8C,KAAK,GAAG,CAAC,MAAM2Q,aAAa,CAAClS,KAAK,EAAE3C,GAAG,CAACqC,WAAW,EAAE9F,IAAI,CAAC,EAAE0V,0BAA0B,EAAEV,WAAW,CAACvD,yBAAyB,CAAC,EAAEzR,IAAI,CAAC;;MAEzI,CAACqS,WAAW,IACRtN,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;QACjBlF,IAAI;QACJd,IAAI;QACJuH,MAAM,EAAEyQ,SAAS;OACpB,CAAC;MACNlB,uBAAuB,CAAC,KAAK,EAAEhW,IAAI,EAAE2H,KAAK,EAAEH,UAAU,EAAE5C,OAAO,EAAEuR,SAAS,CAAC;;GAElF;EACD,MAAM2C,yBAAyB,GAAGA,CAAC9Y,IAAI,EAAEkH,GAAG,EAAE6R,iBAAiB,KAAK;IAChE,MAAM3S,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhC,IAAIoG,KAAK,EAAE;MACP,MAAMuQ,UAAU,GAAGlT,GAAG,CAACqC,WAAW,EAAE9F,IAAI,CAAC;MACzC,MAAMgZ,gBAAgB,GAAG7X,WAAW,CAACwV,UAAU,CAAC;MAChD,MAAM9V,YAAY,GAAGmY,gBAAgB,GAC/BvV,GAAG,CAACsC,cAAc,EAAE/F,IAAI,CAAC,GACzB2W,UAAU;MAChB,IAAIxV,WAAW,CAACN,YAAY,CAAC,IACxBqG,GAAG,IAAIA,GAAG,CAAC+R,cAAe,IAC3BF,iBAAiB,EAAE;QACnB7R,GAAG,IAAIA,GAAG,CAAC/C,OAAO,IACdgE,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAE+Y,iBAAiB,GAAGlY,YAAY,GAAGiQ,aAAa,CAAC1K,KAAK,CAAC,CAAC;OACtF,MACI;QACDqQ,aAAa,CAACzW,IAAI,EAAEa,YAAY,CAAC;;;IAGzCwU,UAAU,IAAIlS,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;GAC1D;EACD,MAAMiK,WAAW,GAAGA,CAAC3X,IAAI,EAAEb,IAAI,KAAK;IAChCa,IAAI,IAAIb,IAAI,IAAIgJ,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEb,IAAI,CAAC;IAC5C,OAAO,CAACkP,SAAS,CAAC9L,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE0U,SAAS,EAAE,CAAC,EAAEnR,cAAc,CAAC;GACpE;EACD,MAAM2H,YAAY,GAAG,YAAY;IAC7B,MAAM9I,OAAO,GAAGoQ,WAAW,CAACqB,QAAQ,GAC9BxS,aAAa,CAAC,CAAC,MAAMkU,eAAe,EAAE,EAAElT,MAAM,CAAC,GAC/C,MAAMkR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;IACvC,IAAIzB,OAAO,KAAKN,UAAU,CAACM,OAAO,EAAE;MAChCN,UAAU,CAACM,OAAO,GAAGA,OAAO;MAC5BG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBN;OACH,CAAC;;GAET;EACD,MAAMsU,SAAS,GAAGA,CAAClZ,IAAI,EAAEX,KAAK,EAAE6J,OAAO,KAAK3G,MAAM,CAAC4W,OAAO,CAAC9Z,KAAK,CAAC,CAACyX,OAAO,CAAC,CAAC,CAACsC,QAAQ,EAAEzC,UAAU,CAAC,KAAK;IAClG,MAAM0C,SAAS,GAAI,GAAErZ,IAAK,IAAGoZ,QAAS,EAAC;IACvC,MAAMhT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;IACrC,MAAMC,YAAY,GAAGzS,MAAM,CAACC,KAAK,CAAC8O,GAAG,CAAC5V,IAAI,CAAC;IAC3C,CAACsZ,YAAY,IAAI,CAAC9K,WAAW,CAACmI,UAAU,CAAC,IAAKvQ,KAAK,IAAI,CAACA,KAAK,CAACE,EAAG,KAC7D,CAAC5G,YAAY,CAACiX,UAAU,CAAC,GACvBuC,SAAS,CAACG,SAAS,EAAE1C,UAAU,EAAEzN,OAAO,CAAC,GACzCuN,aAAa,CAAC4C,SAAS,EAAE1C,UAAU,EAAEzN,OAAO,EAAE,IAAI,CAAC;GAC5D,CAAC;EACF,MAAMqQ,SAAS,GAAGA,CAACC,UAAU,EAAE3Y,YAAY,EAAE4Y,QAAQ,KAAK;IACtD,MAAM7N,WAAW,GAAGrJ,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG6S,UAAU,GAC3C9S,MAAM,CAACC,MAAM,CAAC,EAAE,EAAED,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEuD,cAAc,CAAC,EAAED,WAAW,CAAC,CAAC,GAAG3E,WAAW,CAACN,YAAY,CAAC,GACxGkF,cAAc,GACdlF,YAAa,CAAC;IACxB,IAAI,CAAC2Y,UAAU,EAAE;MACbC,QAAQ,KAAK5S,MAAM,CAACwG,QAAQ,GAAG,IAAI,CAAC;MACpC,OAAOzB,WAAW;;IAEtB,MAAM8N,aAAa,GAAG,EAAE;IACxB,MAAM5Y,MAAM,GAAG,IAAI6Y,GAAG,EAAE;IACxB,KAAK,MAAMN,SAAS,IAAIlU,qBAAqB,CAACqU,UAAU,CAAC,EAAE;MACvDC,QAAQ,IAAI5S,MAAM,CAAC0G,KAAK,CAACrB,GAAG,CAACmN,SAAS,CAAC;MACvCK,aAAa,CAAChK,IAAI,CAACjM,GAAG,CAACmI,WAAW,EAAEyN,SAAS,CAAC,CAAC;MAC/CvY,MAAM,CAACqH,GAAG,CAACkR,SAAS,EAAE5V,GAAG,CAACmI,WAAW,EAAEyN,SAAS,CAAC,CAAC;;IAEtD,OAAO7Z,KAAK,CAACC,OAAO,CAAC+Z,UAAU,CAAC,GAC1B,CAACE,aAAa,EAAE5Y,MAAM,CAAC,GACvBlB,QAAQ,CAACkB,MAAM,CAAC,CAAC,CAAC,CAAC,GACfyB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE1B,MAAM,CAAC,CAAC,CAAC,CAAC,GAAGtB,KAAK,CAACC,OAAO,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC,GACnD,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC,GACdA,MAAM,CAAC,CAAC,CAAC;GAC1B;EACD,MAAM8Y,iBAAiB,GAAGA,CAAC5H,aAAa,EAAEhS,IAAI,GAAG,EAAE,KAAK;IACpD2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoM,aAAa,EAAE,mBAAmB,CAAC;IAC1D,KAAK,MAAM9Q,GAAG,IAAI8Q,aAAa,EAAE;MAC7B,MAAM3S,KAAK,GAAG2S,aAAa,CAAC9Q,GAAG,CAAC;MAChC,MAAMmY,SAAS,GAAGrZ,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAG,EAAE,CAAC,GAAGkB,GAAG;MAChD,MAAMkF,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;MACrC,IAAI,CAACjT,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,EAAE;QACrB,IAAI1G,QAAQ,CAACP,KAAK,CAAC,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;UACzCua,iBAAiB,CAACva,KAAK,EAAEga,SAAS,CAAC;SACtC,MACI,IAAI,CAACjT,KAAK,EAAE;UACb+B,GAAG,CAACrC,WAAW,EAAEuT,SAAS,EAAEha,KAAK,CAAC;;;;GAIjD;EACD,MAAMiN,qBAAqB,GAAGA,CAACxC,OAAO,EAAE9J,IAAI,EAAE6Z,MAAM,EAAE5L,IAAI,EAAE7B,uBAAuB,GAAG,EAAE,EAAE0N,SAAS,GAAG,IAAI,EAAEC,eAAe,GAAG,IAAI,KAAK;IACnIhT,WAAW,GAAG,IAAI;IAClB,IAAIgT,eAAe,IAAItW,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,EAAE;MACvC,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MAC/DgN,SAAS,IAAI3R,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAEga,MAAM,CAAC;;IAE3C7R,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEoM,uBAAuB,CAAC;IAC/C,IAAI5M,KAAK,CAACC,OAAO,CAACgE,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,CAAC,EAAE;MAC7C,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MACzEgN,SAAS,IAAI3R,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAEga,MAAM,CAAC;MACjDC,eAAe,CAAC3V,UAAU,CAACO,MAAM,EAAE7E,IAAI,CAAC;;IAE5C,IAAImD,eAAe,CAACuB,aAAa,IAAIjB,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC,EAAE;MACtE,MAAMga,MAAM,GAAGH,MAAM,CAACpW,GAAG,CAACa,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC,EAAEiO,IAAI,CAAC1B,IAAI,EAAE0B,IAAI,CAACnB,IAAI,CAAC;MAChFgN,SAAS,IAAI3R,GAAG,CAAC7D,UAAU,CAACI,aAAa,EAAE1E,IAAI,EAAEga,MAAM,CAAC;MACxDC,eAAe,CAAC3V,UAAU,CAACI,aAAa,EAAE1E,IAAI,CAAC;;IAEnD,IAAImD,eAAe,CAACsB,WAAW,IAAItB,eAAe,CAACqB,OAAO,EAAE;MACxD2D,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAACzM,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,EAAErG,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAC5KoM,uBAAuB,IACnBjE,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAACzM,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,EAAErG,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;MAChLia,eAAe,CAAC3V,UAAU,CAACG,WAAW,EAAEzE,IAAI,CAAC;;IAEjD+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBV,OAAO,EAAEmT,WAAW,CAAC3X,IAAI,EAAEyN,OAAO,CAACrB,uBAAuB,EAAEtC,OAAO,CAAC,CAAC;MACrErF,WAAW,EAAEH,UAAU,CAACG,WAAW;MACnCI,MAAM,EAAEP,UAAU,CAACO,MAAM;MACzBD,OAAO,EAAEN,UAAU,CAACM;KACvB,CAAC;GACL;EACD,MAAMqH,mBAAmB,GAAIjM,IAAI,IAAKyD,GAAG,CAAC4R,UAAU,GAAGvP,WAAW,GAAGC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC;EAC9F,MAAMma,QAAQ,GAAGA,CAACna,IAAI,EAAEX,KAAK,EAAE6J,OAAO,GAAG,EAAE,KAAK;IAC5C,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAChC,MAAMsZ,YAAY,GAAGzS,MAAM,CAACC,KAAK,CAAC8O,GAAG,CAAC5V,IAAI,CAAC;IAC3CmI,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEX,KAAK,CAAC;IAC7B,IAAIia,YAAY,EAAE;MACdvU,SAAS,CAAC+B,KAAK,CAAC5B,IAAI,CAAC;QACjBuB,MAAM,EAAEpH,KAAK;QACbW,IAAI;QACJ6N,OAAO,EAAE;OACZ,CAAC;MACF,IAAI,CAAC1K,eAAe,CAACqB,OAAO,IAAIrB,eAAe,CAACsB,WAAW,KACvDyE,OAAO,CAACiO,WAAW,EAAE;QACrBhP,GAAG,CAAC7D,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAEka,wBAAwB,CAAC7a,KAAK,EAAEoE,GAAG,CAACsC,cAAc,EAAE/F,IAAI,EAAE,EAAE,CAAC,EAAEyD,GAAG,CAACa,UAAU,CAACG,WAAW,EAAEzE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxI+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBlF,IAAI;UACJyE,WAAW,EAAEH,UAAU,CAACG,WAAW;UACnCD,OAAO,EAAEmT,WAAW,CAAC3X,IAAI,EAAEX,KAAK;SACnC,CAAC;;KAET,MACI;MACD+G,KAAK,IAAI,CAACA,KAAK,CAACE,EAAE,IAAI,CAAC/G,iBAAiB,CAACF,KAAK,CAAC,GACzC6Z,SAAS,CAAClZ,IAAI,EAAEX,KAAK,EAAE6J,OAAO,CAAC,GAC/BuN,aAAa,CAACzW,IAAI,EAAEX,KAAK,EAAE6J,OAAO,EAAE,IAAI,CAAC;;IAEnDyM,cAAc,CAAC3V,IAAI,CAAC,IAAI+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC,EAAE,CAAC;IAChDH,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC;MACjBlF;KACH,CAAC;GACL;EACD,MAAMuX,OAAO,GAAG,OAAOvX,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IAC1C,MAAMsQ,UAAU,GAAGrU,qBAAqB,CAACnF,IAAI,CAAC;IAC9C,IAAI4E,OAAO;IACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBP,YAAY,EAAE;KACjB,CAAC;IACF,IAAIqQ,WAAW,CAACqB,QAAQ,EAAE;MACtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAAC/W,WAAW,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAGwZ,UAAU,CAAC;MAC3F5U,OAAO,GAAG5E,IAAI,GACRwZ,UAAU,CAAC7G,KAAK,CAAE3S,IAAI,IAAK,CAACyD,GAAG,CAAC2W,YAAY,EAAEpa,IAAI,CAAC,CAAC,GACpD6D,aAAa,CAACuW,YAAY,CAAC;KACpC,MACI;MACD,IAAIpa,IAAI,EAAE;QACN4E,OAAO,GAAG,CAAC,MAAMyV,OAAO,CAACzY,GAAG,CAAC4X,UAAU,CAACzP,GAAG,CAAC,MAAOsP,SAAS,IAAK;UAC7D,MAAMjT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;UACrC,OAAO,MAAMtD,YAAY,CAAC3P,KAAK,CAACE,EAAE,GAAG;YAAE,CAAC+S,SAAS,GAAGjT;WAAO,GAAGA,KAAK,CAAC;SACvE,CAAC,CAAC,EAAEuM,KAAK,CAACnS,OAAO,CAAC;OACtB,MACI;QACD,MAAMuV,YAAY,CAAC1P,OAAO,CAAC;QAC3BzB,OAAO,GAAGf,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC;;;IAGlDE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG+P,QAAQ,CAACvS,IAAI,CAAC,GAAG;MAAEA;KAAM,GAAG,EAAG,CAAC,EAAE;MAAE6E,MAAM,EAAEP,UAAU,CAACO,MAAM;MAAEF,YAAY,EAAE;KAAO,CAAC,CAAC;IAC5I,IAAIuE,OAAO,CAACC,WAAW,IAAI,CAACvE,OAAO,EAAE;MACjCiE,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAElB,IAAI,GAAGwZ,UAAU,GAAG3S,MAAM,CAACN,KAAK,CAAC;;IAEjGpD,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IACzC,OAAO9I,OAAO;GACjB;EACD,MAAMgnB,aAAa,GAAG,OAAO1iB,OAAO,GAAG;IAAEsiB,UAAU,EAAE;GAAO,EAAExrB,IAAI,KAAK;IACnE,MAAMwZ,UAAU,GAAGrU,qBAAqB,CAACnF,IAAI,CAAC;IAC9C,IAAI4E,OAAO;IACXG,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBP,YAAY,EAAE;KACjB,CAAC;IACF,IAAIqQ,WAAW,CAACqB,QAAQ,EAAE;MACtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAAC/W,WAAW,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAGwZ,UAAU,CAAC;MAC3F5U,OAAO,GAAG5E,IAAI,GACRwZ,UAAU,CAAC7G,KAAK,CAAE3S,IAAI,IAAK,CAACyD,GAAG,CAAC2W,YAAY,EAAEpa,IAAI,CAAC,CAAC,GACpD6D,aAAa,CAACuW,YAAY,CAAC;KACpC,MACI;MACD,IAAIpa,IAAI,EAAE;QACN4E,OAAO,GAAG,CAAC,MAAMyV,OAAO,CAACzY,GAAG,CAAC4X,UAAU,CAACzP,GAAG,CAAC,MAAOsP,SAAS,IAAK;UAC7D,MAAMjT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;UACrC,OAAO,MAAMtD,YAAY,CAAC3P,KAAK,CAACE,EAAE,GAAG;YAAE,CAAC+S,SAAS,GAAGjT;WAAO,GAAGA,KAAK,CAAC;SACvE,CAAC,CAAC,EAAEuM,KAAK,CAACnS,OAAO,CAAC;OACtB,MACI;QACD,MAAMuV,YAAY,CAAC1P,OAAO,EAAE,KAAK,EAAE;UAAEmlB,UAAU,EAAEtiB,OAAO,CAACsiB;SAAY,CAAC;QACtE5mB,OAAO,GAAGf,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC;;;IAGlDE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG+P,QAAQ,CAACvS,IAAI,CAAC,GAAG;MAAEA;KAAM,GAAG,EAAG,CAAC,EAAE;MAAE6E,MAAM,EAAEP,UAAU,CAACO,MAAM;MAAEF,YAAY,EAAE;KAAO,CAAC,CAAC;IAC5I,IAAIuE,OAAO,CAACC,WAAW,IAAI,CAACvE,OAAO,EAAE;MACjCiE,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAElB,IAAI,GAAGwZ,UAAU,GAAG3S,MAAM,CAACN,KAAK,CAAC;;IAEjGpD,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IACzC,OAAO9I,OAAO;GACjB;EACD,MAAM0V,iBAAiB,GAAG,OAAOta,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACpD,MAAMsQ,UAAU,GAAGrU,qBAAqB,CAACnF,IAAI,CAAC;IAC9C,IAAI4E,OAAO;IAIXe,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,SAAS,EAAEtB,UAAU,CAACO,MAAM,CAAC;IACpD,IAAImQ,WAAW,CAACqB,QAAQ,EAAE;MACtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAAC/W,WAAW,CAACnB,IAAI,CAAC,GAAGA,IAAI,GAAGwZ,UAAU,CAAC;MAC3F5U,OAAO,GAAG5E,IAAI,GACRwZ,UAAU,CAAC7G,KAAK,CAAE3S,IAAI,IAAK,CAACyD,GAAG,CAAC2W,YAAY,EAAEpa,IAAI,CAAC,CAAC,GACpD6D,aAAa,CAACuW,YAAY,CAAC;KACpC,MACI;MACD,IAAIpa,IAAI,EAAE;QACN4E,OAAO,GAAG,CAAC,MAAMyV,OAAO,CAACzY,GAAG,CAAC4X,UAAU,CAACzP,GAAG,CAAC,MAAOsP,SAAS,IAAK;UAC7D,MAAMjT,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAEgT,SAAS,CAAC;UAErC,OAAO,MAAMtD,YAAY,CAAC3P,KAAK,CAACE,EAAE,GAAG;YAAE,CAAC+S,SAAS,GAAGjT;WAAO,GAAGA,KAAK,CAAC;SACvE,CAAC,CAAC,EAAEuM,KAAK,CAACnS,OAAO,CAAC;OACtB,MACI;QACDoE,OAAO,GAAG,MAAMmR,YAAY,CAAC1P,OAAO,EAAE,IAAI,CAAC;;;IAKnD,IAAI6C,OAAO,CAACC,WAAW,IAAI,CAACvE,OAAO,EAAE;MACjCiE,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAElB,IAAI,GAAGwZ,UAAU,GAAG3S,MAAM,CAACN,KAAK,CAAC;;IAEjGpD,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IAEzC,OAAO9I,OAAO;GACjB;EACD,MAAMinB,0BAA0B,GAAGA,CAACJ,MAAM,GAAG,KAAK,KAAK,OAAOK,IAAI,GAAG,KAAK,KAAK;IAE3E,IAAIlnB,OAAO;IAIXe,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,oCAAoC,EAAEtB,UAAU,CAACO,MAAM,CAAC;IAC/E,IAAImQ,WAAW,CAACqB,QAAQ,EAAE;MAEtB,MAAM+D,YAAY,GAAG,MAAMlC,yBAAyB,CAACsB,UAAU,CAAC;MAChE5U,OAAO,GAIHf,aAAa,CAACuW,YAAY,CAAC;KAClC,MACI;MASD,IAAI0R,IAAI,EAAE;QACNlnB,OAAO,GAAG,MAAM8mB,sBAAsB,CAACrlB,OAAO,EAAE,KAAK,EAAE;UACnD+R,KAAK,EAAE;SACV,CAAC;OACL,MAAM;QACHxT,OAAO,GAAG,MAAMmR,YAAY,CAAC1P,OAAO,EAAE,IAAI,EAAE;UACxC+R,KAAK,EAAE;SACV,EAAEqT,MAAM,CAAC;;;IAUlBtoB,eAAe,CAACyB,OAAO,IAAI8I,YAAY,EAAE;IAEzC,OAAO9I,OAAO;GACjB;EACD,MAAMsS,SAAS,GAAIsC,UAAU,IAAK;IAE9B,MAAM/S,MAAM,GAAGlE,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEuD,cAAc,CAAC,EAAED,WAAW,CAAC;IAC5E,OAAO3E,WAAW,CAACqY,UAAU,CAAC,GACxB/S,MAAM,GACN8L,QAAQ,CAACiH,UAAU,CAAC,GAChB/V,GAAG,CAACgD,MAAM,EAAE+S,UAAU,CAAC,GACvBA,UAAU,CAACzP,GAAG,CAAE/J,IAAI,IAAKyD,GAAG,CAACgD,MAAM,EAAEzG,IAAI,CAAC,CAAC;GACxD;EACD,MAAMua,WAAW,GAAIva,IAAI,IAAK;IAC1BA,IAAI,GACEmF,qBAAqB,CAACnF,IAAI,CAAC,CAAC8W,OAAO,CAAE0D,SAAS,IAAKpP,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE2V,SAAS,CAAC,CAAC,GACtFlW,UAAU,CAACO,MAAM,GAAG,EAAG;IAC9BE,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBL,MAAM,EAAEP,UAAU,CAACO;KACtB,CAAC;GACL;EACD,MAAM4V,QAAQ,GAAGA,CAACza,IAAI,EAAE2H,KAAK,EAAEuB,OAAO,KAAK;IACvC,MAAMhC,GAAG,GAAG,CAACzD,GAAG,CAAC4C,OAAO,EAAErG,IAAI,EAAE;MAAEsG,EAAE,EAAE;KAAI,CAAC,CAACA,EAAE,IAAI,EAAE,EAAEY,GAAG;IACzDiB,GAAG,CAAC7D,UAAU,CAACO,MAAM,EAAE7E,IAAI,EAAEuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmF,KAAK,CAAC,EAAE;MAAET;KAAK,CAAC,CAAC;IAC9EnC,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBlF,IAAI;MACJ6E,MAAM,EAAEP,UAAU,CAACO,MAAM;MACzBD,OAAO,EAAE;KACZ,CAAC;IACFsE,OAAO,IAAIA,OAAO,CAACC,WAAW,IAAIjC,GAAG,IAAIA,GAAG,CAACE,KAAK,IAAIF,GAAG,CAACE,KAAK,EAAE;GACpE;EACD,MAAMmG,KAAK,GAAGA,CAAC8L,SAAS,EAAExY,YAAY,KAAK2T,UAAU,CAAC6E,SAAS,CAAC,GAC1DtU,SAAS,CAACwI,KAAK,CAACtI,SAAS,CAAC;IACxBC,IAAI,EAAGwV,IAAI,IAAKrB,SAAS,CAACE,SAAS,CAAC7Y,SAAS,EAAEG,YAAY,CAAC,EAAE6Z,IAAI;GACrE,CAAC,GACAnB,SAAS,CAACF,SAAS,EAAExY,YAAY,EAAE,IAAI,CAAC;EAC9C,MAAMmG,UAAU,GAAGA,CAAChH,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACvC,KAAK,MAAMsR,SAAS,IAAIxa,IAAI,GAAGmF,qBAAqB,CAACnF,IAAI,CAAC,GAAG6G,MAAM,CAACN,KAAK,EAAE;MACvEM,MAAM,CAACN,KAAK,CAACoU,MAAM,CAACH,SAAS,CAAC;MAC9B3T,MAAM,CAACC,KAAK,CAAC6T,MAAM,CAACH,SAAS,CAAC;MAC9B,IAAI/W,GAAG,CAAC4C,OAAO,EAAEmU,SAAS,CAAC,EAAE;QACzB,IAAI,CAACtR,OAAO,CAAC0R,SAAS,EAAE;UACpBxP,KAAK,CAAC/E,OAAO,EAAEmU,SAAS,CAAC;UACzBpP,KAAK,CAACtF,WAAW,EAAE0U,SAAS,CAAC;;QAEjC,CAACtR,OAAO,CAAC2R,SAAS,IAAIzP,KAAK,CAAC9G,UAAU,CAACO,MAAM,EAAE2V,SAAS,CAAC;QACzD,CAACtR,OAAO,CAAC4R,SAAS,IAAI1P,KAAK,CAAC9G,UAAU,CAACG,WAAW,EAAE+V,SAAS,CAAC;QAC9D,CAACtR,OAAO,CAAC6R,WAAW,IAAI3P,KAAK,CAAC9G,UAAU,CAACI,aAAa,EAAE8V,SAAS,CAAC;QAClE,CAACxF,WAAW,CAACvP,gBAAgB,IACzB,CAACyD,OAAO,CAAC8R,gBAAgB,IACzB5P,KAAK,CAACrF,cAAc,EAAEyU,SAAS,CAAC;;;IAG5CzV,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC,EAAE,CAAC;IACxBH,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC3C,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE8B,UAAU,CAAC,EAAG,CAAC4E,OAAO,CAAC4R,SAAS,GAAG,EAAE,GAAG;MAAEtW,OAAO,EAAEmT,WAAW;KAAK,CAAC,CAAC;IAC1H,CAACzO,OAAO,CAAC+R,WAAW,IAAIvN,YAAY,EAAE;GACzC;EACD,MAAMwN,gBAAgB,GAAGA,CAAClb,IAAI,EAAEmb,QAAQ,EAAEjS,OAAO,KAAK;IAClDjD,QAAQ,CAACjG,IAAI,EAAEkJ,OAAO,CAAC;IACvB,IAAI9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAC9B,MAAMkH,GAAG,GAAG/F,WAAW,CAACga,QAAQ,CAAC9b,KAAK,CAAC,GACjC8b,QAAQ,CAACC,gBAAgB,GACrBD,QAAQ,CAACC,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,IACvDD,QAAQ,GACNA,QAAQ,GACZA,QAAQ;IACd,MAAMjI,iBAAiB,GAAGmI,yBAAyB,CAACnU,GAAG,CAAC;IACxD,IAAIA,GAAG,KAAKd,KAAK,CAACE,EAAE,CAACY,GAAG,IACnBgM,iBAAiB,IACdnS,OAAO,CAACqF,KAAK,CAACE,EAAE,CAAC2C,IAAI,IAAI,EAAE,CAAC,CAACnF,IAAI,CAAEuM,MAAM,IAAKA,MAAM,KAAKnJ,GAAG,CAAE,EAAE;MACpE;;IAEJd,KAAK,GAAG;MACJE,EAAE,EAAE4M,iBAAiB,GACf3Q,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4D,KAAK,CAACE,EAAE,CAAC,EAAE;QACzC2C,IAAI,EAAE,CACF,GAAGlI,OAAO,CAACqF,KAAK,CAACE,EAAE,CAAC2C,IAAI,IAAI,EAAE,CAAC,CAAC1I,MAAM,CAAE2G,GAAG,IAAK2P,aAAa,CAAC3P,GAAG,CAAC,IAAImI,QAAQ,CAACiM,QAAQ,CAACpU,GAAG,CAAC,CAAC,EAC7FA,GAAG,CACN;QAAEA,GAAG,EAAE;UAAEhI,IAAI,EAAEgI,GAAG,CAAChI,IAAI;UAAEc;;OAC7B,CAAC,GAAGuC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE4D,KAAK,CAACE,EAAE,CAAC,EAAE;QAAEY;OAAK;KAC9D;IACDiB,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAEoG,KAAK,CAAC;IACzB0S,yBAAyB,CAAC9Y,IAAI,EAAEkH,GAAG,CAAC;GACvC;EACD,MAAMjB,QAAQ,GAAGA,CAACjG,IAAI,EAAEkJ,OAAO,GAAG,EAAE,KAAK;IACrC,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;IAEhCmI,GAAG,CAAC9B,OAAO,EAAErG,IAAI,EAAE;MACfsG,EAAE,EAAE/D,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG4D,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;QAAEY,GAAG,EAAE;UAAElH;;OAAS,CAAC,EAAE;QAAEA,IAAI;QAAEuG,KAAK,EAAE;OAAM,CAAC,EAAE2C,OAAO;KACzI,CAAC;IACFvD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAErD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAG4D,KAAK,IAAIA,KAAK,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAE,GAAG;MAAEY,GAAG,EAAE;QAAElH;;KAAS,CAAC,EAAE;MAAEA,IAAI;MAAEuG,KAAK,EAAE;KAAM,CAAC,EAAE2C,OAAO,CAAC,EAAE,wBAAwB,EAAE9C,KAAK,EAAEpG,IAAI,EAAEqG,OAAO,CAAC;IAC3M,IAAI6C,OAAO,CAAC7J,KAAK,EAAE;MACf8I,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEkJ,OAAO,CAAC7J,KAAK,CAAC;;IAEzC,IAAI,CAAC8B,WAAW,CAAC+H,OAAO,CAAChF,QAAQ,CAAC,IAC9BkC,KAAK,IACLA,KAAK,CAACE,EAAE,IACRF,KAAK,CAACE,EAAE,CAACY,GAAG,CAAChD,QAAQ,KAAKgF,OAAO,CAAChF,QAAQ,EAAE;MAC5CiE,GAAG,CAACrC,WAAW,EAAE9F,IAAI,EAAEkJ,OAAO,CAAChF,QAAQ,GAAGxD,SAAS,GAAG0F,KAAK,CAACE,EAAE,CAACY,GAAG,CAAC7H,KAAK,CAAC;;IAE7EwH,MAAM,CAACN,KAAK,CAAC2F,GAAG,CAAClM,IAAI,CAAC;IACtB,CAACoG,KAAK,IAAI0S,yBAAyB,CAAC9Y,IAAI,EAAEU,SAAS,EAAE,IAAI,CAAC;IAC1D,OAAOoU,mBAAiB,GAClB;MAAE9U,IAAI,EAAEA;KAAM,GACduC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC;MAAExC;KAAM,EAAGmB,WAAW,CAAC+H,OAAO,CAAChF,QAAQ,CAAC,GAChE,EAAE,GACF;MAAEA,QAAQ,EAAEgF,OAAO,CAAChF;KAAW,CAAC,EAAE;MACpCzC,QAAQ,EAAE8W,YAAY;MAAE/W,MAAM,EAAE+W,YAAY;MAAErR,GAAG,EAAGA,GAAG,IAAK;QACxD,IAAIA,GAAG,EAAE;UACLgU,gBAAgB,CAAClb,IAAI,EAAEkH,GAAG,EAAEgC,OAAO,CAAC;SACvC,MACI;UACD,MAAM9C,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,EAAE,EAAE,CAAC;UACpC,MAAM2G,iBAAiB,GAAGqO,WAAW,CAACvP,gBAAgB,IAAIyD,OAAO,CAACzD,gBAAgB;UAClF,IAAIW,KAAK,CAACE,EAAE,EAAE;YACVF,KAAK,CAACE,EAAE,CAACC,KAAK,GAAG,KAAK;;UAE1BI,iBAAiB,IACb,EAAEC,kBAAkB,CAACC,MAAM,CAACC,KAAK,EAAE9G,IAAI,CAAC,IAAI+G,WAAW,CAAC,IACxDF,MAAM,CAAC0O,OAAO,CAACrJ,GAAG,CAAClM,IAAI,CAAC;;;KAGvC,CAAC;GACT;EACD,MAAMub,YAAY,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK,MAAOC,CAAC,IAAK;IACtD,IAAIA,CAAC,EAAE;MACHA,CAAC,CAACC,cAAc,IAAID,CAAC,CAACC,cAAc,EAAE;MACtCD,CAAC,CAACE,OAAO,IAAIF,CAAC,CAACE,OAAO,EAAE;;IAE5B,IAAIC,iBAAiB,GAAG,IAAI;IAC5B,IAAIjQ,WAAW,GAAGrJ,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEsD,WAAW,CAAC;IAEhDf,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBiQ,YAAY,EAAE;KACjB,CAAC;IACF,IAAI;MACA,IAAIH,WAAW,CAACqB,QAAQ,EAAE;QACtB,MAAM;UAAExR,MAAM;UAAE4B;SAAQ,GAAG,MAAMsR,eAAe,EAAE;QAClDzT,UAAU,CAACO,MAAM,GAAGA,MAAM;QAC1B+G,WAAW,GAAGnF,MAAM;OACvB,MACI;QACD,MAAMsP,YAAY,CAAC1P,OAAO,CAAC;;MAE/B,IAAIxC,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC,IAChCtC,MAAM,CAACmB,IAAI,CAACY,UAAU,CAACO,MAAM,CAAC,CAAC8N,KAAK,CAAE3S,IAAI,IAAKyD,GAAG,CAACmI,WAAW,EAAE5L,IAAI,CAAC,CAAC,EAAE;QACxE+E,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;UACjBL,MAAM,EAAE,EAAE;UACVsQ,YAAY,EAAE;SACjB,CAAC;QACF,MAAMqG,OAAO,CAAC5P,WAAW,EAAE8P,CAAC,CAAC;OAChC,MACI;QACDD,SAAS,KAAK,MAAMA,SAAS,CAACnX,UAAU,CAACO,MAAM,EAAE6W,CAAC,CAAC,CAAC;QACpD1G,WAAW,CAACH,gBAAgB,IACxBhM,YAAY,CAACxC,OAAO,EAAGnF,GAAG,IAAKuC,GAAG,CAACa,UAAU,CAACO,MAAM,EAAE3D,GAAG,CAAC,EAAE2F,MAAM,CAACN,KAAK,CAAC;;KAEpF,CACD,OAAOuV,GAAG,EAAE;MACRD,iBAAiB,GAAG,KAAK;MACzB,MAAMC,GAAG;KACZ,SACO;MACJxX,UAAU,CAACgO,WAAW,GAAG,IAAI;MAC7BvN,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;QACjBoN,WAAW,EAAE,IAAI;QACjB6C,YAAY,EAAE,KAAK;QACnBC,kBAAkB,EAAEvR,aAAa,CAACS,UAAU,CAACO,MAAM,CAAC,IAAIgX,iBAAiB;QACzE3G,WAAW,EAAE5Q,UAAU,CAAC4Q,WAAW,GAAG,CAAC;QACvCrQ,MAAM,EAAEP,UAAU,CAACO;OACtB,CAAC;;GAET;EACD,MAAMkX,KAAK,GAAGA,CAACtV,MAAM,EAAEuV,gBAAgB,GAAG,EAAE,KAAK;IAC7C,MAAMC,aAAa,GAAGxV,MAAM,IAAIV,cAAc;IAC9C,IAAI6Q,KAAK,IAAI,CAACoF,gBAAgB,CAACE,UAAU,EAAE;MACvC,KAAK,MAAMlc,IAAI,IAAI6G,MAAM,CAACN,KAAK,EAAE;QAC7B,MAAMH,KAAK,GAAG3C,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC;QAChC,IAAIoG,KAAK,IAAIA,KAAK,CAACE,EAAE,EAAE;UACnB,MAAMyM,QAAQ,GAAGvT,KAAK,CAACC,OAAO,CAAC2G,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,GACvC7C,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC,CAAC,CAAC,GAChB7C,KAAK,CAACE,EAAE,CAACY,GAAG;UAClB,IAAI;YACA2P,aAAa,CAAC9D,QAAQ,CAAC,IAAIA,QAAQ,CAACoJ,OAAO,CAAC,MAAM,CAAC,CAACJ,KAAK,EAAE;YAC3D;WACH,CACD,OAAOjK,EAAE,EAAE;;;;IAIvB,IAAI,CAACkK,gBAAgB,CAACI,iBAAiB,EAAE;MACrCrW,cAAc,GAAGxD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;MACjDnW,WAAW,GAAGvD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;;IAElD,IAAI,CAACD,gBAAgB,CAACE,UAAU,EAAE;MAC9B7V,OAAO,GAAG,EAAE;MACZP,WAAW,GAAG,EAAE;MAChBf,SAAS,CAACd,OAAO,CAACiB,IAAI,CAAC;QACnBuB,MAAM,EAAEuV,gBAAgB,CAACI,iBAAiB,GACpCrW,cAAc,GACdxD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa;OACxC,CAAC;MACFlX,SAAS,CAACwI,KAAK,CAACrI,IAAI,CAAC,EAAE,CAAC;MACxBH,SAAS,CAAC+B,KAAK,CAAC5B,IAAI,CAAC;QACjBuB,MAAM,EAAElE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyZ,aAAa,CAAC;QACxCpO,OAAO,EAAE;OACZ,CAAC;;IAENhH,MAAM,GAAG;MACLN,KAAK,EAAE,IAAI+O,GAAG,EAAE;MAChBC,OAAO,EAAE,IAAID,GAAG,EAAE;MAClBxO,KAAK,EAAE,IAAIwO,GAAG,EAAE;MAChB/H,KAAK,EAAE,IAAI+H,GAAG,EAAE;MAChBjI,QAAQ,EAAE;KACb;IACDtI,SAAS,CAACC,KAAK,CAACE,IAAI,CAAC;MACjBgQ,WAAW,EAAE8G,gBAAgB,CAACK,eAAe,GACvC/X,UAAU,CAAC4Q,WAAW,GACtB,CAAC;MACP1Q,OAAO,EAAEwX,gBAAgB,CAAClB,SAAS,GAC7BxW,UAAU,CAACE,OAAO,GAClBwX,gBAAgB,CAACI,iBAAiB,GAC9B/N,SAAS,CAAC5H,MAAM,EAAEV,cAAc,CAAC,GACjC,KAAK;MACfuM,WAAW,EAAE0J,gBAAgB,CAACM,eAAe,GACvChY,UAAU,CAACgO,WAAW,GACtB,KAAK;MACX7N,WAAW,EAAEuX,gBAAgB,CAAClB,SAAS,GAAGxW,UAAU,CAACG,WAAW,GAAG,EAAE;MACrEC,aAAa,EAAEsX,gBAAgB,CAACjB,WAAW,GACrCzW,UAAU,CAACI,aAAa,GACxB,EAAE;MACRG,MAAM,EAAEmX,gBAAgB,CAACO,UAAU,GAAGjY,UAAU,CAACO,MAAM,GAAG,EAAE;MAC5DsQ,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE;KACvB,CAAC;IACFC,UAAU,GAAG,CAAC,CAAC2G,gBAAgB,CAACf,WAAW;GAC9C;EACD,MAAMuB,QAAQ,GAAIxc,IAAI,IAAKyD,GAAG,CAAC4C,OAAO,EAAErG,IAAI,CAAC,CAACsG,EAAE,CAACY,GAAG,CAACE,KAAK,EAAE;EAC5D,OAAO;IACHnD,OAAO,EAAE;MACLgC,QAAQ;MACRe,UAAU;MACV2Q,WAAW;MACX4B,SAAS;MACT7L,YAAY;MACZkM,iBAAiB;MACjBtN,qBAAqB;MACrBL,mBAAmB;MACnBlH,SAAS;MACT4B,iBAAiB,EAAEqO,WAAW,CAACvP,gBAAgB;MAC/CY,OAAO;MACPlD,eAAe;MACf,IAAI2C,WAAWA,GAAG;QACd,OAAOA,WAAW;OACrB;MACD,IAAIA,WAAWA,CAACzG,KAAK,EAAE;QACnByG,WAAW,GAAGzG,KAAK;OACtB;MACD,IAAIgW,UAAUA,GAAG;QACb,OAAOA,UAAU;OACpB;MACD,IAAIA,UAAUA,CAAChW,KAAK,EAAE;QAClBgW,UAAU,GAAGhW,KAAK;OACrB;MACD,IAAI0G,cAAcA,GAAG;QACjB,OAAOA,cAAc;OACxB;MACD,IAAIA,cAAcA,CAAC1G,KAAK,EAAE;QACtB0G,cAAc,GAAG1G,KAAK;OACzB;MACD,IAAIwH,MAAMA,GAAG;QACT,OAAOA,MAAM;OAChB;MACD,IAAIA,MAAMA,CAACxH,KAAK,EAAE;QACdwH,MAAM,GAAGxH,KAAK;OACjB;MACD0H,WAAW,EAAE;QACT,IAAItG,GAAGA,GAAG;UACN,OAAOsG,WAAW;SACrB;QACD,IAAItG,GAAGA,CAACpB,KAAK,EAAE;UACX0H,WAAW,GAAG1H,KAAK;;OAE1B;MACDiF,UAAU,EAAE;QACR,IAAI7D,GAAGA,GAAG;UACN,OAAO6D,UAAU;SACpB;QACD,IAAI7D,GAAGA,CAACpB,KAAK,EAAE;UACXiF,UAAU,GAAGjF,KAAK;;OAEzB;MACDod,YAAY,EAAGvT,OAAO,IAAK;QACvB8L,WAAW,GAAGzS,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEmS,gBAAc,CAAC,EAAEzL,OAAO,CAAC;;KAE9E;IACDqO,OAAO;IACP+C,iBAAiB;IACjBuR,0BAA0B;IAC1BD,aAAa;IACb3lB,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL4M,QAAQ;IACRjD,SAAS;IACT6E,KAAK;IACLxB,WAAW;IACXvT,UAAU;IACVyT,QAAQ;IACR+B;GACH;AACL;;ACv8BO,SAASE,SAAOA,CAAC5Z,KAAK,GAAG,EAAE,EAAE;EAChC,MAAM6Z,YAAY,GAAGja,MAAY,EAAE;EACnC,MAAM,CAACQ,SAAS,EAAEmB,eAAe,CAAC,GAAG3B,QAAc,CAAC;IAChD8B,OAAO,EAAE,KAAK;IACdG,YAAY,EAAE,KAAK;IACnBF,WAAW,EAAE,EAAE;IACf6N,WAAW,EAAE,KAAK;IAClB4C,WAAW,EAAE,CAAC;IACdxQ,aAAa,EAAE,EAAE;IACjByQ,YAAY,EAAE,KAAK;IACnBC,kBAAkB,EAAE,KAAK;IACzBxQ,OAAO,EAAE,KAAK;IACdC,MAAM,EAAE;GACX,CAAC;EACF,IAAI8X,YAAY,CAACtc,OAAO,EAAE;IACtBsc,YAAY,CAACtc,OAAO,CAAC4D,OAAO,CAACwY,YAAY,CAAC3Z,KAAK,CAAC;GACnD,MACI;IACD6Z,YAAY,CAACtc,OAAO,GAAGkC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE+oB,mBAAmB,CAACzoB,KAAK,CAAC,CAAC,EAAE;MAAEI;KAAW,CAAC;;EAEtG,MAAMe,OAAO,GAAG0Y,YAAY,CAACtc,OAAO,CAAC4D,OAAO;EAC5CvB,SAAe,CAAC,MAAM;IAClB,MAAMoC,qBAAqB,GAAGb,OAAO,CAACc,SAAS,CAACC,KAAK,CAACC,SAAS,CAAC;MAC5DC,IAAIA,CAAChC,SAAS,EAAE;QAEZ,IAAImC,qBAAqB,CAACnC,SAAS,EAAEe,OAAO,CAACd,eAAe,EAAE,IAAI,CAAC,EAAE;UACjEc,OAAO,CAACK,UAAU,CAAC7D,GAAG,GAAG8B,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC,EAAEyC,SAAS,CAAC;UAC5FmB,eAAe,CAAC9B,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEyB,OAAO,CAACK,UAAU,CAAC7D,GAAG,CAAC,CAAC;;;KAGrE,CAAC;IACF,MAAMoc,yBAAyB,GAAG5Y,OAAO,CAACc,SAAS,CAAC+B,KAAK,CAAC7B,SAAS,CAAC;MAChEC,IAAIA,CAACF,KAAK,EAAE;QACR,IAAIA,KAAK,CAACyB,MAAM,IAAIzB,KAAK,CAAChF,IAAI,IAAIiE,OAAO,CAACd,eAAe,CAACyB,OAAO,EAAE;UAC/DuD,GAAG,CAAClE,OAAO,CAAC6B,WAAW,EAAEd,KAAK,CAAChF,IAAI,EAAEgF,KAAK,CAACyB,MAAM,CAAC;UAClDxC,OAAO,CAACyJ,YAAY,EAAE;;;KAGjC,CAAC;IACF,OAAO,MAAM;MACT5I,qBAAqB,CAACQ,WAAW,EAAE;MACnCuX,yBAAyB,CAACvX,WAAW,EAAE;KAC1C;GACJ,EAAE,CAACrB,OAAO,CAAC,CAAC;EACbvB,SAAe,CAAC,MAAM;IAClB,MAAMoa,oBAAoB,GAAG,EAAE;IAC/B,IAAI,CAAC7Y,OAAO,CAACoR,UAAU,EAAE;MACrBpR,OAAO,CAACoR,UAAU,GAAG,IAAI;MACzBpR,OAAO,CAACd,eAAe,CAACyB,OAAO,IAAIX,OAAO,CAACyJ,YAAY,EAAE;MACzD,CAAC5K,KAAK,CAAC2C,gBAAgB,IACnBxB,OAAO,CAAC2V,iBAAiB,CAAC3V,OAAO,CAAC8B,cAAc,CAAC;;IAEzD,KAAK,MAAM/F,IAAI,IAAIiE,OAAO,CAAC4C,MAAM,CAAC0O,OAAO,EAAE;MACvC,MAAMnP,KAAK,GAAG3C,GAAG,CAACQ,OAAO,CAACoC,OAAO,EAAErG,IAAI,CAAC;MACxCoG,KAAK,KACAA,KAAK,CAACE,EAAE,CAAC2C,IAAI,GAAG7C,KAAK,CAACE,EAAE,CAAC2C,IAAI,CAAC0J,KAAK,CAACoK,IAAI,CAAC,GAAGA,IAAI,CAAC3W,KAAK,CAACE,EAAE,CAACY,GAAG,CAAC,CAAC,IAChE4V,oBAAoB,CAACpN,IAAI,CAAC1P,IAAI,CAAC;;IAEvC2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEkX,oBAAoB,EAAC,sBAAsB,EAAC7Y,OAAO,CAAC4C,MAAM,EAAC5C,OAAO,CAAC;IAC1F6Y,oBAAoB,CAACnZ,MAAM,IACvBgZ,YAAY,CAACtc,OAAO,CAAC2G,UAAU,CAAC8V,oBAAoB,CAAC;IACzD7Y,OAAO,CAAC4C,MAAM,CAAC0O,OAAO,GAAG,IAAID,GAAG,EAAE;GACrC,CAAC;EACFqH,YAAY,CAACtc,OAAO,CAAC6C,SAAS,GAAGqC,iBAAiB,CAACrC,SAAS,EAAEe,OAAO,CAACd,eAAe,CAAC;EACtF,OAAOwZ,YAAY,CAACtc,OAAO;AAC/B;;AC/CA,MAAMwqB,oBAAkB,GAAGA,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;EAAEmnB,eAAe;EACrDkD,YAAY;EACZtS,SAAS;EACTrS,MAAM;EACN4iB,oBAAoB;EACpBC,UAAU;EACVC,eAAe;aACfjnB,WAAS;EACTgjB,WAAW;EACXrb,KAAK;EACLmgB,MAAM;EACNsC,SAAS,EAATA,UAAS,GAAGpqB,WAAS;EACrB6iB;AACJ,CAAC,KACI;EAED,MAAMwH,iBAAiB,GAAG;IAAE,GAAG5rB,IAAI,CAACa,IAAI,CAAC;IAAE8qB,SAAS,EAATA;GAAW;EAKtD,IAAIC,iBAAiB,KAAKrqB,WAAS,EAAE,OAAO,IAAI;EAIhD,MAAMokB,YAAY,GAAG;IACjBrhB,GAAGA,CAAC5D,MAAM,EAAE0D,IAAI,EAAEwhB,QAAQ,EAAE;MACxB,IAAI,OAAOllB,MAAM,CAAC0D,IAAI,CAAC,KAAK,QAAQ,IAAI1D,MAAM,CAAC0D,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3DoC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE/F,MAAM,CAAC0D,IAAI,CAAC,EAAE,0BAA0B,CAAC;QAChE,OAAO,IAAIyhB,KAAK,CAACnlB,MAAM,CAAC0D,IAAI,CAAC,EAAEuhB,YAAY,CAAC;;MAEhD,OAAOvB,eAAe,CAAC1jB,MAAM,CAAC0D,IAAI,CAAC,EAAEA,IAAI,EAAE1D,MAAM,CAAC,CAAC;QAC/C,GAAG6jB,WAAW,CAAC+B,aAAa;QAC5B/B,WAAW,EAAE;UACT,GAAGA,WAAW;UACdrb;;OAGP,CAAC;;GAET;EAED,MAAM0jB,SAAS,GAAG,IAAI/G,KAAK,CAAC;IACxB,GAAG+F,iBAAiB;IACpBrH,WAAW,EAAEA;GAChB,EAAEoB,YAAY,CAAC;EAIhB,IAAI,CAAAiH,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE5nB,OAAO,MAAK,KAAK,EAAE,OAAO,IAAI;EAE7C,OAAO6mB,qBAAmB,CACtBe,SAAS,EACTzF,eAAe,EACfkD,YAAY,EACZtS,SAAS,EACT;IAAE,GAAGrS;GAAQ,EACb4iB,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfjnB,WAAS,EACTgjB,WAAW,EACXrb,KAAK,EACLlJ,IAAI,EACJqpB,MAAM,EACNjF,eACJ,CAAC;AACL,CAAC;AAED,MAAMyH,qBAAmB,GAAGA,CACxBtlB,IAAI,EACJ4gB,eAAe,EACfiB,SAAS,EACTC,QAAQ,EACRyD,OAAO,EACPxD,oBAAoB,EACpBC,UAAU,EACVC,eAAe,EACfzV,UAAU,EACVwR,WAAW,EACXrb,KAAK,EACLlJ,IAAI,EACJqpB,MAAM,EACNjF,eAAe,KACd;EACD5d,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEqlB,OAAO,EAAE,YAAY,CAAC;EAO7C,MAAM;IACFhlB,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL1I,MAAM;IACNZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRtO,aAAa;IACbmR,QAAQ;IACR1C;GACH,GAAGoJ,WAAW;EAGf,MAAM1jB,IAAI,GAAGkS,UAAU,IAAK,GAAEA,UAAW,IAAGxM,IAAI,CAAC1F,IAAK,EAAC,IAAI0F,IAAI,CAAColB,SAAS,IAAIplB,IAAI,CAAColB,SAAS,IAAIplB,IAAI,CAAC1F,IAAI;EAExG,IAAIc,MAAM,GAAG,IAAI;EACjB,IAAI8mB,KAAK,GAAG,EAAE;EACd,IAAIliB,IAAI,CAACmiB,KAAK,EAAE;IACZD,KAAK,GAAGliB,IAAI,CAACmiB,KAAK,CAAC9d,GAAG,CAAC,CAAC/J,IAAI,EAAEkrB,GAAG,KAAKL,oBAAkB,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;MACjEmnB,eAAe;MACfiB,SAAS;MACTC,QAAQ;MACR3iB,MAAM;MACN4iB,oBAAoB;MACpBC,UAAU;MACVC,eAAe;MACfzV,UAAU,EAAE,CAAAxM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS;MAC5CgjB,WAAW;MACXrb,KAAK,EAAE6iB,GAAG;MACV/rB,IAAI;MACJqpB,MAAM,EAAE;QAAExoB,IAAI,EAAE0F,IAAI,CAAC1F,IAAI;QAAEqI,KAAK;QAAE6X,EAAE,EAAExa,IAAI,CAACwa;OAAI;MAC/CuI,QAAQ,EAAEzoB,IAAI;MACdujB;KACH,CAAC,CAAC;;EAiBP,MAAMuE,UAAU,GAAG;IACf9lB,SAAS,EAAE0D,IAAI,CAAC1D,SAAS,IAAI0D,IAAI,CAAC1D,SAAS,CAAC3C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC1D,SAAS,IAAItB,SAAS;IACvFuB,SAAS,EAAEyD,IAAI,CAACzD,SAAS,IAAIyD,IAAI,CAACzD,SAAS,CAAC5C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACzD,SAAS,IAAIvB,SAAS;IACvFoB,GAAG,EAAE4D,IAAI,CAAC5D,GAAG,IAAI4D,IAAI,CAAC5D,GAAG,CAACzC,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC5D,GAAG,IAAIpB,SAAS;IAC/DqB,GAAG,EAAE2D,IAAI,CAAC3D,GAAG,IAAI2D,IAAI,CAAC3D,GAAG,CAAC1C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAAC3D,GAAG,IAAIrB,SAAS;IAC/DwB,OAAO,EAAEwD,IAAI,CAACxD,OAAO,IAAIwD,IAAI,CAACxD,OAAO,CAAC7C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACxD,OAAO,IAAIxB,SAAS;IAC/EyB,QAAQ,EAAEuD,IAAI,CAACvD,QAAQ,IAAIuD,IAAI,CAACvD,QAAQ,CAAC9C,KAAK,KAAK,EAAE,IAAIqG,IAAI,CAACvD,QAAQ,IAAIzB;GAC7E;EAED,MAAM;IAAE0B,QAAQ,GAAG;GAAI,GAAG,CAAAsD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqiB,IAAI,KAAI;IAAE3lB,QAAQ,EAAE;GAAI;EAExD,IAAIsD,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEqiB,IAAI,EAAE;IACZpiB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAExD,QAAQ,EAAE,WAAW,EAAEshB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+B,aAAa,CAAC;IACzEljB,MAAM,CAACmB,IAAI,CAACtB,QAAQ,CAAC,CAAC0U,OAAO,CAAC5V,GAAG,IAAI;MACjC,IAAI,OAAOkB,QAAQ,CAAClB,GAAG,CAAC,KAAK,UAAU,EAAE;MACzCkB,QAAQ,CAAClB,GAAG,CAAC,GAAGwiB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE+B,aAAa,CAACvkB,GAAG,CAAC,CAACkB,QAAQ,CAAClB,GAAG,CAAC,CAAC,CAAC;QAAE,GAAGwiB,WAAW;QAAEsI,OAAO,EAAEA,MAAMtmB;OAAM,CAAC;MACvGC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAExD,QAAQ,EAAE,kBAAkB,EAAEA,QAAQ,CAAClB,GAAG,CAAC,CAAC;KACtE,CAAC;IACFyE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAExD,QAAQ,EAAE,iBAAiB,CAAC;;EAQvDtB,MAAM,gBACF4B,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;IACP1G,GAAG,EAAEwE,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;IACzDA,IAAI,EAAE0F,IAAI,CAACjG,OAAO,KAAK,IAAI,IAAK,GAAEO,IAAK,WAAU,IAAIA,IAAK;IAC1DiE,OAAO,EAAEA,OAAQ;IACjByB,IAAI,EAAE;MAAC,GAAGA,IAAI;MAAE2C;KAAO;IACvBnC,KAAK,EAAE;MAAE,GAAGR,IAAI,CAACqiB;KAAM,IAAID,UAAW;IAEtCjgB,MAAM,EAAEA,CAAC;MAAEzB;KAAO,KAAK;MAEnB,IAAIV,IAAI,CAACjG,OAAO,EAAE;QACdkG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE5F,IAAI,EAAE0F,IAAI,CAACmiB,KAAK,EAAE,eAAe,CAAC;QACzD,MAAM;UAAE/e,MAAM;UAAEmB,MAAM;UAAE0C;SAAQ,GAAGd,aAAa,CAAC;UAC7C5H,OAAO;UACPjE,IAAI,EAAEA,IAAI;UACVkG,KAAK,EAAE;YAAE,GAAGR,IAAI,CAACqiB;WAAM,IAAID;SAC9B,CAAC;QAEFF,KAAK,gBACDllB,cAAA,CAAA+jB,aAAA,2BACI/jB,cAAA,CAAA+jB,aAAA,aACK3d,MAAM,CAACiB,GAAG,CAAC,CAACwb,EAAE,EAAEld,KAAK,kBAClB3F,cAAA,CAAA+jB,aAAA;UAAIvlB,GAAG,EAAEqkB,EAAE,CAACrF;WACPxa,IAAI,CAACmiB,KAAK,CAAC9d,GAAG,CAAC,CAAC9K,OAAO,EAAEgpB,IAAI,kBAC1BvlB,cAAA,CAAA+jB,aAAA,CAAC7e,UAAU;UACP1G,GAAG,EAAG,GAAElB,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK,EAAE;UAC9CA,IAAI,EAAG,GAAEA,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK,EAAE;UAC/CiE,OAAO,EAAEA,OAAQ;UACjB4D,MAAM,EAAEA,CAAC;YAAEzB;WAAO,KAAK;YACnBT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAG,GAAE5F,IAAK,IAAGqI,KAAM,IAAGpJ,OAAQ,EAAC,EAAE,+BAA+B,CAAC;YACtF,OAAO4rB,oBAAkB,CAAC5rB,OAAO,EAAE;cAAC,GAAGE,IAAI;cAAEkJ;aAAM,EAAE;cACjDie,eAAe;cACfiB,SAAS;cACTC,QAAQ;cACR3iB,MAAM;cACN4iB,oBAAoB;cACpBC,UAAU;cACVC,eAAe;cACfzV,UAAU,EAAE,CAAAxM,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmiB,KAAK,KAAI7nB,IAAI,IAAIU,SAAS;cAC5CgjB,WAAW,EAAE;gBACT,GAAGA,WAAW;gBAEdzZ,MAAM;gBACN0C,MAAM,EAAEA,MAAMA,MAAM,CAACtE,KAAK;eAC7B;cACDA,KAAK,EAAEA,KAAK;cACZlJ,IAAI;cACJqpB,MAAM,EAAE;gBAAExoB,IAAI,EAAE0F,IAAI,CAAC1F,IAAI;gBAAEqI,KAAK;gBAAE6X,EAAE,EAAExa,IAAI,CAACwa;eAAI;cAC/C4K,SAAS,EAAG,GAAE9qB,IAAK,IAAGqI,KAAM,IAAGlJ,IAAI,CAACF,OAAO,CAAC,CAACe,IAAK,EAAC;cACnDujB;aACH,CAAC;;SAaT,CACJ,CAAC,eACF7gB,cAAA,CAAA+jB,aAAA;UAAQvnB,IAAI,EAAC,QAAQ;UAACipB,OAAO,EAAEA,MAAMxb,MAAM,CAACtE,KAAK;WAAG,GAAS,CAC7D,CACP,CAED,CAAC,eAOL3F,cAAA,CAAA+jB,aAAA;UACIvnB,IAAI,EAAC,QAAQ;UAEbipB,OAAO,EAAEA,MAAMle,MAAM,CAAC,EAAE;WAE3B,GAEO,CACP,CAAC;;MA2Bd,MAAMie,SAAS,GAAGR,UAAU,CAAChiB,IAAI,CAACxG,IAAI,EAAE;QACpCkH,KAAK;QAELV,IAAI;QACJ1F,IAAI;QACJqI,KAAK;QACLsf,eAAe;QACfC,KAAK;QACL/b,aAAa;QACblE,KAAK,EAAE9C,MAAM;QACb6e,WAAW;QACX8E;OACH,CAAC;MAEF,OAAON,SAAS;;GAGvB,CACJ;EAKD,OAAOpnB,MAAM;AACjB,CAAC;AAED,AAoLA,MAAMynB,gBAAc,GAAGA,CAACzhB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,EAAE/oB,OAAO,KAAK;EAG1D,MAAMqB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAErD,MAAMkI,QAAQ,GAAGhpB,OAAO,KAAKiB,SAAS,IAAIgF,IAAI,CAACxE,GAAG,CAAC,IAAK,GAAEsnB,MAAO,MAAK9iB,IAAI,CAACxE,GAAG,CAAE,EAAC;IAGjF,MAAMwnB,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC8nB,QAAQ,GAAG;QACR,GAAG/iB,IAAI;QACP1F,IAAI,EAAEyoB,QAAQ;QACdC,KAAK;QACL,IAAIF,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,gBAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,EAAEwE,IAAI,CAACjG,OAAO,CAAC;KACrG;GACJ,EAAE,IAAIka,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,MAAM6nB,YAAU,GAAGA,CAAC7hB,KAAK,EAAE5F,GAAG,EAAElB,IAAI,EAAEwoB,MAAM,KAAK;EAG7C,MAAM1nB,MAAM,GAAGgG,KAAK,CAAC7F,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,EAAE6a,YAAY,KAAK;IAGrD,MAAMmI,KAAK,GAAI1oB,IAAI,IAAK,GAAEA,IAAK,UAASugB,YAAa,GAAE,IAAM,IAAGA,YAAa,GAAE;IAC/E,OAAO;MACH,GAAG5f,GAAG;MAEN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAG;QACT,GAAGwE,IAAI;QACPgjB,KAAK;QACLrpB,KAAK,EAAE,EAAE;QACT,IAAImpB,MAAM,IAAI;UAAEA;SAAQ;OAC3B;MAED,IAAI9iB,IAAI,CAACmiB,KAAK,KAAKnnB,SAAS,IAAI6nB,gBAAc,CAAC7iB,IAAI,CAACmiB,KAAK,EAAE,MAAM,EAAEa,KAAK,EAAEhjB,IAAI,CAACxE,GAAG,CAAC,CAAC;KACvF;GACJ,EAAE,IAAIyY,GAAG,EAAE,CAAC;EAEb,OAAO7Y,MAAM;AACjB,CAAC;AAED,AAmBA,MAAM8nB,0BAAwB,GAAGA,CAACf,KAAK,EAAE3mB,GAAG,KAAK;EAG7C,MAAM2nB,YAAY,GAAG,IAAIlP,GAAG,EAAE;EAE9BpX,MAAM,CAACmB,IAAI,CAACmkB,KAAK,CAAC,CAAC/Q,OAAO,CAAE5V,GAAG,IAAK;IAChC,IAAI2mB,KAAK,CAAC3mB,GAAG,CAAC,CAACqM,KAAK,EAAE;MAClBsb,YAAY,CAAC1gB,GAAG,CAAC0f,KAAK,CAAC3mB,GAAG,CAAC,CAAClB,IAAI,CAAC;;IAErC,IAAI6nB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE;MACzB,MAAMC,eAAe,GAAGC,sBAAoB,CAACnB,KAAK,CAAC3mB,GAAG,CAAC,CAAC4nB,YAAY,EAAE,OAAO,CAAC;MAM9E,MAAMplB,IAAI,GAAGnB,MAAM,CAACmB,IAAI,CAACqlB,eAAe,CAAC;MACzC,KAAK,IAAI1gB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG3E,IAAI,CAACC,MAAM,EAAE0E,KAAK,EAAE,EAAE;QAC9C,MAAM4gB,YAAY,GAAGF,eAAe,CAACrlB,IAAI,CAAC2E,KAAK,CAAC,CAAC;QACjD1C,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEiiB,KAAK,CAAC3mB,GAAG,CAAC,EAAE,YAAY,CAAC;QAChD2nB,YAAY,CAAC1gB,GAAG,CAAC8gB,YAAY,CAACjpB,IAAI,EAAE,CAChC,IAAK6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAI6oB,YAAY,CAACplB,GAAG,CAACwlB,YAAY,CAACjpB,IAAI,CAAC,IAAK,EAAE,CAAC,EACvF;UAAE0oB,KAAK,EAAEb,KAAK,CAAC3mB,GAAG,CAAC,CAACgf,EAAE;UAAE,GAAG+I;SAAc,CAC5C,CAAC;;;GA2Bb,CAAC;EAEF,OAAOJ,YAAY;AACvB,CAAC;AAED,MAAMG,sBAAoB,GAAGA,CAACliB,KAAK,EAAE5F,GAAG,EAAE7B,KAAK,KAAK;EAChD,MAAMwpB,YAAY,GAAG,EAAE;EACvB,IAAI,CAACrpB,KAAK,CAACC,OAAO,CAACqH,KAAK,CAAC,EAAE;EAC3B,MAAMoiB,UAAU,GAAGpiB,KAAK,CAACqiB,MAAM,EAAE;EACjC,OAAOD,UAAU,CAACjoB,MAAM,CAAC,CAACN,GAAG,EAAE+E,IAAI,KAAK;IACpC,OAAO;MACH,GAAG/E,GAAG;MACN,CAAC+E,IAAI,CAACxE,GAAG,CAAC,GAAI7B,KAAK,IAAIqG,IAAI,CAACrG,KAAK,CAAC,IAAMA,KAAK,KAAKqB,SAAS,IAAIgF,IAAK,IAAI;KAC3E;GACJ,EAAEmjB,YAAY,CAAC;AACpB,CAAC;AAED,AAuBA,IAAIO,aAAW,GAAG,CAAC;AACnB,MAAM+B,iBAAe,GAAGzoB,cAAK,CAAC4mB,UAAU,CAAC,CAAC;EAAEzB,KAAK;EAC7C0B,kBAAkB;EAElB9B,oBAAoB;EACpBC,UAAU;EACVC,eAAe;EACflC,aAAa;EACbhgB,gBAAgB,EAAhBA,iBAAgB,GAAG,IAAI;EACvBuM,aAAa,EAAbA,cAAa,GAAG,EAAE;EAClBia,OAAO,EAAPA,QAAO,GAAG,KAAK;EACf1I,eAAe,EAAfA,gBAAe,GAAG2I,eAAsB;EACxCzI;AAEJ,CAAC,EAAEvc,GAAG,KAAK;EAAA,IAAAkkB,UAAA,EAAAC,gBAAA;EAEP,IAAI,CAACY,QAAO,EAAE;IACVtmB,OAAO,CAACC,GAAG,GAAI,YAAY;MACvB,MAAMA,GAAG,GAAGD,OAAO,CAACC,GAAG;MAEvB,OAAO,YAAY;QACf,MAAMqI,IAAI,GAAGzO,KAAK,CAAC6K,IAAI,CAAC8hB,SAAS,CAAC;QAClC,IAAI,CAACle,IAAI,CAAC7I,QAAQ,CAAC,SAAS,CAAC,EAAE;UAC3BQ,GAAG,CAACwmB,KAAK,CAACzmB,OAAO,EAAEsI,IAAI,CAAC;;OAE/B;KACJ,EAAG;;EAIR,MAAM6W,YAAY,GAAG;IACjBrhB,GAAGA,CAAC5D,MAAM,EAAE0D,IAAI,EAAEwhB,QAAQ,EAAE;MACxB,IAAI,OAAOllB,MAAM,CAAC0D,IAAI,CAAC,KAAK,QAAQ,IAAI1D,MAAM,CAAC0D,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3DoC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE/F,MAAM,CAAC0D,IAAI,CAAC,EAAE,6BAA6B,CAAC;QACnE,OAAO,IAAIyhB,KAAK,CAACnlB,MAAM,CAAC0D,IAAI,CAAC,EAAEuhB,YAAY,CAAC;;MAEhD,OAAOvB,gBAAe,CAAC1jB,MAAM,CAAC0D,IAAI,CAAC,EAAEA,IAAI,EAAE1D,MAAM,CAAC,CAAC;QAC/C,GAAG4lB,aAAa;QAChB/B,WAAW,EAAE;UAAED;;OAElB,CAAC;;GAET;EAED,MAAM4I,kBAAkB,GAAG,IAAIrH,KAAK,CAAC;IACjC,GAAGhT;GACN,EAAE8S,YAAY,CAAC;EAEhBnf,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEoM,cAAa,EAAE,eAAe,EAAE;IAAE,GAAGqa;GAAoB,EAAE5I,SAAS,CAAC;EAG5F,MAAM;IACFxd,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACLrK,SAAS,EAAE;MAAE2B,MAAM;MAAEL,OAAO;MAAEI;KAAS;IACvCX,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRG,iBAAiB;IACjBuR,0BAA0B;IAC1BD,aAAa;IACb5kB,UAAU;IACVuT,WAAW;IACXwB;GACH,GAAGW,SAAO,CAAC;IACR7N,IAAI,EAAE,UAAU;IAChBpJ,gBAAgB,EAAE,IAAI;IACtBmP,cAAc,EAAE,UAAU;IAoB1B5C,aAAa,EAAE;MAAE,GAAGqa;;GACvB,CAAC;EAEF3pB,cAAK,CAAC+d,SAAS,CAAC,MAAM;IAClB1E,KAAK,CAAC;MAAE,GAAGsQ;KAAoB,CAAC;GACnC,EAAE,CAACra,cAAa,CAAC,CAAC;EAGnB,MAAM0R,WAAW,GAAG;IAChBzd,QAAQ;IACRsV,YAAY;IACZhO,KAAK;IACL1I,MAAM;IACNZ,OAAO;IACPsT,OAAO;IACPiF,QAAQ;IACRtF,SAAS;IACTiD,QAAQ;IACRtO,aAAa;IACbmR,QAAQ;IACR1C,iBAAiB;IACjBuR,0BAA0B;IAC1B7kB,UAAU;IACVye,aAAa,EAAE;MACX,GAAGA,aAAa;MAChB1J,KAAK,EAAEA,KAAK;MACZzB,iBAAiB,EAAEA,MAAM,CAAC8D,CAAC,CAACjL,OAAO,CAACtO,MAAM,CAAC;MAC3CqS,SAAS;MACT2U,0BAA0B,EAAGJ,MAAM,IAAK;QAEpC,MAAM3qB,MAAM,GAAG+qB,0BAA0B,CAACJ,MAAM,CAAC,EAAE,CAAC1H,IAAI,CAACra,CAAC,IAAIA,CAAC,CAAC;QAChE/D,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE9E,MAAM,CAAC;QAC9B,OAAOA,MAAM;OAChB;MACDwrB,YAAY,EAAE,MAAOC,SAAS,IAAK;QAC/B,MAAMZ,WAAW,GAAG,MAAME,0BAA0B,EAAE,CAAC,IAAI,CAAC;QAS5D,IAAI/qB,MAAM,GAAG,IAAI;QACjB,KAAK,IAAI6J,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4hB,SAAS,CAAC5oB,MAAM,EAAEgH,CAAC,EAAE,EAAE;UACvC,MAAMjF,IAAI,GAAG6mB,SAAS,CAAC5hB,CAAC,CAAC;UACzB,MAAM6hB,WAAW,GAAGb,WAAW,CAACjmB,IAAI,CAAC;UACrC,IAAI8mB,WAAW,EAAE;YAEb1rB,MAAM,GAAG,KAAK;YACd;;;QAIR,OAAOA,MAAM;;KAEpB;IACD2iB,SAAS;IAETlJ;GACH;EAGD,MAAMiP,YAAY,GAAG9mB,cAAK,CAAC+mB,MAAM,EAAE;EAEnC,MAAMC,kBAAkB,GAAGhnB,cAAK,CAAC+mB,MAAM,EAAE;EACzC,MAAME,iBAAiB,GAAGjnB,cAAK,CAAC+mB,MAAM,EAAE;EAGxC,MAAM,CAACtqB,IAAI,EAAEyqB,OAAO,CAAC,GAAGjM,QAAQ,EAAE;EAElCjb,cAAK,CAAC+d,SAAS,CAAC,MAAM;IAClB,IAAIoH,KAAK,KAAKnnB,SAAS,EAAE;IAUzB8oB,YAAY,CAACnpB,OAAO,GAAGwnB,KAAK;IAE5B6B,kBAAkB,CAACrpB,OAAO,GAAGuoB,0BAAwB,CAACY,YAAY,CAACnpB,OAAO,CAAC;IAC3EsF,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,EAAE,0BAA0B,CAAC;IAChE7jB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE8jB,kBAAkB,EAAE,0BAA0B,EAAE,CAAC,GAAGA,kBAAkB,CAACrpB,OAAO,CAACqD,IAAI,EAAE,CAAC,CAAC;IAE9G,MAAMoM,YAAY,GAAGvC,KAAK,CAAC,OAAOlO,KAAK,EAAE;MAAEW,IAAI;MAAEd;KAAM,KAAK;MAOxD,IAAIwqB,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC,EAAE;QACtC,MAAMysB,SAAS,GAAGlqB,MAAM,CAACC,MAAM,CAACnD,KAAK,EAAEokB,SAAS,CAAC;QACjD9d,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,8CAA8C,EAAEvG,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAEC,IAAI,EAAE0oB,KAAK,CAAC;QAEtG,MAAM,CAAC/c,CAAC,EAAEC,CAAC,CAAC,GAAG,MAAM8e,iBAAiB,CAAC7pB,IAAI,EAAEysB,SAAS,CAACzsB,IAAI,CAAC,EAAE6nB,KAAK,CAAC;QAEpE,IAAI,CAACxZ,SAAS,CAAClP,IAAI,EAAE4L,CAAC,CAAC,IAAID,CAAC,EAAE;UAC1B8e,OAAO,CAAC;YAAE,GAAG7e;WAAG,CAAC;UACjB;;OAEP,MAAM,IAAI2e,kBAAkB,CAACrpB,OAAO,CAACuV,GAAG,CAAC5V,IAAI,CAAC,EAAE;QAC7C2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE8jB,kBAAkB,CAACrpB,OAAO,CAACuV,GAAG,CAAC5V,IAAI,CAAC,EAAE,+CAA+C,EAAEX,KAAK,EAAEW,IAAI,EAAEd,IAAI,EAAE;UAAEC;SAAM,EAAE0oB,KAAK,CAAC;QACjJ+B,OAAO,CAAC;UAAE,GAAG/B;SAAO,CAAC;QACrB;;KAEP,CAAC;IAEF+B,OAAO,CAAC/B,KAAK,CAAC;GACjB,EAAE,CAACA,KAAK,CAAC,CAAC;EAMX,MAAMiC,WAAW,GAAGA,MAAM;IACtBN,YAAY,CAACnpB,OAAO,GAAGsoB,YAAU,CAACd,KAAK,EAAE,MAAM,CAAC;IAChD+B,OAAO,CAAC/B,KAAK,CAAC;GACjB;EAmBD,MAAMkC,YAAY,GAAG,OAAO7gB,OAAO,GAAG;IAACsiB,UAAU,EAAE;GAAM,KAAK;IAE1D,IAAIjpB,MAAM,CAACmB,IAAI,CAACmB,MAAM,CAAC,CAAClB,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;IAChD,MAAM7C,MAAM,GAAG,MAAM8qB,aAAa,CAAC1iB,OAAO,CAAC;IAC3CvD,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAE9E,MAAM,EAAE+D,MAAM,EAAEqE,OAAO,CAAC;IACvF,IAAIpI,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,MAAMoW,SAAS,EAAE;KAC3B,MAAM;MACH,OAAO,KAAK;;GAEnB;EAMDhQ,GAAG,CAAC7G,OAAO,GAAG;IACVqsB,gBAAgB,EAAE,MAAO5pB,KAAK,IAAK;MAC/B,MAAMsV,KAAK,GAAG,MAAMsL,WAAW,CAAC+B,aAAa,CAAC6G,YAAY,CAACxpB,KAAK,CAAC;MACjE,IAAIsV,KAAK,EAAE;QACP,MAAMtX,MAAM,GAAG,MAAMoW,SAAS,EAAE;QAChC,OAAOpW,MAAM;;MAEjB,OAAOsX,KAAK;KAEf;IACDlB,SAAS,EAAGhO,OAAO,IAAK6gB,YAAY,CAAC7gB,OAAO,CAAC;IAC7CyjB,wBAAwB,EAAE,MAAO7pB,KAAK,IAAK;MACvC6C,OAAO,CAACC,GAAG,CAAC9C,KAAK,EAAE,2DAA2D,CAAC;MAC/E,IAAItD,KAAK,CAACC,OAAO,CAACqD,KAAK,CAAC,EAAE;QACtB,MAAMsV,KAAK,GAAG,MAAMsL,WAAW,CAAC+B,aAAa,CAAC6G,YAAY,CAACxpB,KAAK,CAAC;QACjE,IAAIsV,KAAK,EAAE;UACP,MAAMtX,MAAM,GAAG,MAAMoW,SAAS,EAAE;UAChC,OAAOpW,MAAM;;QAEjB,OAAOsX,KAAK;;MAEhB,OAAO2R,YAAY,EAAE;KACxB;IACD6C,mBAAmB,EAAE,OAAO9E,UAAU,GAAG,IAAI,KAAK;MAC9C,IAAIA,UAAU,EAAE;QACZ,IAAIvlB,MAAM,CAACmB,IAAI,CAACmB,MAAM,CAAC,CAAClB,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK;QAChD,MAAM7C,OAAM,GAAG,MAAM+qB,0BAA0B,EAAE,CAAC,IAAI,CAAC;QACvDlmB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,sCAAsC,EAAE9E,OAAM,EAAE+D,MAAM,CAAC;QAC9E,IAAIuZ,CAAC,CAACjL,OAAO,CAACrS,OAAM,CAAC,EAAE;UACnB,OAAO,MAAMoW,SAAS,EAAE;SAC3B,MAAM;UACH,OAAO,KAAK;;;MAGpB,MAAMpW,MAAM,GAAG,MAAMoW,SAAS,EAAE;MAChC,OAAOpW,MAAM;KAChB;IACDgpB,WAAW,EAAEA,WAAW;IACxB3P,QAAQ,EAAEA,QAAQ;IAClBtV,MAAM,EAAEA,MAAM;IACdkX,KAAK;IACLxB,WAAW;IACXkL,aAAa,EAAE/B,WAAW,CAAC+B;GAC9B;EAED,MAAMuE,cAAc,GAAG,OAAOhqB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAElD,MAAMmpB,aAAa,GAAGT,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC;IAChD,IAAIkqB,CAAC,GAAGppB,MAAM;IACd,MAAMqpB,cAAc,GAAG;MAAE,GAAGtlB,MAAM,CAACxE;KAAS,IAAI,EAAE;IAClD,MAAM+pB,SAAS,GAAGvlB,MAAM,CAACxE,OAAO,IAAI,EAAE;IAKtC,IAAIhB,KAAK,KAAK,EAAE,EAAE;MACd,MAAMsI,MAAK,GAAGtI,KAAK,KAAK,KAAK;MAC7B,IAAIsI,MAAK,EAAE;QACPyiB,SAAS,CAACpqB,IAAI,CAAC,GAAG;UACd2H,KAAK,EAALA,MAAK;UACL0iB,QAAQ,EAAEJ,aAAa,CAACI,QAAQ,IAAIJ,aAAa,CAACI,QAAQ,IAAI;SACjE;OACJ,MAAM;QACH,OAAOD,SAAS,CAACpqB,IAAI,CAAC;;KAI7B,MAAM;MACH,OAAOoqB,SAAS,CAACpqB,IAAI,CAAC;;IAI1B6E,MAAM,CAACxE,OAAO,GAAG;MAAE,GAAG+pB;KAAW;IAEjCzkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEf,MAAM,EAAE,aAAa,EAAEulB,SAAU,CAAC;IAgBzD,OAAO,CAAC,CAAChM,CAAC,CAACI,OAAO,CAAC2L,cAAc,EAAEC,SAAS,CAAC,EAAE,CAAC,GAAGF,CAAC,CAAC,EAAEE,SAAS,CAACpqB,IAAI,CAAC,CAAC;GAC1E;EAED,MAAMsmB,eAAe,GAAG,OAAOjnB,KAAK,EAAEW,IAAI,KAAK;IAG3CwpB,YAAY,CAACnpB,OAAO,CAACL,IAAI,CAAC,CAACX,KAAK,GAAGA,KAAK;IAGxCsG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE4jB,YAAY,CAACnpB,OAAO,EAAE,WAAW,EAAE,MAAM0pB,YAAY,EAAE,CAAC;IAG/E,MAAM,CAACO,oBAAoB,EAAExpB,MAAM,EAAE6G,KAAK,CAAC,GAAG,MAAMqiB,cAAc,CAAChqB,IAAI,EAAEX,KAAK,EAAE;MAAE,GAAGF;KAAM,CAAC;IAC5F,MAAM,CAACorB,sBAAsB,EAAEC,SAAS,CAAC,GAAG,MAAMX,iBAAiB,CAAC7pB,IAAI,EAAEX,KAAK,EAAEF,IAAI,CAAC;IAGtF,IAAImrB,oBAAoB,KAAK,IAAI,IAAIC,sBAAsB,KAAK,IAAI,EAAE;MAGlE5kB,OAAO,CAACC,GAAG,CAAC,SAAS,EACjB,4BAA4B,EAC5B0kB,oBAAoB,EACpBC,sBAAsB,EACtB1lB,MACJ,CAAC;MACD+kB,OAAO,CAAC;QAAE,GAAGY;OAAW,CAAC;;GAMhC;EAED,MAAMX,iBAAiB,GAAG,OAAO7pB,IAAI,EAAEX,KAAK,EAAEyB,MAAM,KAAK;IAErD,MAAM2pB,YAAY,GAAGf,kBAAkB,CAACrpB,OAAO,CAACoD,GAAG,CAACzD,IAAI,CAAC;IAEzD2F,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEzG,IAAI,EAAE,yBAAyB,EAAEa,IAAI,EAAEwpB,YAAY,CAACnpB,OAAO,EAAEoqB,YAAY,EAAEf,kBAAkB,CAACrpB,OAAO,CAAC;IAO7H,IAAI6pB,CAAC,GAAG;MAAE,GAAGppB;KAAQ;IAErB,IAAI4pB,OAAO,GAAG,KAAK;IAEnB,IAAID,YAAY,KAAK/pB,SAAS,EAAE;MAQ5B,MAAM+pB,YAAY,CAAC1gB,GAAG,CAAC,MAAOrE,IAAI,IAAK;QACnC,MAAMilB,SAAS,GAAGtrB,KAAK,IAAIA,KAAK,CAAC,OAAO,CAAC,IAAIA,KAAK;QAClD,MAAMurB,OAAO,GAAG,CAAAllB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAExG,IAAI,MAAK,MAAMqqB,kBAAkB,CAAC7jB,IAAI,CAACxG,IAAI,CAAC,CAACwG,IAAI,EAAEilB,SAAS,CAAC,CAAC;QAOpF,MAAMhgB,CAAC,GAAGuf,CAAC,CAACxkB,IAAI,CAACgjB,KAAK,CAAC;QACvB/iB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEskB,CAAC,CAAC,WAAW,CAAC,EAAE,oBAAoB,EAAE,OAAO,EAAEvf,CAAC,CAAC;QACxE,IAAIA,CAAC,KAAKjK,SAAS,IAAIiK,CAAC,CAACxG,OAAO,KAAKymB,OAAO,EAAE;UAC1CV,CAAC,CAACxkB,IAAI,CAACgjB,KAAK,CAAC,CAACvkB,OAAO,GAAGymB,OAAO;UAC/BF,OAAO,GAAG,IAAI;;OAgBrB,CAAC;;IAEN,OAAO,CAACA,OAAO,EAAER,CAAC,CAAC;GAEtB;EAEDvkB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,aAAa,EAAEwjB,aAAW,EAAE,CAAC;EAEpD,OACKjqB,IAAI,MAAAisB,UAAA,GAAIjsB,IAAI,CAACmsB,IAAI,cAAAF,UAAA,wBAAAC,gBAAA,GAATD,UAAA,CAAWvD,KAAK,cAAAwD,gBAAA,uBAAhBA,gBAAA,CAAkBthB,GAAG,CAAC,CAAC/J,IAAI,EAAEqI,KAAK,KAAKwiB,oBAAkB,CAAC7qB,IAAI,EAAEb,IAAI,EAAE;IAC3EmnB,eAAe;IACfkD,YAAY;IACZtS,SAAS;IACTrS,MAAM;IACN4iB,oBAAoB;IACpBC,UAAU;IACVC,eAAe;IACfjnB,SAAS;IACTgjB,WAAW;IACXrb,KAAK;IACLkb,eAAe,EAAfA;GACH,CACD,CAAC,KAAK,IAAI;AAsBlB,CAAC,CAAC;AAEF4H,iBAAe,CAAC7C,eAAe,GAAG,IAAI;AACtC6C,iBAAe,CAACxoB,WAAW,GAAG,iBAAiB;;;;"}